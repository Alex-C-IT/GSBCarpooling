//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GSBCarpooling {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("gsbcarpoolingDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class gsbcarpoolingDataSet : global::System.Data.DataSet {
        
        private CARBURANTDataTable tableCARBURANT;
        
        private ETAPEDataTable tableETAPE;
        
        private PAYSDataTable tablePAYS;
        
        private PROPOSERDataTable tablePROPOSER;
        
        private RESERVERDataTable tableRESERVER;
        
        private TRAJETDataTable tableTRAJET;
        
        private TYPE_UTILISATEURDataTable tableTYPE_UTILISATEUR;
        
        private TYPE_VEHICULEDataTable tableTYPE_VEHICULE;
        
        private UTILISATEURDataTable tableUTILISATEUR;
        
        private VEHICULEDataTable tableVEHICULE;
        
        private VILLEDataTable tableVILLE;
        
        private global::System.Data.DataRelation relationFK__ETAPE__5441852A;
        
        private global::System.Data.DataRelation relationFK__ETAPE__Trajet_Id__534D60F1;
        
        private global::System.Data.DataRelation relationFK__PROPOSER__Trajet__5812160E;
        
        private global::System.Data.DataRelation relationFK__PROPOSER__Utilis__59063A47;
        
        private global::System.Data.DataRelation relationFK__PROPOSER__Vehicu__571DF1D5;
        
        private global::System.Data.DataRelation relationFK__RESERVER__Trajet__5CD6CB2B;
        
        private global::System.Data.DataRelation relationFK__RESERVER__Utilis__5BE2A6F2;
        
        private global::System.Data.DataRelation relationFK__TRAJET__Vehicule__5070F446;
        
        private global::System.Data.DataRelation relationFK_TRAJET_UTILISATEUR;
        
        private global::System.Data.DataRelation relationFK__UTILISATE__TypeU__46E78A0C;
        
        private global::System.Data.DataRelation relationFK__UTILISATEUR__45F365D3;
        
        private global::System.Data.DataRelation relationFK__VEHICULE__Carbur__4BAC3F29;
        
        private global::System.Data.DataRelation relationFK__VEHICULE__TypeVe__4D94879B;
        
        private global::System.Data.DataRelation relationFK__VEHICULE__Utilis__4CA06362;
        
        private global::System.Data.DataRelation relationFK__VILLE__Pays_Id__403A8C7D;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public gsbcarpoolingDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected gsbcarpoolingDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["CARBURANT"] != null)) {
                    base.Tables.Add(new CARBURANTDataTable(ds.Tables["CARBURANT"]));
                }
                if ((ds.Tables["ETAPE"] != null)) {
                    base.Tables.Add(new ETAPEDataTable(ds.Tables["ETAPE"]));
                }
                if ((ds.Tables["PAYS"] != null)) {
                    base.Tables.Add(new PAYSDataTable(ds.Tables["PAYS"]));
                }
                if ((ds.Tables["PROPOSER"] != null)) {
                    base.Tables.Add(new PROPOSERDataTable(ds.Tables["PROPOSER"]));
                }
                if ((ds.Tables["RESERVER"] != null)) {
                    base.Tables.Add(new RESERVERDataTable(ds.Tables["RESERVER"]));
                }
                if ((ds.Tables["TRAJET"] != null)) {
                    base.Tables.Add(new TRAJETDataTable(ds.Tables["TRAJET"]));
                }
                if ((ds.Tables["TYPE_UTILISATEUR"] != null)) {
                    base.Tables.Add(new TYPE_UTILISATEURDataTable(ds.Tables["TYPE_UTILISATEUR"]));
                }
                if ((ds.Tables["TYPE_VEHICULE"] != null)) {
                    base.Tables.Add(new TYPE_VEHICULEDataTable(ds.Tables["TYPE_VEHICULE"]));
                }
                if ((ds.Tables["UTILISATEUR"] != null)) {
                    base.Tables.Add(new UTILISATEURDataTable(ds.Tables["UTILISATEUR"]));
                }
                if ((ds.Tables["VEHICULE"] != null)) {
                    base.Tables.Add(new VEHICULEDataTable(ds.Tables["VEHICULE"]));
                }
                if ((ds.Tables["VILLE"] != null)) {
                    base.Tables.Add(new VILLEDataTable(ds.Tables["VILLE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CARBURANTDataTable CARBURANT {
            get {
                return this.tableCARBURANT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ETAPEDataTable ETAPE {
            get {
                return this.tableETAPE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PAYSDataTable PAYS {
            get {
                return this.tablePAYS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PROPOSERDataTable PROPOSER {
            get {
                return this.tablePROPOSER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RESERVERDataTable RESERVER {
            get {
                return this.tableRESERVER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TRAJETDataTable TRAJET {
            get {
                return this.tableTRAJET;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TYPE_UTILISATEURDataTable TYPE_UTILISATEUR {
            get {
                return this.tableTYPE_UTILISATEUR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TYPE_VEHICULEDataTable TYPE_VEHICULE {
            get {
                return this.tableTYPE_VEHICULE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UTILISATEURDataTable UTILISATEUR {
            get {
                return this.tableUTILISATEUR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public VEHICULEDataTable VEHICULE {
            get {
                return this.tableVEHICULE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public VILLEDataTable VILLE {
            get {
                return this.tableVILLE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            gsbcarpoolingDataSet cln = ((gsbcarpoolingDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["CARBURANT"] != null)) {
                    base.Tables.Add(new CARBURANTDataTable(ds.Tables["CARBURANT"]));
                }
                if ((ds.Tables["ETAPE"] != null)) {
                    base.Tables.Add(new ETAPEDataTable(ds.Tables["ETAPE"]));
                }
                if ((ds.Tables["PAYS"] != null)) {
                    base.Tables.Add(new PAYSDataTable(ds.Tables["PAYS"]));
                }
                if ((ds.Tables["PROPOSER"] != null)) {
                    base.Tables.Add(new PROPOSERDataTable(ds.Tables["PROPOSER"]));
                }
                if ((ds.Tables["RESERVER"] != null)) {
                    base.Tables.Add(new RESERVERDataTable(ds.Tables["RESERVER"]));
                }
                if ((ds.Tables["TRAJET"] != null)) {
                    base.Tables.Add(new TRAJETDataTable(ds.Tables["TRAJET"]));
                }
                if ((ds.Tables["TYPE_UTILISATEUR"] != null)) {
                    base.Tables.Add(new TYPE_UTILISATEURDataTable(ds.Tables["TYPE_UTILISATEUR"]));
                }
                if ((ds.Tables["TYPE_VEHICULE"] != null)) {
                    base.Tables.Add(new TYPE_VEHICULEDataTable(ds.Tables["TYPE_VEHICULE"]));
                }
                if ((ds.Tables["UTILISATEUR"] != null)) {
                    base.Tables.Add(new UTILISATEURDataTable(ds.Tables["UTILISATEUR"]));
                }
                if ((ds.Tables["VEHICULE"] != null)) {
                    base.Tables.Add(new VEHICULEDataTable(ds.Tables["VEHICULE"]));
                }
                if ((ds.Tables["VILLE"] != null)) {
                    base.Tables.Add(new VILLEDataTable(ds.Tables["VILLE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableCARBURANT = ((CARBURANTDataTable)(base.Tables["CARBURANT"]));
            if ((initTable == true)) {
                if ((this.tableCARBURANT != null)) {
                    this.tableCARBURANT.InitVars();
                }
            }
            this.tableETAPE = ((ETAPEDataTable)(base.Tables["ETAPE"]));
            if ((initTable == true)) {
                if ((this.tableETAPE != null)) {
                    this.tableETAPE.InitVars();
                }
            }
            this.tablePAYS = ((PAYSDataTable)(base.Tables["PAYS"]));
            if ((initTable == true)) {
                if ((this.tablePAYS != null)) {
                    this.tablePAYS.InitVars();
                }
            }
            this.tablePROPOSER = ((PROPOSERDataTable)(base.Tables["PROPOSER"]));
            if ((initTable == true)) {
                if ((this.tablePROPOSER != null)) {
                    this.tablePROPOSER.InitVars();
                }
            }
            this.tableRESERVER = ((RESERVERDataTable)(base.Tables["RESERVER"]));
            if ((initTable == true)) {
                if ((this.tableRESERVER != null)) {
                    this.tableRESERVER.InitVars();
                }
            }
            this.tableTRAJET = ((TRAJETDataTable)(base.Tables["TRAJET"]));
            if ((initTable == true)) {
                if ((this.tableTRAJET != null)) {
                    this.tableTRAJET.InitVars();
                }
            }
            this.tableTYPE_UTILISATEUR = ((TYPE_UTILISATEURDataTable)(base.Tables["TYPE_UTILISATEUR"]));
            if ((initTable == true)) {
                if ((this.tableTYPE_UTILISATEUR != null)) {
                    this.tableTYPE_UTILISATEUR.InitVars();
                }
            }
            this.tableTYPE_VEHICULE = ((TYPE_VEHICULEDataTable)(base.Tables["TYPE_VEHICULE"]));
            if ((initTable == true)) {
                if ((this.tableTYPE_VEHICULE != null)) {
                    this.tableTYPE_VEHICULE.InitVars();
                }
            }
            this.tableUTILISATEUR = ((UTILISATEURDataTable)(base.Tables["UTILISATEUR"]));
            if ((initTable == true)) {
                if ((this.tableUTILISATEUR != null)) {
                    this.tableUTILISATEUR.InitVars();
                }
            }
            this.tableVEHICULE = ((VEHICULEDataTable)(base.Tables["VEHICULE"]));
            if ((initTable == true)) {
                if ((this.tableVEHICULE != null)) {
                    this.tableVEHICULE.InitVars();
                }
            }
            this.tableVILLE = ((VILLEDataTable)(base.Tables["VILLE"]));
            if ((initTable == true)) {
                if ((this.tableVILLE != null)) {
                    this.tableVILLE.InitVars();
                }
            }
            this.relationFK__ETAPE__5441852A = this.Relations["FK__ETAPE__5441852A"];
            this.relationFK__ETAPE__Trajet_Id__534D60F1 = this.Relations["FK__ETAPE__Trajet_Id__534D60F1"];
            this.relationFK__PROPOSER__Trajet__5812160E = this.Relations["FK__PROPOSER__Trajet__5812160E"];
            this.relationFK__PROPOSER__Utilis__59063A47 = this.Relations["FK__PROPOSER__Utilis__59063A47"];
            this.relationFK__PROPOSER__Vehicu__571DF1D5 = this.Relations["FK__PROPOSER__Vehicu__571DF1D5"];
            this.relationFK__RESERVER__Trajet__5CD6CB2B = this.Relations["FK__RESERVER__Trajet__5CD6CB2B"];
            this.relationFK__RESERVER__Utilis__5BE2A6F2 = this.Relations["FK__RESERVER__Utilis__5BE2A6F2"];
            this.relationFK__TRAJET__Vehicule__5070F446 = this.Relations["FK__TRAJET__Vehicule__5070F446"];
            this.relationFK_TRAJET_UTILISATEUR = this.Relations["FK_TRAJET_UTILISATEUR"];
            this.relationFK__UTILISATE__TypeU__46E78A0C = this.Relations["FK__UTILISATE__TypeU__46E78A0C"];
            this.relationFK__UTILISATEUR__45F365D3 = this.Relations["FK__UTILISATEUR__45F365D3"];
            this.relationFK__VEHICULE__Carbur__4BAC3F29 = this.Relations["FK__VEHICULE__Carbur__4BAC3F29"];
            this.relationFK__VEHICULE__TypeVe__4D94879B = this.Relations["FK__VEHICULE__TypeVe__4D94879B"];
            this.relationFK__VEHICULE__Utilis__4CA06362 = this.Relations["FK__VEHICULE__Utilis__4CA06362"];
            this.relationFK__VILLE__Pays_Id__403A8C7D = this.Relations["FK__VILLE__Pays_Id__403A8C7D"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "gsbcarpoolingDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/gsbcarpoolingDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCARBURANT = new CARBURANTDataTable();
            base.Tables.Add(this.tableCARBURANT);
            this.tableETAPE = new ETAPEDataTable();
            base.Tables.Add(this.tableETAPE);
            this.tablePAYS = new PAYSDataTable();
            base.Tables.Add(this.tablePAYS);
            this.tablePROPOSER = new PROPOSERDataTable();
            base.Tables.Add(this.tablePROPOSER);
            this.tableRESERVER = new RESERVERDataTable();
            base.Tables.Add(this.tableRESERVER);
            this.tableTRAJET = new TRAJETDataTable();
            base.Tables.Add(this.tableTRAJET);
            this.tableTYPE_UTILISATEUR = new TYPE_UTILISATEURDataTable();
            base.Tables.Add(this.tableTYPE_UTILISATEUR);
            this.tableTYPE_VEHICULE = new TYPE_VEHICULEDataTable();
            base.Tables.Add(this.tableTYPE_VEHICULE);
            this.tableUTILISATEUR = new UTILISATEURDataTable();
            base.Tables.Add(this.tableUTILISATEUR);
            this.tableVEHICULE = new VEHICULEDataTable();
            base.Tables.Add(this.tableVEHICULE);
            this.tableVILLE = new VILLEDataTable();
            base.Tables.Add(this.tableVILLE);
            this.relationFK__ETAPE__5441852A = new global::System.Data.DataRelation("FK__ETAPE__5441852A", new global::System.Data.DataColumn[] {
                        this.tableVILLE.Ville_NomColumn,
                        this.tableVILLE.Ville_CodePostalColumn}, new global::System.Data.DataColumn[] {
                        this.tableETAPE.Ville_NomColumn,
                        this.tableETAPE.Ville_CodePostalColumn}, false);
            this.Relations.Add(this.relationFK__ETAPE__5441852A);
            this.relationFK__ETAPE__Trajet_Id__534D60F1 = new global::System.Data.DataRelation("FK__ETAPE__Trajet_Id__534D60F1", new global::System.Data.DataColumn[] {
                        this.tableTRAJET.Trajet_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableETAPE.Trajet_IdColumn}, false);
            this.Relations.Add(this.relationFK__ETAPE__Trajet_Id__534D60F1);
            this.relationFK__PROPOSER__Trajet__5812160E = new global::System.Data.DataRelation("FK__PROPOSER__Trajet__5812160E", new global::System.Data.DataColumn[] {
                        this.tableTRAJET.Trajet_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablePROPOSER.Trajet_IdColumn}, false);
            this.Relations.Add(this.relationFK__PROPOSER__Trajet__5812160E);
            this.relationFK__PROPOSER__Utilis__59063A47 = new global::System.Data.DataRelation("FK__PROPOSER__Utilis__59063A47", new global::System.Data.DataColumn[] {
                        this.tableUTILISATEUR.Utilisateur_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablePROPOSER.Utilisateur_IdColumn}, false);
            this.Relations.Add(this.relationFK__PROPOSER__Utilis__59063A47);
            this.relationFK__PROPOSER__Vehicu__571DF1D5 = new global::System.Data.DataRelation("FK__PROPOSER__Vehicu__571DF1D5", new global::System.Data.DataColumn[] {
                        this.tableVEHICULE.Vehicule_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tablePROPOSER.Vehicule_IdColumn}, false);
            this.Relations.Add(this.relationFK__PROPOSER__Vehicu__571DF1D5);
            this.relationFK__RESERVER__Trajet__5CD6CB2B = new global::System.Data.DataRelation("FK__RESERVER__Trajet__5CD6CB2B", new global::System.Data.DataColumn[] {
                        this.tableTRAJET.Trajet_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableRESERVER.Trajet_IdColumn}, false);
            this.Relations.Add(this.relationFK__RESERVER__Trajet__5CD6CB2B);
            this.relationFK__RESERVER__Utilis__5BE2A6F2 = new global::System.Data.DataRelation("FK__RESERVER__Utilis__5BE2A6F2", new global::System.Data.DataColumn[] {
                        this.tableUTILISATEUR.Utilisateur_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableRESERVER.Utilisateur_IdColumn}, false);
            this.Relations.Add(this.relationFK__RESERVER__Utilis__5BE2A6F2);
            this.relationFK__TRAJET__Vehicule__5070F446 = new global::System.Data.DataRelation("FK__TRAJET__Vehicule__5070F446", new global::System.Data.DataColumn[] {
                        this.tableVEHICULE.Vehicule_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableTRAJET.Vehicule_IdColumn}, false);
            this.Relations.Add(this.relationFK__TRAJET__Vehicule__5070F446);
            this.relationFK_TRAJET_UTILISATEUR = new global::System.Data.DataRelation("FK_TRAJET_UTILISATEUR", new global::System.Data.DataColumn[] {
                        this.tableUTILISATEUR.Utilisateur_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableTRAJET.Utilisateur_IdColumn}, false);
            this.Relations.Add(this.relationFK_TRAJET_UTILISATEUR);
            this.relationFK__UTILISATE__TypeU__46E78A0C = new global::System.Data.DataRelation("FK__UTILISATE__TypeU__46E78A0C", new global::System.Data.DataColumn[] {
                        this.tableTYPE_UTILISATEUR.TypeUtilisateur_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableUTILISATEUR.TypeUtilisateur_IdColumn}, false);
            this.Relations.Add(this.relationFK__UTILISATE__TypeU__46E78A0C);
            this.relationFK__UTILISATEUR__45F365D3 = new global::System.Data.DataRelation("FK__UTILISATEUR__45F365D3", new global::System.Data.DataColumn[] {
                        this.tableVILLE.Ville_NomColumn,
                        this.tableVILLE.Ville_CodePostalColumn}, new global::System.Data.DataColumn[] {
                        this.tableUTILISATEUR.Ville_NomColumn,
                        this.tableUTILISATEUR.Ville_CodePostalColumn}, false);
            this.Relations.Add(this.relationFK__UTILISATEUR__45F365D3);
            this.relationFK__VEHICULE__Carbur__4BAC3F29 = new global::System.Data.DataRelation("FK__VEHICULE__Carbur__4BAC3F29", new global::System.Data.DataColumn[] {
                        this.tableCARBURANT.Carburant_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableVEHICULE.Carburant_IdColumn}, false);
            this.Relations.Add(this.relationFK__VEHICULE__Carbur__4BAC3F29);
            this.relationFK__VEHICULE__TypeVe__4D94879B = new global::System.Data.DataRelation("FK__VEHICULE__TypeVe__4D94879B", new global::System.Data.DataColumn[] {
                        this.tableTYPE_VEHICULE.TypeVehicule_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableVEHICULE.TypeVehicule_IdColumn}, false);
            this.Relations.Add(this.relationFK__VEHICULE__TypeVe__4D94879B);
            this.relationFK__VEHICULE__Utilis__4CA06362 = new global::System.Data.DataRelation("FK__VEHICULE__Utilis__4CA06362", new global::System.Data.DataColumn[] {
                        this.tableUTILISATEUR.Utilisateur_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableVEHICULE.Utilisateur_IdColumn}, false);
            this.Relations.Add(this.relationFK__VEHICULE__Utilis__4CA06362);
            this.relationFK__VILLE__Pays_Id__403A8C7D = new global::System.Data.DataRelation("FK__VILLE__Pays_Id__403A8C7D", new global::System.Data.DataColumn[] {
                        this.tablePAYS.Pays_IdColumn}, new global::System.Data.DataColumn[] {
                        this.tableVILLE.Pays_IdColumn}, false);
            this.Relations.Add(this.relationFK__VILLE__Pays_Id__403A8C7D);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeCARBURANT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeETAPE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializePAYS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializePROPOSER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeRESERVER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeTRAJET() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeTYPE_UTILISATEUR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeTYPE_VEHICULE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeUTILISATEUR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeVEHICULE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeVILLE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            gsbcarpoolingDataSet ds = new gsbcarpoolingDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void CARBURANTRowChangeEventHandler(object sender, CARBURANTRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ETAPERowChangeEventHandler(object sender, ETAPERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void PAYSRowChangeEventHandler(object sender, PAYSRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void PROPOSERRowChangeEventHandler(object sender, PROPOSERRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void RESERVERRowChangeEventHandler(object sender, RESERVERRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void TRAJETRowChangeEventHandler(object sender, TRAJETRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void TYPE_UTILISATEURRowChangeEventHandler(object sender, TYPE_UTILISATEURRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void TYPE_VEHICULERowChangeEventHandler(object sender, TYPE_VEHICULERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void UTILISATEURRowChangeEventHandler(object sender, UTILISATEURRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void VEHICULERowChangeEventHandler(object sender, VEHICULERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void VILLERowChangeEventHandler(object sender, VILLERowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CARBURANTDataTable : global::System.Data.TypedTableBase<CARBURANTRow> {
            
            private global::System.Data.DataColumn columnCarburant_Id;
            
            private global::System.Data.DataColumn columnCarburant_Libelle;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CARBURANTDataTable() {
                this.TableName = "CARBURANT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal CARBURANTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected CARBURANTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Carburant_IdColumn {
                get {
                    return this.columnCarburant_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Carburant_LibelleColumn {
                get {
                    return this.columnCarburant_Libelle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CARBURANTRow this[int index] {
                get {
                    return ((CARBURANTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CARBURANTRowChangeEventHandler CARBURANTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CARBURANTRowChangeEventHandler CARBURANTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CARBURANTRowChangeEventHandler CARBURANTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event CARBURANTRowChangeEventHandler CARBURANTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddCARBURANTRow(CARBURANTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CARBURANTRow AddCARBURANTRow(string Carburant_Id, string Carburant_Libelle) {
                CARBURANTRow rowCARBURANTRow = ((CARBURANTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Carburant_Id,
                        Carburant_Libelle};
                rowCARBURANTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCARBURANTRow);
                return rowCARBURANTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CARBURANTRow FindByCarburant_Id(string Carburant_Id) {
                return ((CARBURANTRow)(this.Rows.Find(new object[] {
                            Carburant_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CARBURANTDataTable cln = ((CARBURANTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CARBURANTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnCarburant_Id = base.Columns["Carburant_Id"];
                this.columnCarburant_Libelle = base.Columns["Carburant_Libelle"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnCarburant_Id = new global::System.Data.DataColumn("Carburant_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarburant_Id);
                this.columnCarburant_Libelle = new global::System.Data.DataColumn("Carburant_Libelle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarburant_Libelle);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCarburant_Id}, true));
                this.columnCarburant_Id.AllowDBNull = false;
                this.columnCarburant_Id.Unique = true;
                this.columnCarburant_Id.MaxLength = 5;
                this.columnCarburant_Libelle.AllowDBNull = false;
                this.columnCarburant_Libelle.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CARBURANTRow NewCARBURANTRow() {
                return ((CARBURANTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CARBURANTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CARBURANTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CARBURANTRowChanged != null)) {
                    this.CARBURANTRowChanged(this, new CARBURANTRowChangeEvent(((CARBURANTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CARBURANTRowChanging != null)) {
                    this.CARBURANTRowChanging(this, new CARBURANTRowChangeEvent(((CARBURANTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CARBURANTRowDeleted != null)) {
                    this.CARBURANTRowDeleted(this, new CARBURANTRowChangeEvent(((CARBURANTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CARBURANTRowDeleting != null)) {
                    this.CARBURANTRowDeleting(this, new CARBURANTRowChangeEvent(((CARBURANTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveCARBURANTRow(CARBURANTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                gsbcarpoolingDataSet ds = new gsbcarpoolingDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CARBURANTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ETAPEDataTable : global::System.Data.TypedTableBase<ETAPERow> {
            
            private global::System.Data.DataColumn columnTrajet_Id;
            
            private global::System.Data.DataColumn columnEtape_Id;
            
            private global::System.Data.DataColumn columnordre;
            
            private global::System.Data.DataColumn columnHeure_Arrivee;
            
            private global::System.Data.DataColumn columnDate_Arrivee;
            
            private global::System.Data.DataColumn columnVille_Nom;
            
            private global::System.Data.DataColumn columnVille_CodePostal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ETAPEDataTable() {
                this.TableName = "ETAPE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ETAPEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ETAPEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Trajet_IdColumn {
                get {
                    return this.columnTrajet_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Etape_IdColumn {
                get {
                    return this.columnEtape_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ordreColumn {
                get {
                    return this.columnordre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Heure_ArriveeColumn {
                get {
                    return this.columnHeure_Arrivee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Date_ArriveeColumn {
                get {
                    return this.columnDate_Arrivee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ville_NomColumn {
                get {
                    return this.columnVille_Nom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ville_CodePostalColumn {
                get {
                    return this.columnVille_CodePostal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ETAPERow this[int index] {
                get {
                    return ((ETAPERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ETAPERowChangeEventHandler ETAPERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ETAPERowChangeEventHandler ETAPERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ETAPERowChangeEventHandler ETAPERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ETAPERowChangeEventHandler ETAPERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddETAPERow(ETAPERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ETAPERow AddETAPERow(TRAJETRow parentTRAJETRowByFK__ETAPE__Trajet_Id__534D60F1, byte Etape_Id, int ordre, System.TimeSpan Heure_Arrivee, System.DateTime Date_Arrivee, string Ville_Nom, string Ville_CodePostal) {
                ETAPERow rowETAPERow = ((ETAPERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Etape_Id,
                        ordre,
                        Heure_Arrivee,
                        Date_Arrivee,
                        Ville_Nom,
                        Ville_CodePostal};
                if ((parentTRAJETRowByFK__ETAPE__Trajet_Id__534D60F1 != null)) {
                    columnValuesArray[0] = parentTRAJETRowByFK__ETAPE__Trajet_Id__534D60F1[0];
                }
                rowETAPERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowETAPERow);
                return rowETAPERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ETAPERow FindByTrajet_IdEtape_Id(int Trajet_Id, byte Etape_Id) {
                return ((ETAPERow)(this.Rows.Find(new object[] {
                            Trajet_Id,
                            Etape_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ETAPEDataTable cln = ((ETAPEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ETAPEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnTrajet_Id = base.Columns["Trajet_Id"];
                this.columnEtape_Id = base.Columns["Etape_Id"];
                this.columnordre = base.Columns["ordre"];
                this.columnHeure_Arrivee = base.Columns["Heure_Arrivee"];
                this.columnDate_Arrivee = base.Columns["Date_Arrivee"];
                this.columnVille_Nom = base.Columns["Ville_Nom"];
                this.columnVille_CodePostal = base.Columns["Ville_CodePostal"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnTrajet_Id = new global::System.Data.DataColumn("Trajet_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrajet_Id);
                this.columnEtape_Id = new global::System.Data.DataColumn("Etape_Id", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEtape_Id);
                this.columnordre = new global::System.Data.DataColumn("ordre", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnordre);
                this.columnHeure_Arrivee = new global::System.Data.DataColumn("Heure_Arrivee", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeure_Arrivee);
                this.columnDate_Arrivee = new global::System.Data.DataColumn("Date_Arrivee", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate_Arrivee);
                this.columnVille_Nom = new global::System.Data.DataColumn("Ville_Nom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVille_Nom);
                this.columnVille_CodePostal = new global::System.Data.DataColumn("Ville_CodePostal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVille_CodePostal);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTrajet_Id,
                                this.columnEtape_Id}, true));
                this.columnTrajet_Id.AllowDBNull = false;
                this.columnEtape_Id.AllowDBNull = false;
                this.columnEtape_Id.ReadOnly = true;
                this.columnordre.AllowDBNull = false;
                this.columnVille_Nom.AllowDBNull = false;
                this.columnVille_Nom.MaxLength = 40;
                this.columnVille_CodePostal.AllowDBNull = false;
                this.columnVille_CodePostal.MaxLength = 5;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ETAPERow NewETAPERow() {
                return ((ETAPERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ETAPERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ETAPERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ETAPERowChanged != null)) {
                    this.ETAPERowChanged(this, new ETAPERowChangeEvent(((ETAPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ETAPERowChanging != null)) {
                    this.ETAPERowChanging(this, new ETAPERowChangeEvent(((ETAPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ETAPERowDeleted != null)) {
                    this.ETAPERowDeleted(this, new ETAPERowChangeEvent(((ETAPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ETAPERowDeleting != null)) {
                    this.ETAPERowDeleting(this, new ETAPERowChangeEvent(((ETAPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveETAPERow(ETAPERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                gsbcarpoolingDataSet ds = new gsbcarpoolingDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ETAPEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PAYSDataTable : global::System.Data.TypedTableBase<PAYSRow> {
            
            private global::System.Data.DataColumn columnPays_Id;
            
            private global::System.Data.DataColumn columnPays_Libelle;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PAYSDataTable() {
                this.TableName = "PAYS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal PAYSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected PAYSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Pays_IdColumn {
                get {
                    return this.columnPays_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Pays_LibelleColumn {
                get {
                    return this.columnPays_Libelle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PAYSRow this[int index] {
                get {
                    return ((PAYSRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PAYSRowChangeEventHandler PAYSRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PAYSRowChangeEventHandler PAYSRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PAYSRowChangeEventHandler PAYSRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PAYSRowChangeEventHandler PAYSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddPAYSRow(PAYSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PAYSRow AddPAYSRow(string Pays_Id, string Pays_Libelle) {
                PAYSRow rowPAYSRow = ((PAYSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Pays_Id,
                        Pays_Libelle};
                rowPAYSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPAYSRow);
                return rowPAYSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PAYSRow FindByPays_Id(string Pays_Id) {
                return ((PAYSRow)(this.Rows.Find(new object[] {
                            Pays_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PAYSDataTable cln = ((PAYSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PAYSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnPays_Id = base.Columns["Pays_Id"];
                this.columnPays_Libelle = base.Columns["Pays_Libelle"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnPays_Id = new global::System.Data.DataColumn("Pays_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPays_Id);
                this.columnPays_Libelle = new global::System.Data.DataColumn("Pays_Libelle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPays_Libelle);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPays_Id}, true));
                this.columnPays_Id.AllowDBNull = false;
                this.columnPays_Id.Unique = true;
                this.columnPays_Id.MaxLength = 3;
                this.columnPays_Libelle.AllowDBNull = false;
                this.columnPays_Libelle.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PAYSRow NewPAYSRow() {
                return ((PAYSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PAYSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PAYSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PAYSRowChanged != null)) {
                    this.PAYSRowChanged(this, new PAYSRowChangeEvent(((PAYSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PAYSRowChanging != null)) {
                    this.PAYSRowChanging(this, new PAYSRowChangeEvent(((PAYSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PAYSRowDeleted != null)) {
                    this.PAYSRowDeleted(this, new PAYSRowChangeEvent(((PAYSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PAYSRowDeleting != null)) {
                    this.PAYSRowDeleting(this, new PAYSRowChangeEvent(((PAYSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemovePAYSRow(PAYSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                gsbcarpoolingDataSet ds = new gsbcarpoolingDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PAYSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PROPOSERDataTable : global::System.Data.TypedTableBase<PROPOSERRow> {
            
            private global::System.Data.DataColumn columnVehicule_Id;
            
            private global::System.Data.DataColumn columnTrajet_Id;
            
            private global::System.Data.DataColumn columncommentaire;
            
            private global::System.Data.DataColumn columnUtilisateur_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PROPOSERDataTable() {
                this.TableName = "PROPOSER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal PROPOSERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected PROPOSERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Vehicule_IdColumn {
                get {
                    return this.columnVehicule_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Trajet_IdColumn {
                get {
                    return this.columnTrajet_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn commentaireColumn {
                get {
                    return this.columncommentaire;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Utilisateur_IdColumn {
                get {
                    return this.columnUtilisateur_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PROPOSERRow this[int index] {
                get {
                    return ((PROPOSERRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PROPOSERRowChangeEventHandler PROPOSERRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PROPOSERRowChangeEventHandler PROPOSERRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PROPOSERRowChangeEventHandler PROPOSERRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event PROPOSERRowChangeEventHandler PROPOSERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddPROPOSERRow(PROPOSERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PROPOSERRow AddPROPOSERRow(VEHICULERow parentVEHICULERowByFK__PROPOSER__Vehicu__571DF1D5, TRAJETRow parentTRAJETRowByFK__PROPOSER__Trajet__5812160E, string commentaire, UTILISATEURRow parentUTILISATEURRowByFK__PROPOSER__Utilis__59063A47) {
                PROPOSERRow rowPROPOSERRow = ((PROPOSERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        commentaire,
                        null};
                if ((parentVEHICULERowByFK__PROPOSER__Vehicu__571DF1D5 != null)) {
                    columnValuesArray[0] = parentVEHICULERowByFK__PROPOSER__Vehicu__571DF1D5[0];
                }
                if ((parentTRAJETRowByFK__PROPOSER__Trajet__5812160E != null)) {
                    columnValuesArray[1] = parentTRAJETRowByFK__PROPOSER__Trajet__5812160E[0];
                }
                if ((parentUTILISATEURRowByFK__PROPOSER__Utilis__59063A47 != null)) {
                    columnValuesArray[3] = parentUTILISATEURRowByFK__PROPOSER__Utilis__59063A47[0];
                }
                rowPROPOSERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPROPOSERRow);
                return rowPROPOSERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PROPOSERRow FindByVehicule_IdTrajet_Id(int Vehicule_Id, int Trajet_Id) {
                return ((PROPOSERRow)(this.Rows.Find(new object[] {
                            Vehicule_Id,
                            Trajet_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                PROPOSERDataTable cln = ((PROPOSERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PROPOSERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnVehicule_Id = base.Columns["Vehicule_Id"];
                this.columnTrajet_Id = base.Columns["Trajet_Id"];
                this.columncommentaire = base.Columns["commentaire"];
                this.columnUtilisateur_Id = base.Columns["Utilisateur_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnVehicule_Id = new global::System.Data.DataColumn("Vehicule_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicule_Id);
                this.columnTrajet_Id = new global::System.Data.DataColumn("Trajet_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrajet_Id);
                this.columncommentaire = new global::System.Data.DataColumn("commentaire", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncommentaire);
                this.columnUtilisateur_Id = new global::System.Data.DataColumn("Utilisateur_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilisateur_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnVehicule_Id,
                                this.columnTrajet_Id}, true));
                this.columnVehicule_Id.AllowDBNull = false;
                this.columnTrajet_Id.AllowDBNull = false;
                this.columncommentaire.MaxLength = 350;
                this.columnUtilisateur_Id.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PROPOSERRow NewPROPOSERRow() {
                return ((PROPOSERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PROPOSERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(PROPOSERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PROPOSERRowChanged != null)) {
                    this.PROPOSERRowChanged(this, new PROPOSERRowChangeEvent(((PROPOSERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PROPOSERRowChanging != null)) {
                    this.PROPOSERRowChanging(this, new PROPOSERRowChangeEvent(((PROPOSERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PROPOSERRowDeleted != null)) {
                    this.PROPOSERRowDeleted(this, new PROPOSERRowChangeEvent(((PROPOSERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PROPOSERRowDeleting != null)) {
                    this.PROPOSERRowDeleting(this, new PROPOSERRowChangeEvent(((PROPOSERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemovePROPOSERRow(PROPOSERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                gsbcarpoolingDataSet ds = new gsbcarpoolingDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PROPOSERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RESERVERDataTable : global::System.Data.TypedTableBase<RESERVERRow> {
            
            private global::System.Data.DataColumn columnUtilisateur_Id;
            
            private global::System.Data.DataColumn columnTrajet_Id;
            
            private global::System.Data.DataColumn columnnote;
            
            private global::System.Data.DataColumn columncommentaire;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public RESERVERDataTable() {
                this.TableName = "RESERVER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal RESERVERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected RESERVERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Utilisateur_IdColumn {
                get {
                    return this.columnUtilisateur_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Trajet_IdColumn {
                get {
                    return this.columnTrajet_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn noteColumn {
                get {
                    return this.columnnote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn commentaireColumn {
                get {
                    return this.columncommentaire;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public RESERVERRow this[int index] {
                get {
                    return ((RESERVERRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event RESERVERRowChangeEventHandler RESERVERRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event RESERVERRowChangeEventHandler RESERVERRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event RESERVERRowChangeEventHandler RESERVERRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event RESERVERRowChangeEventHandler RESERVERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddRESERVERRow(RESERVERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public RESERVERRow AddRESERVERRow(UTILISATEURRow parentUTILISATEURRowByFK__RESERVER__Utilis__5BE2A6F2, TRAJETRow parentTRAJETRowByFK__RESERVER__Trajet__5CD6CB2B, byte note, string commentaire) {
                RESERVERRow rowRESERVERRow = ((RESERVERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        note,
                        commentaire};
                if ((parentUTILISATEURRowByFK__RESERVER__Utilis__5BE2A6F2 != null)) {
                    columnValuesArray[0] = parentUTILISATEURRowByFK__RESERVER__Utilis__5BE2A6F2[0];
                }
                if ((parentTRAJETRowByFK__RESERVER__Trajet__5CD6CB2B != null)) {
                    columnValuesArray[1] = parentTRAJETRowByFK__RESERVER__Trajet__5CD6CB2B[0];
                }
                rowRESERVERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRESERVERRow);
                return rowRESERVERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public RESERVERRow FindByUtilisateur_IdTrajet_Id(int Utilisateur_Id, int Trajet_Id) {
                return ((RESERVERRow)(this.Rows.Find(new object[] {
                            Utilisateur_Id,
                            Trajet_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                RESERVERDataTable cln = ((RESERVERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RESERVERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnUtilisateur_Id = base.Columns["Utilisateur_Id"];
                this.columnTrajet_Id = base.Columns["Trajet_Id"];
                this.columnnote = base.Columns["note"];
                this.columncommentaire = base.Columns["commentaire"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnUtilisateur_Id = new global::System.Data.DataColumn("Utilisateur_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilisateur_Id);
                this.columnTrajet_Id = new global::System.Data.DataColumn("Trajet_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrajet_Id);
                this.columnnote = new global::System.Data.DataColumn("note", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnote);
                this.columncommentaire = new global::System.Data.DataColumn("commentaire", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncommentaire);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnUtilisateur_Id,
                                this.columnTrajet_Id}, true));
                this.columnUtilisateur_Id.AllowDBNull = false;
                this.columnTrajet_Id.AllowDBNull = false;
                this.columncommentaire.MaxLength = 350;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public RESERVERRow NewRESERVERRow() {
                return ((RESERVERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RESERVERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(RESERVERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RESERVERRowChanged != null)) {
                    this.RESERVERRowChanged(this, new RESERVERRowChangeEvent(((RESERVERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RESERVERRowChanging != null)) {
                    this.RESERVERRowChanging(this, new RESERVERRowChangeEvent(((RESERVERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RESERVERRowDeleted != null)) {
                    this.RESERVERRowDeleted(this, new RESERVERRowChangeEvent(((RESERVERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RESERVERRowDeleting != null)) {
                    this.RESERVERRowDeleting(this, new RESERVERRowChangeEvent(((RESERVERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveRESERVERRow(RESERVERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                gsbcarpoolingDataSet ds = new gsbcarpoolingDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RESERVERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TRAJETDataTable : global::System.Data.TypedTableBase<TRAJETRow> {
            
            private global::System.Data.DataColumn columnTrajet_Id;
            
            private global::System.Data.DataColumn columnTrajet_Date;
            
            private global::System.Data.DataColumn columnTrajet_HeureDepart;
            
            private global::System.Data.DataColumn columnTrajet_Commentaire;
            
            private global::System.Data.DataColumn columnTrajet_NbPassagers;
            
            private global::System.Data.DataColumn columnVehicule_Id;
            
            private global::System.Data.DataColumn columnUtilisateur_Id;
            
            private global::System.Data.DataColumn columnVille_Depart;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TRAJETDataTable() {
                this.TableName = "TRAJET";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TRAJETDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected TRAJETDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Trajet_IdColumn {
                get {
                    return this.columnTrajet_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Trajet_DateColumn {
                get {
                    return this.columnTrajet_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Trajet_HeureDepartColumn {
                get {
                    return this.columnTrajet_HeureDepart;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Trajet_CommentaireColumn {
                get {
                    return this.columnTrajet_Commentaire;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Trajet_NbPassagersColumn {
                get {
                    return this.columnTrajet_NbPassagers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Vehicule_IdColumn {
                get {
                    return this.columnVehicule_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Utilisateur_IdColumn {
                get {
                    return this.columnUtilisateur_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ville_DepartColumn {
                get {
                    return this.columnVille_Depart;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TRAJETRow this[int index] {
                get {
                    return ((TRAJETRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TRAJETRowChangeEventHandler TRAJETRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TRAJETRowChangeEventHandler TRAJETRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TRAJETRowChangeEventHandler TRAJETRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TRAJETRowChangeEventHandler TRAJETRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddTRAJETRow(TRAJETRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TRAJETRow AddTRAJETRow(System.DateTime Trajet_Date, System.TimeSpan Trajet_HeureDepart, string Trajet_Commentaire, byte Trajet_NbPassagers, VEHICULERow parentVEHICULERowByFK__TRAJET__Vehicule__5070F446, UTILISATEURRow parentUTILISATEURRowByFK_TRAJET_UTILISATEUR, string Ville_Depart) {
                TRAJETRow rowTRAJETRow = ((TRAJETRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Trajet_Date,
                        Trajet_HeureDepart,
                        Trajet_Commentaire,
                        Trajet_NbPassagers,
                        null,
                        null,
                        Ville_Depart};
                if ((parentVEHICULERowByFK__TRAJET__Vehicule__5070F446 != null)) {
                    columnValuesArray[5] = parentVEHICULERowByFK__TRAJET__Vehicule__5070F446[0];
                }
                if ((parentUTILISATEURRowByFK_TRAJET_UTILISATEUR != null)) {
                    columnValuesArray[6] = parentUTILISATEURRowByFK_TRAJET_UTILISATEUR[0];
                }
                rowTRAJETRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTRAJETRow);
                return rowTRAJETRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TRAJETRow FindByTrajet_Id(int Trajet_Id) {
                return ((TRAJETRow)(this.Rows.Find(new object[] {
                            Trajet_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TRAJETDataTable cln = ((TRAJETDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TRAJETDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnTrajet_Id = base.Columns["Trajet_Id"];
                this.columnTrajet_Date = base.Columns["Trajet_Date"];
                this.columnTrajet_HeureDepart = base.Columns["Trajet_HeureDepart"];
                this.columnTrajet_Commentaire = base.Columns["Trajet_Commentaire"];
                this.columnTrajet_NbPassagers = base.Columns["Trajet_NbPassagers"];
                this.columnVehicule_Id = base.Columns["Vehicule_Id"];
                this.columnUtilisateur_Id = base.Columns["Utilisateur_Id"];
                this.columnVille_Depart = base.Columns["Ville_Depart"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnTrajet_Id = new global::System.Data.DataColumn("Trajet_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrajet_Id);
                this.columnTrajet_Date = new global::System.Data.DataColumn("Trajet_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrajet_Date);
                this.columnTrajet_HeureDepart = new global::System.Data.DataColumn("Trajet_HeureDepart", typeof(global::System.TimeSpan), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrajet_HeureDepart);
                this.columnTrajet_Commentaire = new global::System.Data.DataColumn("Trajet_Commentaire", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrajet_Commentaire);
                this.columnTrajet_NbPassagers = new global::System.Data.DataColumn("Trajet_NbPassagers", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrajet_NbPassagers);
                this.columnVehicule_Id = new global::System.Data.DataColumn("Vehicule_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicule_Id);
                this.columnUtilisateur_Id = new global::System.Data.DataColumn("Utilisateur_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilisateur_Id);
                this.columnVille_Depart = new global::System.Data.DataColumn("Ville_Depart", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVille_Depart);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTrajet_Id}, true));
                this.columnTrajet_Id.AutoIncrement = true;
                this.columnTrajet_Id.AutoIncrementSeed = -1;
                this.columnTrajet_Id.AutoIncrementStep = -1;
                this.columnTrajet_Id.AllowDBNull = false;
                this.columnTrajet_Id.ReadOnly = true;
                this.columnTrajet_Id.Unique = true;
                this.columnTrajet_Date.AllowDBNull = false;
                this.columnTrajet_HeureDepart.AllowDBNull = false;
                this.columnTrajet_Commentaire.MaxLength = 255;
                this.columnTrajet_NbPassagers.AllowDBNull = false;
                this.columnVehicule_Id.AllowDBNull = false;
                this.columnUtilisateur_Id.AllowDBNull = false;
                this.columnVille_Depart.AllowDBNull = false;
                this.columnVille_Depart.MaxLength = 40;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TRAJETRow NewTRAJETRow() {
                return ((TRAJETRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TRAJETRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TRAJETRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TRAJETRowChanged != null)) {
                    this.TRAJETRowChanged(this, new TRAJETRowChangeEvent(((TRAJETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TRAJETRowChanging != null)) {
                    this.TRAJETRowChanging(this, new TRAJETRowChangeEvent(((TRAJETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TRAJETRowDeleted != null)) {
                    this.TRAJETRowDeleted(this, new TRAJETRowChangeEvent(((TRAJETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TRAJETRowDeleting != null)) {
                    this.TRAJETRowDeleting(this, new TRAJETRowChangeEvent(((TRAJETRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveTRAJETRow(TRAJETRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                gsbcarpoolingDataSet ds = new gsbcarpoolingDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TRAJETDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TYPE_UTILISATEURDataTable : global::System.Data.TypedTableBase<TYPE_UTILISATEURRow> {
            
            private global::System.Data.DataColumn columnTypeUtilisateur_Id;
            
            private global::System.Data.DataColumn columnTypeUtilisateur_Libelle;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TYPE_UTILISATEURDataTable() {
                this.TableName = "TYPE_UTILISATEUR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TYPE_UTILISATEURDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected TYPE_UTILISATEURDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TypeUtilisateur_IdColumn {
                get {
                    return this.columnTypeUtilisateur_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TypeUtilisateur_LibelleColumn {
                get {
                    return this.columnTypeUtilisateur_Libelle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TYPE_UTILISATEURRow this[int index] {
                get {
                    return ((TYPE_UTILISATEURRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TYPE_UTILISATEURRowChangeEventHandler TYPE_UTILISATEURRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TYPE_UTILISATEURRowChangeEventHandler TYPE_UTILISATEURRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TYPE_UTILISATEURRowChangeEventHandler TYPE_UTILISATEURRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TYPE_UTILISATEURRowChangeEventHandler TYPE_UTILISATEURRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddTYPE_UTILISATEURRow(TYPE_UTILISATEURRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TYPE_UTILISATEURRow AddTYPE_UTILISATEURRow(string TypeUtilisateur_Id, string TypeUtilisateur_Libelle) {
                TYPE_UTILISATEURRow rowTYPE_UTILISATEURRow = ((TYPE_UTILISATEURRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TypeUtilisateur_Id,
                        TypeUtilisateur_Libelle};
                rowTYPE_UTILISATEURRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTYPE_UTILISATEURRow);
                return rowTYPE_UTILISATEURRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TYPE_UTILISATEURRow FindByTypeUtilisateur_Id(string TypeUtilisateur_Id) {
                return ((TYPE_UTILISATEURRow)(this.Rows.Find(new object[] {
                            TypeUtilisateur_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TYPE_UTILISATEURDataTable cln = ((TYPE_UTILISATEURDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TYPE_UTILISATEURDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnTypeUtilisateur_Id = base.Columns["TypeUtilisateur_Id"];
                this.columnTypeUtilisateur_Libelle = base.Columns["TypeUtilisateur_Libelle"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnTypeUtilisateur_Id = new global::System.Data.DataColumn("TypeUtilisateur_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeUtilisateur_Id);
                this.columnTypeUtilisateur_Libelle = new global::System.Data.DataColumn("TypeUtilisateur_Libelle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeUtilisateur_Libelle);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTypeUtilisateur_Id}, true));
                this.columnTypeUtilisateur_Id.AllowDBNull = false;
                this.columnTypeUtilisateur_Id.Unique = true;
                this.columnTypeUtilisateur_Id.MaxLength = 10;
                this.columnTypeUtilisateur_Libelle.AllowDBNull = false;
                this.columnTypeUtilisateur_Libelle.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TYPE_UTILISATEURRow NewTYPE_UTILISATEURRow() {
                return ((TYPE_UTILISATEURRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TYPE_UTILISATEURRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TYPE_UTILISATEURRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TYPE_UTILISATEURRowChanged != null)) {
                    this.TYPE_UTILISATEURRowChanged(this, new TYPE_UTILISATEURRowChangeEvent(((TYPE_UTILISATEURRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TYPE_UTILISATEURRowChanging != null)) {
                    this.TYPE_UTILISATEURRowChanging(this, new TYPE_UTILISATEURRowChangeEvent(((TYPE_UTILISATEURRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TYPE_UTILISATEURRowDeleted != null)) {
                    this.TYPE_UTILISATEURRowDeleted(this, new TYPE_UTILISATEURRowChangeEvent(((TYPE_UTILISATEURRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TYPE_UTILISATEURRowDeleting != null)) {
                    this.TYPE_UTILISATEURRowDeleting(this, new TYPE_UTILISATEURRowChangeEvent(((TYPE_UTILISATEURRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveTYPE_UTILISATEURRow(TYPE_UTILISATEURRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                gsbcarpoolingDataSet ds = new gsbcarpoolingDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TYPE_UTILISATEURDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TYPE_VEHICULEDataTable : global::System.Data.TypedTableBase<TYPE_VEHICULERow> {
            
            private global::System.Data.DataColumn columnTypeVehicule_Id;
            
            private global::System.Data.DataColumn columnTypeVehicule_Libelle;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TYPE_VEHICULEDataTable() {
                this.TableName = "TYPE_VEHICULE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TYPE_VEHICULEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected TYPE_VEHICULEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TypeVehicule_IdColumn {
                get {
                    return this.columnTypeVehicule_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TypeVehicule_LibelleColumn {
                get {
                    return this.columnTypeVehicule_Libelle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TYPE_VEHICULERow this[int index] {
                get {
                    return ((TYPE_VEHICULERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TYPE_VEHICULERowChangeEventHandler TYPE_VEHICULERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TYPE_VEHICULERowChangeEventHandler TYPE_VEHICULERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TYPE_VEHICULERowChangeEventHandler TYPE_VEHICULERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TYPE_VEHICULERowChangeEventHandler TYPE_VEHICULERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddTYPE_VEHICULERow(TYPE_VEHICULERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TYPE_VEHICULERow AddTYPE_VEHICULERow(byte TypeVehicule_Id, string TypeVehicule_Libelle) {
                TYPE_VEHICULERow rowTYPE_VEHICULERow = ((TYPE_VEHICULERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TypeVehicule_Id,
                        TypeVehicule_Libelle};
                rowTYPE_VEHICULERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTYPE_VEHICULERow);
                return rowTYPE_VEHICULERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TYPE_VEHICULERow FindByTypeVehicule_Id(byte TypeVehicule_Id) {
                return ((TYPE_VEHICULERow)(this.Rows.Find(new object[] {
                            TypeVehicule_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TYPE_VEHICULEDataTable cln = ((TYPE_VEHICULEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TYPE_VEHICULEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnTypeVehicule_Id = base.Columns["TypeVehicule_Id"];
                this.columnTypeVehicule_Libelle = base.Columns["TypeVehicule_Libelle"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnTypeVehicule_Id = new global::System.Data.DataColumn("TypeVehicule_Id", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeVehicule_Id);
                this.columnTypeVehicule_Libelle = new global::System.Data.DataColumn("TypeVehicule_Libelle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeVehicule_Libelle);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTypeVehicule_Id}, true));
                this.columnTypeVehicule_Id.AllowDBNull = false;
                this.columnTypeVehicule_Id.Unique = true;
                this.columnTypeVehicule_Libelle.AllowDBNull = false;
                this.columnTypeVehicule_Libelle.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TYPE_VEHICULERow NewTYPE_VEHICULERow() {
                return ((TYPE_VEHICULERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TYPE_VEHICULERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TYPE_VEHICULERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TYPE_VEHICULERowChanged != null)) {
                    this.TYPE_VEHICULERowChanged(this, new TYPE_VEHICULERowChangeEvent(((TYPE_VEHICULERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TYPE_VEHICULERowChanging != null)) {
                    this.TYPE_VEHICULERowChanging(this, new TYPE_VEHICULERowChangeEvent(((TYPE_VEHICULERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TYPE_VEHICULERowDeleted != null)) {
                    this.TYPE_VEHICULERowDeleted(this, new TYPE_VEHICULERowChangeEvent(((TYPE_VEHICULERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TYPE_VEHICULERowDeleting != null)) {
                    this.TYPE_VEHICULERowDeleting(this, new TYPE_VEHICULERowChangeEvent(((TYPE_VEHICULERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveTYPE_VEHICULERow(TYPE_VEHICULERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                gsbcarpoolingDataSet ds = new gsbcarpoolingDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TYPE_VEHICULEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UTILISATEURDataTable : global::System.Data.TypedTableBase<UTILISATEURRow> {
            
            private global::System.Data.DataColumn columnUtilisateur_Id;
            
            private global::System.Data.DataColumn columnUtilisateur_Nom;
            
            private global::System.Data.DataColumn columnUtilisateur_Prenom;
            
            private global::System.Data.DataColumn columnUtilisateur_Photo;
            
            private global::System.Data.DataColumn columnUtilisateur_Pseudonyme;
            
            private global::System.Data.DataColumn columnUtilisateur_HashPassword;
            
            private global::System.Data.DataColumn columnUtilisateur_DateNaissance;
            
            private global::System.Data.DataColumn columnUtilisateur_Rue;
            
            private global::System.Data.DataColumn columnUtilisateur_Email;
            
            private global::System.Data.DataColumn columnUtilisateur_TelMobile;
            
            private global::System.Data.DataColumn columnUtilisateur_Sexe;
            
            private global::System.Data.DataColumn columnUtilisateur_DateInscription;
            
            private global::System.Data.DataColumn columnUtilisateur_PremiereConnexion;
            
            private global::System.Data.DataColumn columnVille_Nom;
            
            private global::System.Data.DataColumn columnVille_CodePostal;
            
            private global::System.Data.DataColumn columnTypeUtilisateur_Id;
            
            private global::System.Data.DataColumn columnUtilisateur_Actif;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UTILISATEURDataTable() {
                this.TableName = "UTILISATEUR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal UTILISATEURDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected UTILISATEURDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Utilisateur_IdColumn {
                get {
                    return this.columnUtilisateur_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Utilisateur_NomColumn {
                get {
                    return this.columnUtilisateur_Nom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Utilisateur_PrenomColumn {
                get {
                    return this.columnUtilisateur_Prenom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Utilisateur_PhotoColumn {
                get {
                    return this.columnUtilisateur_Photo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Utilisateur_PseudonymeColumn {
                get {
                    return this.columnUtilisateur_Pseudonyme;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Utilisateur_HashPasswordColumn {
                get {
                    return this.columnUtilisateur_HashPassword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Utilisateur_DateNaissanceColumn {
                get {
                    return this.columnUtilisateur_DateNaissance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Utilisateur_RueColumn {
                get {
                    return this.columnUtilisateur_Rue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Utilisateur_EmailColumn {
                get {
                    return this.columnUtilisateur_Email;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Utilisateur_TelMobileColumn {
                get {
                    return this.columnUtilisateur_TelMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Utilisateur_SexeColumn {
                get {
                    return this.columnUtilisateur_Sexe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Utilisateur_DateInscriptionColumn {
                get {
                    return this.columnUtilisateur_DateInscription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Utilisateur_PremiereConnexionColumn {
                get {
                    return this.columnUtilisateur_PremiereConnexion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ville_NomColumn {
                get {
                    return this.columnVille_Nom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ville_CodePostalColumn {
                get {
                    return this.columnVille_CodePostal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TypeUtilisateur_IdColumn {
                get {
                    return this.columnTypeUtilisateur_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Utilisateur_ActifColumn {
                get {
                    return this.columnUtilisateur_Actif;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UTILISATEURRow this[int index] {
                get {
                    return ((UTILISATEURRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event UTILISATEURRowChangeEventHandler UTILISATEURRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event UTILISATEURRowChangeEventHandler UTILISATEURRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event UTILISATEURRowChangeEventHandler UTILISATEURRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event UTILISATEURRowChangeEventHandler UTILISATEURRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddUTILISATEURRow(UTILISATEURRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UTILISATEURRow AddUTILISATEURRow(
                        string Utilisateur_Nom, 
                        string Utilisateur_Prenom, 
                        string Utilisateur_Photo, 
                        string Utilisateur_Pseudonyme, 
                        string Utilisateur_HashPassword, 
                        System.DateTime Utilisateur_DateNaissance, 
                        string Utilisateur_Rue, 
                        string Utilisateur_Email, 
                        string Utilisateur_TelMobile, 
                        string Utilisateur_Sexe, 
                        System.DateTime Utilisateur_DateInscription, 
                        bool Utilisateur_PremiereConnexion, 
                        string Ville_Nom, 
                        string Ville_CodePostal, 
                        TYPE_UTILISATEURRow parentTYPE_UTILISATEURRowByFK__UTILISATE__TypeU__46E78A0C, 
                        bool Utilisateur_Actif) {
                UTILISATEURRow rowUTILISATEURRow = ((UTILISATEURRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Utilisateur_Nom,
                        Utilisateur_Prenom,
                        Utilisateur_Photo,
                        Utilisateur_Pseudonyme,
                        Utilisateur_HashPassword,
                        Utilisateur_DateNaissance,
                        Utilisateur_Rue,
                        Utilisateur_Email,
                        Utilisateur_TelMobile,
                        Utilisateur_Sexe,
                        Utilisateur_DateInscription,
                        Utilisateur_PremiereConnexion,
                        Ville_Nom,
                        Ville_CodePostal,
                        null,
                        Utilisateur_Actif};
                if ((parentTYPE_UTILISATEURRowByFK__UTILISATE__TypeU__46E78A0C != null)) {
                    columnValuesArray[15] = parentTYPE_UTILISATEURRowByFK__UTILISATE__TypeU__46E78A0C[0];
                }
                rowUTILISATEURRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUTILISATEURRow);
                return rowUTILISATEURRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UTILISATEURRow FindByUtilisateur_Id(int Utilisateur_Id) {
                return ((UTILISATEURRow)(this.Rows.Find(new object[] {
                            Utilisateur_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                UTILISATEURDataTable cln = ((UTILISATEURDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UTILISATEURDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnUtilisateur_Id = base.Columns["Utilisateur_Id"];
                this.columnUtilisateur_Nom = base.Columns["Utilisateur_Nom"];
                this.columnUtilisateur_Prenom = base.Columns["Utilisateur_Prenom"];
                this.columnUtilisateur_Photo = base.Columns["Utilisateur_Photo"];
                this.columnUtilisateur_Pseudonyme = base.Columns["Utilisateur_Pseudonyme"];
                this.columnUtilisateur_HashPassword = base.Columns["Utilisateur_HashPassword"];
                this.columnUtilisateur_DateNaissance = base.Columns["Utilisateur_DateNaissance"];
                this.columnUtilisateur_Rue = base.Columns["Utilisateur_Rue"];
                this.columnUtilisateur_Email = base.Columns["Utilisateur_Email"];
                this.columnUtilisateur_TelMobile = base.Columns["Utilisateur_TelMobile"];
                this.columnUtilisateur_Sexe = base.Columns["Utilisateur_Sexe"];
                this.columnUtilisateur_DateInscription = base.Columns["Utilisateur_DateInscription"];
                this.columnUtilisateur_PremiereConnexion = base.Columns["Utilisateur_PremiereConnexion"];
                this.columnVille_Nom = base.Columns["Ville_Nom"];
                this.columnVille_CodePostal = base.Columns["Ville_CodePostal"];
                this.columnTypeUtilisateur_Id = base.Columns["TypeUtilisateur_Id"];
                this.columnUtilisateur_Actif = base.Columns["Utilisateur_Actif"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnUtilisateur_Id = new global::System.Data.DataColumn("Utilisateur_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilisateur_Id);
                this.columnUtilisateur_Nom = new global::System.Data.DataColumn("Utilisateur_Nom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilisateur_Nom);
                this.columnUtilisateur_Prenom = new global::System.Data.DataColumn("Utilisateur_Prenom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilisateur_Prenom);
                this.columnUtilisateur_Photo = new global::System.Data.DataColumn("Utilisateur_Photo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilisateur_Photo);
                this.columnUtilisateur_Pseudonyme = new global::System.Data.DataColumn("Utilisateur_Pseudonyme", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilisateur_Pseudonyme);
                this.columnUtilisateur_HashPassword = new global::System.Data.DataColumn("Utilisateur_HashPassword", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilisateur_HashPassword);
                this.columnUtilisateur_DateNaissance = new global::System.Data.DataColumn("Utilisateur_DateNaissance", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilisateur_DateNaissance);
                this.columnUtilisateur_Rue = new global::System.Data.DataColumn("Utilisateur_Rue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilisateur_Rue);
                this.columnUtilisateur_Email = new global::System.Data.DataColumn("Utilisateur_Email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilisateur_Email);
                this.columnUtilisateur_TelMobile = new global::System.Data.DataColumn("Utilisateur_TelMobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilisateur_TelMobile);
                this.columnUtilisateur_Sexe = new global::System.Data.DataColumn("Utilisateur_Sexe", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilisateur_Sexe);
                this.columnUtilisateur_DateInscription = new global::System.Data.DataColumn("Utilisateur_DateInscription", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilisateur_DateInscription);
                this.columnUtilisateur_PremiereConnexion = new global::System.Data.DataColumn("Utilisateur_PremiereConnexion", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilisateur_PremiereConnexion);
                this.columnVille_Nom = new global::System.Data.DataColumn("Ville_Nom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVille_Nom);
                this.columnVille_CodePostal = new global::System.Data.DataColumn("Ville_CodePostal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVille_CodePostal);
                this.columnTypeUtilisateur_Id = new global::System.Data.DataColumn("TypeUtilisateur_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeUtilisateur_Id);
                this.columnUtilisateur_Actif = new global::System.Data.DataColumn("Utilisateur_Actif", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilisateur_Actif);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnUtilisateur_Id}, true));
                this.columnUtilisateur_Id.AutoIncrement = true;
                this.columnUtilisateur_Id.AutoIncrementSeed = -1;
                this.columnUtilisateur_Id.AutoIncrementStep = -1;
                this.columnUtilisateur_Id.AllowDBNull = false;
                this.columnUtilisateur_Id.ReadOnly = true;
                this.columnUtilisateur_Id.Unique = true;
                this.columnUtilisateur_Nom.AllowDBNull = false;
                this.columnUtilisateur_Nom.MaxLength = 25;
                this.columnUtilisateur_Prenom.AllowDBNull = false;
                this.columnUtilisateur_Prenom.MaxLength = 20;
                this.columnUtilisateur_Photo.MaxLength = 255;
                this.columnUtilisateur_Pseudonyme.AllowDBNull = false;
                this.columnUtilisateur_Pseudonyme.MaxLength = 20;
                this.columnUtilisateur_HashPassword.AllowDBNull = false;
                this.columnUtilisateur_HashPassword.MaxLength = 255;
                this.columnUtilisateur_DateNaissance.AllowDBNull = false;
                this.columnUtilisateur_Rue.AllowDBNull = false;
                this.columnUtilisateur_Rue.MaxLength = 100;
                this.columnUtilisateur_Email.AllowDBNull = false;
                this.columnUtilisateur_Email.MaxLength = 50;
                this.columnUtilisateur_TelMobile.AllowDBNull = false;
                this.columnUtilisateur_TelMobile.MaxLength = 10;
                this.columnUtilisateur_Sexe.AllowDBNull = false;
                this.columnUtilisateur_Sexe.MaxLength = 10;
                this.columnUtilisateur_DateInscription.AllowDBNull = false;
                this.columnUtilisateur_PremiereConnexion.AllowDBNull = false;
                this.columnVille_Nom.AllowDBNull = false;
                this.columnVille_Nom.MaxLength = 40;
                this.columnVille_CodePostal.AllowDBNull = false;
                this.columnVille_CodePostal.MaxLength = 5;
                this.columnTypeUtilisateur_Id.AllowDBNull = false;
                this.columnTypeUtilisateur_Id.MaxLength = 10;
                this.columnUtilisateur_Actif.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UTILISATEURRow NewUTILISATEURRow() {
                return ((UTILISATEURRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UTILISATEURRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(UTILISATEURRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UTILISATEURRowChanged != null)) {
                    this.UTILISATEURRowChanged(this, new UTILISATEURRowChangeEvent(((UTILISATEURRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UTILISATEURRowChanging != null)) {
                    this.UTILISATEURRowChanging(this, new UTILISATEURRowChangeEvent(((UTILISATEURRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UTILISATEURRowDeleted != null)) {
                    this.UTILISATEURRowDeleted(this, new UTILISATEURRowChangeEvent(((UTILISATEURRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UTILISATEURRowDeleting != null)) {
                    this.UTILISATEURRowDeleting(this, new UTILISATEURRowChangeEvent(((UTILISATEURRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveUTILISATEURRow(UTILISATEURRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                gsbcarpoolingDataSet ds = new gsbcarpoolingDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UTILISATEURDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class VEHICULEDataTable : global::System.Data.TypedTableBase<VEHICULERow> {
            
            private global::System.Data.DataColumn columnVehicule_Id;
            
            private global::System.Data.DataColumn columnVehicule_Marque;
            
            private global::System.Data.DataColumn columnVehicule_Modele;
            
            private global::System.Data.DataColumn columnVehicule_Annee;
            
            private global::System.Data.DataColumn columnVehicule_Couleur;
            
            private global::System.Data.DataColumn columnVehicule_NbPlaces;
            
            private global::System.Data.DataColumn columnVehicule_societe;
            
            private global::System.Data.DataColumn columnVehicule_immatriculation;
            
            private global::System.Data.DataColumn columnCarburant_Id;
            
            private global::System.Data.DataColumn columnUtilisateur_Id;
            
            private global::System.Data.DataColumn columnTypeVehicule_Id;
            
            private global::System.Data.DataColumn columnVehicule_Actif;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VEHICULEDataTable() {
                this.TableName = "VEHICULE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal VEHICULEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected VEHICULEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Vehicule_IdColumn {
                get {
                    return this.columnVehicule_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Vehicule_MarqueColumn {
                get {
                    return this.columnVehicule_Marque;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Vehicule_ModeleColumn {
                get {
                    return this.columnVehicule_Modele;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Vehicule_AnneeColumn {
                get {
                    return this.columnVehicule_Annee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Vehicule_CouleurColumn {
                get {
                    return this.columnVehicule_Couleur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Vehicule_NbPlacesColumn {
                get {
                    return this.columnVehicule_NbPlaces;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Vehicule_societeColumn {
                get {
                    return this.columnVehicule_societe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Vehicule_immatriculationColumn {
                get {
                    return this.columnVehicule_immatriculation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Carburant_IdColumn {
                get {
                    return this.columnCarburant_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Utilisateur_IdColumn {
                get {
                    return this.columnUtilisateur_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TypeVehicule_IdColumn {
                get {
                    return this.columnTypeVehicule_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Vehicule_ActifColumn {
                get {
                    return this.columnVehicule_Actif;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VEHICULERow this[int index] {
                get {
                    return ((VEHICULERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VEHICULERowChangeEventHandler VEHICULERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VEHICULERowChangeEventHandler VEHICULERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VEHICULERowChangeEventHandler VEHICULERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VEHICULERowChangeEventHandler VEHICULERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddVEHICULERow(VEHICULERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VEHICULERow AddVEHICULERow(string Vehicule_Marque, string Vehicule_Modele, int Vehicule_Annee, string Vehicule_Couleur, byte Vehicule_NbPlaces, bool Vehicule_societe, string Vehicule_immatriculation, CARBURANTRow parentCARBURANTRowByFK__VEHICULE__Carbur__4BAC3F29, UTILISATEURRow parentUTILISATEURRowByFK__VEHICULE__Utilis__4CA06362, TYPE_VEHICULERow parentTYPE_VEHICULERowByFK__VEHICULE__TypeVe__4D94879B, bool Vehicule_Actif) {
                VEHICULERow rowVEHICULERow = ((VEHICULERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Vehicule_Marque,
                        Vehicule_Modele,
                        Vehicule_Annee,
                        Vehicule_Couleur,
                        Vehicule_NbPlaces,
                        Vehicule_societe,
                        Vehicule_immatriculation,
                        null,
                        null,
                        null,
                        Vehicule_Actif};
                if ((parentCARBURANTRowByFK__VEHICULE__Carbur__4BAC3F29 != null)) {
                    columnValuesArray[8] = parentCARBURANTRowByFK__VEHICULE__Carbur__4BAC3F29[0];
                }
                if ((parentUTILISATEURRowByFK__VEHICULE__Utilis__4CA06362 != null)) {
                    columnValuesArray[9] = parentUTILISATEURRowByFK__VEHICULE__Utilis__4CA06362[0];
                }
                if ((parentTYPE_VEHICULERowByFK__VEHICULE__TypeVe__4D94879B != null)) {
                    columnValuesArray[10] = parentTYPE_VEHICULERowByFK__VEHICULE__TypeVe__4D94879B[0];
                }
                rowVEHICULERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowVEHICULERow);
                return rowVEHICULERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VEHICULERow FindByVehicule_Id(int Vehicule_Id) {
                return ((VEHICULERow)(this.Rows.Find(new object[] {
                            Vehicule_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                VEHICULEDataTable cln = ((VEHICULEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new VEHICULEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnVehicule_Id = base.Columns["Vehicule_Id"];
                this.columnVehicule_Marque = base.Columns["Vehicule_Marque"];
                this.columnVehicule_Modele = base.Columns["Vehicule_Modele"];
                this.columnVehicule_Annee = base.Columns["Vehicule_Annee"];
                this.columnVehicule_Couleur = base.Columns["Vehicule_Couleur"];
                this.columnVehicule_NbPlaces = base.Columns["Vehicule_NbPlaces"];
                this.columnVehicule_societe = base.Columns["Vehicule_societe"];
                this.columnVehicule_immatriculation = base.Columns["Vehicule_immatriculation"];
                this.columnCarburant_Id = base.Columns["Carburant_Id"];
                this.columnUtilisateur_Id = base.Columns["Utilisateur_Id"];
                this.columnTypeVehicule_Id = base.Columns["TypeVehicule_Id"];
                this.columnVehicule_Actif = base.Columns["Vehicule_Actif"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnVehicule_Id = new global::System.Data.DataColumn("Vehicule_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicule_Id);
                this.columnVehicule_Marque = new global::System.Data.DataColumn("Vehicule_Marque", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicule_Marque);
                this.columnVehicule_Modele = new global::System.Data.DataColumn("Vehicule_Modele", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicule_Modele);
                this.columnVehicule_Annee = new global::System.Data.DataColumn("Vehicule_Annee", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicule_Annee);
                this.columnVehicule_Couleur = new global::System.Data.DataColumn("Vehicule_Couleur", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicule_Couleur);
                this.columnVehicule_NbPlaces = new global::System.Data.DataColumn("Vehicule_NbPlaces", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicule_NbPlaces);
                this.columnVehicule_societe = new global::System.Data.DataColumn("Vehicule_societe", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicule_societe);
                this.columnVehicule_immatriculation = new global::System.Data.DataColumn("Vehicule_immatriculation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicule_immatriculation);
                this.columnCarburant_Id = new global::System.Data.DataColumn("Carburant_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCarburant_Id);
                this.columnUtilisateur_Id = new global::System.Data.DataColumn("Utilisateur_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilisateur_Id);
                this.columnTypeVehicule_Id = new global::System.Data.DataColumn("TypeVehicule_Id", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeVehicule_Id);
                this.columnVehicule_Actif = new global::System.Data.DataColumn("Vehicule_Actif", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVehicule_Actif);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnVehicule_Id}, true));
                this.columnVehicule_Id.AutoIncrement = true;
                this.columnVehicule_Id.AutoIncrementSeed = -1;
                this.columnVehicule_Id.AutoIncrementStep = -1;
                this.columnVehicule_Id.AllowDBNull = false;
                this.columnVehicule_Id.ReadOnly = true;
                this.columnVehicule_Id.Unique = true;
                this.columnVehicule_Marque.AllowDBNull = false;
                this.columnVehicule_Marque.MaxLength = 20;
                this.columnVehicule_Modele.AllowDBNull = false;
                this.columnVehicule_Modele.MaxLength = 20;
                this.columnVehicule_Annee.AllowDBNull = false;
                this.columnVehicule_Couleur.AllowDBNull = false;
                this.columnVehicule_Couleur.MaxLength = 20;
                this.columnVehicule_NbPlaces.AllowDBNull = false;
                this.columnVehicule_societe.AllowDBNull = false;
                this.columnVehicule_immatriculation.AllowDBNull = false;
                this.columnVehicule_immatriculation.MaxLength = 12;
                this.columnCarburant_Id.AllowDBNull = false;
                this.columnCarburant_Id.MaxLength = 5;
                this.columnUtilisateur_Id.AllowDBNull = false;
                this.columnTypeVehicule_Id.AllowDBNull = false;
                this.columnVehicule_Actif.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VEHICULERow NewVEHICULERow() {
                return ((VEHICULERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new VEHICULERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(VEHICULERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.VEHICULERowChanged != null)) {
                    this.VEHICULERowChanged(this, new VEHICULERowChangeEvent(((VEHICULERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.VEHICULERowChanging != null)) {
                    this.VEHICULERowChanging(this, new VEHICULERowChangeEvent(((VEHICULERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.VEHICULERowDeleted != null)) {
                    this.VEHICULERowDeleted(this, new VEHICULERowChangeEvent(((VEHICULERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.VEHICULERowDeleting != null)) {
                    this.VEHICULERowDeleting(this, new VEHICULERowChangeEvent(((VEHICULERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveVEHICULERow(VEHICULERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                gsbcarpoolingDataSet ds = new gsbcarpoolingDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "VEHICULEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class VILLEDataTable : global::System.Data.TypedTableBase<VILLERow> {
            
            private global::System.Data.DataColumn columnVille_Nom;
            
            private global::System.Data.DataColumn columnVille_CodePostal;
            
            private global::System.Data.DataColumn columnVille_Latitude;
            
            private global::System.Data.DataColumn columnVille_Longitude;
            
            private global::System.Data.DataColumn columnPays_Id;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VILLEDataTable() {
                this.TableName = "VILLE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal VILLEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected VILLEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ville_NomColumn {
                get {
                    return this.columnVille_Nom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ville_CodePostalColumn {
                get {
                    return this.columnVille_CodePostal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ville_LatitudeColumn {
                get {
                    return this.columnVille_Latitude;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Ville_LongitudeColumn {
                get {
                    return this.columnVille_Longitude;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Pays_IdColumn {
                get {
                    return this.columnPays_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VILLERow this[int index] {
                get {
                    return ((VILLERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VILLERowChangeEventHandler VILLERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VILLERowChangeEventHandler VILLERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VILLERowChangeEventHandler VILLERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event VILLERowChangeEventHandler VILLERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddVILLERow(VILLERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VILLERow AddVILLERow(string Ville_Nom, string Ville_CodePostal, float Ville_Latitude, float Ville_Longitude, PAYSRow parentPAYSRowByFK__VILLE__Pays_Id__403A8C7D) {
                VILLERow rowVILLERow = ((VILLERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Ville_Nom,
                        Ville_CodePostal,
                        Ville_Latitude,
                        Ville_Longitude,
                        null};
                if ((parentPAYSRowByFK__VILLE__Pays_Id__403A8C7D != null)) {
                    columnValuesArray[4] = parentPAYSRowByFK__VILLE__Pays_Id__403A8C7D[0];
                }
                rowVILLERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowVILLERow);
                return rowVILLERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VILLERow FindByVille_NomVille_CodePostal(string Ville_Nom, string Ville_CodePostal) {
                return ((VILLERow)(this.Rows.Find(new object[] {
                            Ville_Nom,
                            Ville_CodePostal})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                VILLEDataTable cln = ((VILLEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new VILLEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnVille_Nom = base.Columns["Ville_Nom"];
                this.columnVille_CodePostal = base.Columns["Ville_CodePostal"];
                this.columnVille_Latitude = base.Columns["Ville_Latitude"];
                this.columnVille_Longitude = base.Columns["Ville_Longitude"];
                this.columnPays_Id = base.Columns["Pays_Id"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnVille_Nom = new global::System.Data.DataColumn("Ville_Nom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVille_Nom);
                this.columnVille_CodePostal = new global::System.Data.DataColumn("Ville_CodePostal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVille_CodePostal);
                this.columnVille_Latitude = new global::System.Data.DataColumn("Ville_Latitude", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVille_Latitude);
                this.columnVille_Longitude = new global::System.Data.DataColumn("Ville_Longitude", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVille_Longitude);
                this.columnPays_Id = new global::System.Data.DataColumn("Pays_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPays_Id);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnVille_Nom,
                                this.columnVille_CodePostal}, true));
                this.columnVille_Nom.AllowDBNull = false;
                this.columnVille_Nom.MaxLength = 40;
                this.columnVille_CodePostal.AllowDBNull = false;
                this.columnVille_CodePostal.MaxLength = 5;
                this.columnVille_Latitude.AllowDBNull = false;
                this.columnVille_Longitude.AllowDBNull = false;
                this.columnPays_Id.AllowDBNull = false;
                this.columnPays_Id.MaxLength = 3;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VILLERow NewVILLERow() {
                return ((VILLERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new VILLERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(VILLERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.VILLERowChanged != null)) {
                    this.VILLERowChanged(this, new VILLERowChangeEvent(((VILLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.VILLERowChanging != null)) {
                    this.VILLERowChanging(this, new VILLERowChangeEvent(((VILLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.VILLERowDeleted != null)) {
                    this.VILLERowDeleted(this, new VILLERowChangeEvent(((VILLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.VILLERowDeleting != null)) {
                    this.VILLERowDeleting(this, new VILLERowChangeEvent(((VILLERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveVILLERow(VILLERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                gsbcarpoolingDataSet ds = new gsbcarpoolingDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "VILLEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CARBURANTRow : global::System.Data.DataRow {
            
            private CARBURANTDataTable tableCARBURANT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal CARBURANTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCARBURANT = ((CARBURANTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Carburant_Id {
                get {
                    return ((string)(this[this.tableCARBURANT.Carburant_IdColumn]));
                }
                set {
                    this[this.tableCARBURANT.Carburant_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Carburant_Libelle {
                get {
                    return ((string)(this[this.tableCARBURANT.Carburant_LibelleColumn]));
                }
                set {
                    this[this.tableCARBURANT.Carburant_LibelleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VEHICULERow[] GetVEHICULERows() {
                if ((this.Table.ChildRelations["FK__VEHICULE__Carbur__4BAC3F29"] == null)) {
                    return new VEHICULERow[0];
                }
                else {
                    return ((VEHICULERow[])(base.GetChildRows(this.Table.ChildRelations["FK__VEHICULE__Carbur__4BAC3F29"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ETAPERow : global::System.Data.DataRow {
            
            private ETAPEDataTable tableETAPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ETAPERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableETAPE = ((ETAPEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Trajet_Id {
                get {
                    return ((int)(this[this.tableETAPE.Trajet_IdColumn]));
                }
                set {
                    this[this.tableETAPE.Trajet_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte Etape_Id {
                get {
                    return ((byte)(this[this.tableETAPE.Etape_IdColumn]));
                }
                set {
                    this[this.tableETAPE.Etape_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int ordre {
                get {
                    return ((int)(this[this.tableETAPE.ordreColumn]));
                }
                set {
                    this[this.tableETAPE.ordreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.TimeSpan Heure_Arrivee {
                get {
                    try {
                        return ((global::System.TimeSpan)(this[this.tableETAPE.Heure_ArriveeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Heure_Arrivee\' dans la table \'ETAPE\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableETAPE.Heure_ArriveeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Date_Arrivee {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableETAPE.Date_ArriveeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Date_Arrivee\' dans la table \'ETAPE\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableETAPE.Date_ArriveeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ville_Nom {
                get {
                    return ((string)(this[this.tableETAPE.Ville_NomColumn]));
                }
                set {
                    this[this.tableETAPE.Ville_NomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ville_CodePostal {
                get {
                    return ((string)(this[this.tableETAPE.Ville_CodePostalColumn]));
                }
                set {
                    this[this.tableETAPE.Ville_CodePostalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VILLERow VILLERowParent {
                get {
                    return ((VILLERow)(this.GetParentRow(this.Table.ParentRelations["FK__ETAPE__5441852A"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__ETAPE__5441852A"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TRAJETRow TRAJETRow {
                get {
                    return ((TRAJETRow)(this.GetParentRow(this.Table.ParentRelations["FK__ETAPE__Trajet_Id__534D60F1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__ETAPE__Trajet_Id__534D60F1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHeure_ArriveeNull() {
                return this.IsNull(this.tableETAPE.Heure_ArriveeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHeure_ArriveeNull() {
                this[this.tableETAPE.Heure_ArriveeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDate_ArriveeNull() {
                return this.IsNull(this.tableETAPE.Date_ArriveeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDate_ArriveeNull() {
                this[this.tableETAPE.Date_ArriveeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PAYSRow : global::System.Data.DataRow {
            
            private PAYSDataTable tablePAYS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal PAYSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePAYS = ((PAYSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Pays_Id {
                get {
                    return ((string)(this[this.tablePAYS.Pays_IdColumn]));
                }
                set {
                    this[this.tablePAYS.Pays_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Pays_Libelle {
                get {
                    return ((string)(this[this.tablePAYS.Pays_LibelleColumn]));
                }
                set {
                    this[this.tablePAYS.Pays_LibelleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VILLERow[] GetVILLERows() {
                if ((this.Table.ChildRelations["FK__VILLE__Pays_Id__403A8C7D"] == null)) {
                    return new VILLERow[0];
                }
                else {
                    return ((VILLERow[])(base.GetChildRows(this.Table.ChildRelations["FK__VILLE__Pays_Id__403A8C7D"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class PROPOSERRow : global::System.Data.DataRow {
            
            private PROPOSERDataTable tablePROPOSER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal PROPOSERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePROPOSER = ((PROPOSERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Vehicule_Id {
                get {
                    return ((int)(this[this.tablePROPOSER.Vehicule_IdColumn]));
                }
                set {
                    this[this.tablePROPOSER.Vehicule_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Trajet_Id {
                get {
                    return ((int)(this[this.tablePROPOSER.Trajet_IdColumn]));
                }
                set {
                    this[this.tablePROPOSER.Trajet_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string commentaire {
                get {
                    try {
                        return ((string)(this[this.tablePROPOSER.commentaireColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'commentaire\' dans la table \'PROPOSER\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tablePROPOSER.commentaireColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Utilisateur_Id {
                get {
                    return ((int)(this[this.tablePROPOSER.Utilisateur_IdColumn]));
                }
                set {
                    this[this.tablePROPOSER.Utilisateur_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TRAJETRow TRAJETRow {
                get {
                    return ((TRAJETRow)(this.GetParentRow(this.Table.ParentRelations["FK__PROPOSER__Trajet__5812160E"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__PROPOSER__Trajet__5812160E"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UTILISATEURRow UTILISATEURRow {
                get {
                    return ((UTILISATEURRow)(this.GetParentRow(this.Table.ParentRelations["FK__PROPOSER__Utilis__59063A47"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__PROPOSER__Utilis__59063A47"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VEHICULERow VEHICULERow {
                get {
                    return ((VEHICULERow)(this.GetParentRow(this.Table.ParentRelations["FK__PROPOSER__Vehicu__571DF1D5"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__PROPOSER__Vehicu__571DF1D5"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IscommentaireNull() {
                return this.IsNull(this.tablePROPOSER.commentaireColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetcommentaireNull() {
                this[this.tablePROPOSER.commentaireColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class RESERVERRow : global::System.Data.DataRow {
            
            private RESERVERDataTable tableRESERVER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal RESERVERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRESERVER = ((RESERVERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Utilisateur_Id {
                get {
                    return ((int)(this[this.tableRESERVER.Utilisateur_IdColumn]));
                }
                set {
                    this[this.tableRESERVER.Utilisateur_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Trajet_Id {
                get {
                    return ((int)(this[this.tableRESERVER.Trajet_IdColumn]));
                }
                set {
                    this[this.tableRESERVER.Trajet_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte note {
                get {
                    try {
                        return ((byte)(this[this.tableRESERVER.noteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'note\' dans la table \'RESERVER\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableRESERVER.noteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string commentaire {
                get {
                    try {
                        return ((string)(this[this.tableRESERVER.commentaireColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'commentaire\' dans la table \'RESERVER\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableRESERVER.commentaireColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TRAJETRow TRAJETRow {
                get {
                    return ((TRAJETRow)(this.GetParentRow(this.Table.ParentRelations["FK__RESERVER__Trajet__5CD6CB2B"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__RESERVER__Trajet__5CD6CB2B"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UTILISATEURRow UTILISATEURRow {
                get {
                    return ((UTILISATEURRow)(this.GetParentRow(this.Table.ParentRelations["FK__RESERVER__Utilis__5BE2A6F2"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__RESERVER__Utilis__5BE2A6F2"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsnoteNull() {
                return this.IsNull(this.tableRESERVER.noteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetnoteNull() {
                this[this.tableRESERVER.noteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IscommentaireNull() {
                return this.IsNull(this.tableRESERVER.commentaireColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetcommentaireNull() {
                this[this.tableRESERVER.commentaireColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TRAJETRow : global::System.Data.DataRow {
            
            private TRAJETDataTable tableTRAJET;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TRAJETRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTRAJET = ((TRAJETDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Trajet_Id {
                get {
                    return ((int)(this[this.tableTRAJET.Trajet_IdColumn]));
                }
                set {
                    this[this.tableTRAJET.Trajet_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Trajet_Date {
                get {
                    return ((global::System.DateTime)(this[this.tableTRAJET.Trajet_DateColumn]));
                }
                set {
                    this[this.tableTRAJET.Trajet_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.TimeSpan Trajet_HeureDepart {
                get {
                    return ((global::System.TimeSpan)(this[this.tableTRAJET.Trajet_HeureDepartColumn]));
                }
                set {
                    this[this.tableTRAJET.Trajet_HeureDepartColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Trajet_Commentaire {
                get {
                    try {
                        return ((string)(this[this.tableTRAJET.Trajet_CommentaireColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Trajet_Commentaire\' dans la table \'TRAJET\' est DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableTRAJET.Trajet_CommentaireColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte Trajet_NbPassagers {
                get {
                    return ((byte)(this[this.tableTRAJET.Trajet_NbPassagersColumn]));
                }
                set {
                    this[this.tableTRAJET.Trajet_NbPassagersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Vehicule_Id {
                get {
                    return ((int)(this[this.tableTRAJET.Vehicule_IdColumn]));
                }
                set {
                    this[this.tableTRAJET.Vehicule_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Utilisateur_Id {
                get {
                    return ((int)(this[this.tableTRAJET.Utilisateur_IdColumn]));
                }
                set {
                    this[this.tableTRAJET.Utilisateur_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ville_Depart {
                get {
                    return ((string)(this[this.tableTRAJET.Ville_DepartColumn]));
                }
                set {
                    this[this.tableTRAJET.Ville_DepartColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VEHICULERow VEHICULERow {
                get {
                    return ((VEHICULERow)(this.GetParentRow(this.Table.ParentRelations["FK__TRAJET__Vehicule__5070F446"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__TRAJET__Vehicule__5070F446"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UTILISATEURRow UTILISATEURRow {
                get {
                    return ((UTILISATEURRow)(this.GetParentRow(this.Table.ParentRelations["FK_TRAJET_UTILISATEUR"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_TRAJET_UTILISATEUR"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTrajet_CommentaireNull() {
                return this.IsNull(this.tableTRAJET.Trajet_CommentaireColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTrajet_CommentaireNull() {
                this[this.tableTRAJET.Trajet_CommentaireColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ETAPERow[] GetETAPERows() {
                if ((this.Table.ChildRelations["FK__ETAPE__Trajet_Id__534D60F1"] == null)) {
                    return new ETAPERow[0];
                }
                else {
                    return ((ETAPERow[])(base.GetChildRows(this.Table.ChildRelations["FK__ETAPE__Trajet_Id__534D60F1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PROPOSERRow[] GetPROPOSERRows() {
                if ((this.Table.ChildRelations["FK__PROPOSER__Trajet__5812160E"] == null)) {
                    return new PROPOSERRow[0];
                }
                else {
                    return ((PROPOSERRow[])(base.GetChildRows(this.Table.ChildRelations["FK__PROPOSER__Trajet__5812160E"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public RESERVERRow[] GetRESERVERRows() {
                if ((this.Table.ChildRelations["FK__RESERVER__Trajet__5CD6CB2B"] == null)) {
                    return new RESERVERRow[0];
                }
                else {
                    return ((RESERVERRow[])(base.GetChildRows(this.Table.ChildRelations["FK__RESERVER__Trajet__5CD6CB2B"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TYPE_UTILISATEURRow : global::System.Data.DataRow {
            
            private TYPE_UTILISATEURDataTable tableTYPE_UTILISATEUR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TYPE_UTILISATEURRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTYPE_UTILISATEUR = ((TYPE_UTILISATEURDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TypeUtilisateur_Id {
                get {
                    return ((string)(this[this.tableTYPE_UTILISATEUR.TypeUtilisateur_IdColumn]));
                }
                set {
                    this[this.tableTYPE_UTILISATEUR.TypeUtilisateur_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TypeUtilisateur_Libelle {
                get {
                    return ((string)(this[this.tableTYPE_UTILISATEUR.TypeUtilisateur_LibelleColumn]));
                }
                set {
                    this[this.tableTYPE_UTILISATEUR.TypeUtilisateur_LibelleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UTILISATEURRow[] GetUTILISATEURRows() {
                if ((this.Table.ChildRelations["FK__UTILISATE__TypeU__46E78A0C"] == null)) {
                    return new UTILISATEURRow[0];
                }
                else {
                    return ((UTILISATEURRow[])(base.GetChildRows(this.Table.ChildRelations["FK__UTILISATE__TypeU__46E78A0C"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TYPE_VEHICULERow : global::System.Data.DataRow {
            
            private TYPE_VEHICULEDataTable tableTYPE_VEHICULE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TYPE_VEHICULERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTYPE_VEHICULE = ((TYPE_VEHICULEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte TypeVehicule_Id {
                get {
                    return ((byte)(this[this.tableTYPE_VEHICULE.TypeVehicule_IdColumn]));
                }
                set {
                    this[this.tableTYPE_VEHICULE.TypeVehicule_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TypeVehicule_Libelle {
                get {
                    return ((string)(this[this.tableTYPE_VEHICULE.TypeVehicule_LibelleColumn]));
                }
                set {
                    this[this.tableTYPE_VEHICULE.TypeVehicule_LibelleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VEHICULERow[] GetVEHICULERows() {
                if ((this.Table.ChildRelations["FK__VEHICULE__TypeVe__4D94879B"] == null)) {
                    return new VEHICULERow[0];
                }
                else {
                    return ((VEHICULERow[])(base.GetChildRows(this.Table.ChildRelations["FK__VEHICULE__TypeVe__4D94879B"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class UTILISATEURRow : global::System.Data.DataRow {
            
            private UTILISATEURDataTable tableUTILISATEUR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal UTILISATEURRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUTILISATEUR = ((UTILISATEURDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Utilisateur_Id {
                get {
                    return ((int)(this[this.tableUTILISATEUR.Utilisateur_IdColumn]));
                }
                set {
                    this[this.tableUTILISATEUR.Utilisateur_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Utilisateur_Nom {
                get {
                    return ((string)(this[this.tableUTILISATEUR.Utilisateur_NomColumn]));
                }
                set {
                    this[this.tableUTILISATEUR.Utilisateur_NomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Utilisateur_Prenom {
                get {
                    return ((string)(this[this.tableUTILISATEUR.Utilisateur_PrenomColumn]));
                }
                set {
                    this[this.tableUTILISATEUR.Utilisateur_PrenomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Utilisateur_Photo {
                get {
                    try {
                        return ((string)(this[this.tableUTILISATEUR.Utilisateur_PhotoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Utilisateur_Photo\' dans la table \'UTILISATEUR\' est DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableUTILISATEUR.Utilisateur_PhotoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Utilisateur_Pseudonyme {
                get {
                    return ((string)(this[this.tableUTILISATEUR.Utilisateur_PseudonymeColumn]));
                }
                set {
                    this[this.tableUTILISATEUR.Utilisateur_PseudonymeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Utilisateur_HashPassword {
                get {
                    return ((string)(this[this.tableUTILISATEUR.Utilisateur_HashPasswordColumn]));
                }
                set {
                    this[this.tableUTILISATEUR.Utilisateur_HashPasswordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Utilisateur_DateNaissance {
                get {
                    return ((global::System.DateTime)(this[this.tableUTILISATEUR.Utilisateur_DateNaissanceColumn]));
                }
                set {
                    this[this.tableUTILISATEUR.Utilisateur_DateNaissanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Utilisateur_Rue {
                get {
                    return ((string)(this[this.tableUTILISATEUR.Utilisateur_RueColumn]));
                }
                set {
                    this[this.tableUTILISATEUR.Utilisateur_RueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Utilisateur_Email {
                get {
                    return ((string)(this[this.tableUTILISATEUR.Utilisateur_EmailColumn]));
                }
                set {
                    this[this.tableUTILISATEUR.Utilisateur_EmailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Utilisateur_TelMobile {
                get {
                    return ((string)(this[this.tableUTILISATEUR.Utilisateur_TelMobileColumn]));
                }
                set {
                    this[this.tableUTILISATEUR.Utilisateur_TelMobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Utilisateur_Sexe {
                get {
                    return ((string)(this[this.tableUTILISATEUR.Utilisateur_SexeColumn]));
                }
                set {
                    this[this.tableUTILISATEUR.Utilisateur_SexeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime Utilisateur_DateInscription {
                get {
                    return ((global::System.DateTime)(this[this.tableUTILISATEUR.Utilisateur_DateInscriptionColumn]));
                }
                set {
                    this[this.tableUTILISATEUR.Utilisateur_DateInscriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Utilisateur_PremiereConnexion {
                get {
                    return ((bool)(this[this.tableUTILISATEUR.Utilisateur_PremiereConnexionColumn]));
                }
                set {
                    this[this.tableUTILISATEUR.Utilisateur_PremiereConnexionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ville_Nom {
                get {
                    return ((string)(this[this.tableUTILISATEUR.Ville_NomColumn]));
                }
                set {
                    this[this.tableUTILISATEUR.Ville_NomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ville_CodePostal {
                get {
                    return ((string)(this[this.tableUTILISATEUR.Ville_CodePostalColumn]));
                }
                set {
                    this[this.tableUTILISATEUR.Ville_CodePostalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TypeUtilisateur_Id {
                get {
                    return ((string)(this[this.tableUTILISATEUR.TypeUtilisateur_IdColumn]));
                }
                set {
                    this[this.tableUTILISATEUR.TypeUtilisateur_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Utilisateur_Actif {
                get {
                    return ((bool)(this[this.tableUTILISATEUR.Utilisateur_ActifColumn]));
                }
                set {
                    this[this.tableUTILISATEUR.Utilisateur_ActifColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TYPE_UTILISATEURRow TYPE_UTILISATEURRow {
                get {
                    return ((TYPE_UTILISATEURRow)(this.GetParentRow(this.Table.ParentRelations["FK__UTILISATE__TypeU__46E78A0C"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__UTILISATE__TypeU__46E78A0C"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VILLERow VILLERowParent {
                get {
                    return ((VILLERow)(this.GetParentRow(this.Table.ParentRelations["FK__UTILISATEUR__45F365D3"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__UTILISATEUR__45F365D3"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUtilisateur_PhotoNull() {
                return this.IsNull(this.tableUTILISATEUR.Utilisateur_PhotoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUtilisateur_PhotoNull() {
                this[this.tableUTILISATEUR.Utilisateur_PhotoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PROPOSERRow[] GetPROPOSERRows() {
                if ((this.Table.ChildRelations["FK__PROPOSER__Utilis__59063A47"] == null)) {
                    return new PROPOSERRow[0];
                }
                else {
                    return ((PROPOSERRow[])(base.GetChildRows(this.Table.ChildRelations["FK__PROPOSER__Utilis__59063A47"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public RESERVERRow[] GetRESERVERRows() {
                if ((this.Table.ChildRelations["FK__RESERVER__Utilis__5BE2A6F2"] == null)) {
                    return new RESERVERRow[0];
                }
                else {
                    return ((RESERVERRow[])(base.GetChildRows(this.Table.ChildRelations["FK__RESERVER__Utilis__5BE2A6F2"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TRAJETRow[] GetTRAJETRows() {
                if ((this.Table.ChildRelations["FK_TRAJET_UTILISATEUR"] == null)) {
                    return new TRAJETRow[0];
                }
                else {
                    return ((TRAJETRow[])(base.GetChildRows(this.Table.ChildRelations["FK_TRAJET_UTILISATEUR"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VEHICULERow[] GetVEHICULERows() {
                if ((this.Table.ChildRelations["FK__VEHICULE__Utilis__4CA06362"] == null)) {
                    return new VEHICULERow[0];
                }
                else {
                    return ((VEHICULERow[])(base.GetChildRows(this.Table.ChildRelations["FK__VEHICULE__Utilis__4CA06362"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class VEHICULERow : global::System.Data.DataRow {
            
            private VEHICULEDataTable tableVEHICULE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal VEHICULERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVEHICULE = ((VEHICULEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Vehicule_Id {
                get {
                    return ((int)(this[this.tableVEHICULE.Vehicule_IdColumn]));
                }
                set {
                    this[this.tableVEHICULE.Vehicule_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Vehicule_Marque {
                get {
                    return ((string)(this[this.tableVEHICULE.Vehicule_MarqueColumn]));
                }
                set {
                    this[this.tableVEHICULE.Vehicule_MarqueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Vehicule_Modele {
                get {
                    return ((string)(this[this.tableVEHICULE.Vehicule_ModeleColumn]));
                }
                set {
                    this[this.tableVEHICULE.Vehicule_ModeleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Vehicule_Annee {
                get {
                    return ((int)(this[this.tableVEHICULE.Vehicule_AnneeColumn]));
                }
                set {
                    this[this.tableVEHICULE.Vehicule_AnneeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Vehicule_Couleur {
                get {
                    return ((string)(this[this.tableVEHICULE.Vehicule_CouleurColumn]));
                }
                set {
                    this[this.tableVEHICULE.Vehicule_CouleurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte Vehicule_NbPlaces {
                get {
                    return ((byte)(this[this.tableVEHICULE.Vehicule_NbPlacesColumn]));
                }
                set {
                    this[this.tableVEHICULE.Vehicule_NbPlacesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Vehicule_societe {
                get {
                    return ((bool)(this[this.tableVEHICULE.Vehicule_societeColumn]));
                }
                set {
                    this[this.tableVEHICULE.Vehicule_societeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Vehicule_immatriculation {
                get {
                    return ((string)(this[this.tableVEHICULE.Vehicule_immatriculationColumn]));
                }
                set {
                    this[this.tableVEHICULE.Vehicule_immatriculationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Carburant_Id {
                get {
                    return ((string)(this[this.tableVEHICULE.Carburant_IdColumn]));
                }
                set {
                    this[this.tableVEHICULE.Carburant_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Utilisateur_Id {
                get {
                    return ((int)(this[this.tableVEHICULE.Utilisateur_IdColumn]));
                }
                set {
                    this[this.tableVEHICULE.Utilisateur_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public byte TypeVehicule_Id {
                get {
                    return ((byte)(this[this.tableVEHICULE.TypeVehicule_IdColumn]));
                }
                set {
                    this[this.tableVEHICULE.TypeVehicule_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool Vehicule_Actif {
                get {
                    return ((bool)(this[this.tableVEHICULE.Vehicule_ActifColumn]));
                }
                set {
                    this[this.tableVEHICULE.Vehicule_ActifColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CARBURANTRow CARBURANTRow {
                get {
                    return ((CARBURANTRow)(this.GetParentRow(this.Table.ParentRelations["FK__VEHICULE__Carbur__4BAC3F29"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__VEHICULE__Carbur__4BAC3F29"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TYPE_VEHICULERow TYPE_VEHICULERow {
                get {
                    return ((TYPE_VEHICULERow)(this.GetParentRow(this.Table.ParentRelations["FK__VEHICULE__TypeVe__4D94879B"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__VEHICULE__TypeVe__4D94879B"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UTILISATEURRow UTILISATEURRow {
                get {
                    return ((UTILISATEURRow)(this.GetParentRow(this.Table.ParentRelations["FK__VEHICULE__Utilis__4CA06362"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__VEHICULE__Utilis__4CA06362"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PROPOSERRow[] GetPROPOSERRows() {
                if ((this.Table.ChildRelations["FK__PROPOSER__Vehicu__571DF1D5"] == null)) {
                    return new PROPOSERRow[0];
                }
                else {
                    return ((PROPOSERRow[])(base.GetChildRows(this.Table.ChildRelations["FK__PROPOSER__Vehicu__571DF1D5"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TRAJETRow[] GetTRAJETRows() {
                if ((this.Table.ChildRelations["FK__TRAJET__Vehicule__5070F446"] == null)) {
                    return new TRAJETRow[0];
                }
                else {
                    return ((TRAJETRow[])(base.GetChildRows(this.Table.ChildRelations["FK__TRAJET__Vehicule__5070F446"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class VILLERow : global::System.Data.DataRow {
            
            private VILLEDataTable tableVILLE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal VILLERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVILLE = ((VILLEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ville_Nom {
                get {
                    return ((string)(this[this.tableVILLE.Ville_NomColumn]));
                }
                set {
                    this[this.tableVILLE.Ville_NomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Ville_CodePostal {
                get {
                    return ((string)(this[this.tableVILLE.Ville_CodePostalColumn]));
                }
                set {
                    this[this.tableVILLE.Ville_CodePostalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float Ville_Latitude {
                get {
                    return ((float)(this[this.tableVILLE.Ville_LatitudeColumn]));
                }
                set {
                    this[this.tableVILLE.Ville_LatitudeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public float Ville_Longitude {
                get {
                    return ((float)(this[this.tableVILLE.Ville_LongitudeColumn]));
                }
                set {
                    this[this.tableVILLE.Ville_LongitudeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Pays_Id {
                get {
                    return ((string)(this[this.tableVILLE.Pays_IdColumn]));
                }
                set {
                    this[this.tableVILLE.Pays_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PAYSRow PAYSRow {
                get {
                    return ((PAYSRow)(this.GetParentRow(this.Table.ParentRelations["FK__VILLE__Pays_Id__403A8C7D"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK__VILLE__Pays_Id__403A8C7D"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ETAPERow[] GetETAPERows() {
                if ((this.Table.ChildRelations["FK__ETAPE__5441852A"] == null)) {
                    return new ETAPERow[0];
                }
                else {
                    return ((ETAPERow[])(base.GetChildRows(this.Table.ChildRelations["FK__ETAPE__5441852A"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UTILISATEURRow[] GetUTILISATEURRows() {
                if ((this.Table.ChildRelations["FK__UTILISATEUR__45F365D3"] == null)) {
                    return new UTILISATEURRow[0];
                }
                else {
                    return ((UTILISATEURRow[])(base.GetChildRows(this.Table.ChildRelations["FK__UTILISATEUR__45F365D3"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class CARBURANTRowChangeEvent : global::System.EventArgs {
            
            private CARBURANTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CARBURANTRowChangeEvent(CARBURANTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public CARBURANTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ETAPERowChangeEvent : global::System.EventArgs {
            
            private ETAPERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ETAPERowChangeEvent(ETAPERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ETAPERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class PAYSRowChangeEvent : global::System.EventArgs {
            
            private PAYSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PAYSRowChangeEvent(PAYSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PAYSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class PROPOSERRowChangeEvent : global::System.EventArgs {
            
            private PROPOSERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PROPOSERRowChangeEvent(PROPOSERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public PROPOSERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class RESERVERRowChangeEvent : global::System.EventArgs {
            
            private RESERVERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public RESERVERRowChangeEvent(RESERVERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public RESERVERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class TRAJETRowChangeEvent : global::System.EventArgs {
            
            private TRAJETRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TRAJETRowChangeEvent(TRAJETRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TRAJETRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class TYPE_UTILISATEURRowChangeEvent : global::System.EventArgs {
            
            private TYPE_UTILISATEURRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TYPE_UTILISATEURRowChangeEvent(TYPE_UTILISATEURRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TYPE_UTILISATEURRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class TYPE_VEHICULERowChangeEvent : global::System.EventArgs {
            
            private TYPE_VEHICULERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TYPE_VEHICULERowChangeEvent(TYPE_VEHICULERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TYPE_VEHICULERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class UTILISATEURRowChangeEvent : global::System.EventArgs {
            
            private UTILISATEURRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UTILISATEURRowChangeEvent(UTILISATEURRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public UTILISATEURRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class VEHICULERowChangeEvent : global::System.EventArgs {
            
            private VEHICULERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VEHICULERowChangeEvent(VEHICULERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VEHICULERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class VILLERowChangeEvent : global::System.EventArgs {
            
            private VILLERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VILLERowChangeEvent(VILLERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public VILLERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace GSBCarpooling.gsbcarpoolingDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CARBURANTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public CARBURANTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CARBURANT";
            tableMapping.ColumnMappings.Add("Carburant_Id", "Carburant_Id");
            tableMapping.ColumnMappings.Add("Carburant_Libelle", "Carburant_Libelle");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[CARBURANT] WHERE (([Carburant_Id] = @Original_Carburant_Id) AN" +
                "D ([Carburant_Libelle] = @Original_Carburant_Libelle))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Carburant_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Carburant_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Carburant_Libelle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Carburant_Libelle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[CARBURANT] ([Carburant_Id], [Carburant_Libelle]) VALUES (@Carb" +
                "urant_Id, @Carburant_Libelle);\r\nSELECT Carburant_Id, Carburant_Libelle FROM CARB" +
                "URANT WHERE (Carburant_Id = @Carburant_Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Carburant_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Carburant_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Carburant_Libelle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Carburant_Libelle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[CARBURANT] SET [Carburant_Id] = @Carburant_Id, [Carburant_Libelle] = @Carburant_Libelle WHERE (([Carburant_Id] = @Original_Carburant_Id) AND ([Carburant_Libelle] = @Original_Carburant_Libelle));
SELECT Carburant_Id, Carburant_Libelle FROM CARBURANT WHERE (Carburant_Id = @Carburant_Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Carburant_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Carburant_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Carburant_Libelle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Carburant_Libelle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Carburant_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Carburant_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Carburant_Libelle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Carburant_Libelle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GSBCarpooling.Properties.Settings.Default.gsbcarpoolingConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Carburant_Id, Carburant_Libelle FROM dbo.CARBURANT";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(gsbcarpoolingDataSet.CARBURANTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual gsbcarpoolingDataSet.CARBURANTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            gsbcarpoolingDataSet.CARBURANTDataTable dataTable = new gsbcarpoolingDataSet.CARBURANTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gsbcarpoolingDataSet.CARBURANTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gsbcarpoolingDataSet dataSet) {
            return this.Adapter.Update(dataSet, "CARBURANT");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_Carburant_Id, string Original_Carburant_Libelle) {
            if ((Original_Carburant_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Carburant_Id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_Carburant_Id));
            }
            if ((Original_Carburant_Libelle == null)) {
                throw new global::System.ArgumentNullException("Original_Carburant_Libelle");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Carburant_Libelle));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Carburant_Id, string Carburant_Libelle) {
            if ((Carburant_Id == null)) {
                throw new global::System.ArgumentNullException("Carburant_Id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Carburant_Id));
            }
            if ((Carburant_Libelle == null)) {
                throw new global::System.ArgumentNullException("Carburant_Libelle");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Carburant_Libelle));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Carburant_Id, string Carburant_Libelle, string Original_Carburant_Id, string Original_Carburant_Libelle) {
            if ((Carburant_Id == null)) {
                throw new global::System.ArgumentNullException("Carburant_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Carburant_Id));
            }
            if ((Carburant_Libelle == null)) {
                throw new global::System.ArgumentNullException("Carburant_Libelle");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Carburant_Libelle));
            }
            if ((Original_Carburant_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Carburant_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_Carburant_Id));
            }
            if ((Original_Carburant_Libelle == null)) {
                throw new global::System.ArgumentNullException("Original_Carburant_Libelle");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_Carburant_Libelle));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Carburant_Libelle, string Original_Carburant_Id, string Original_Carburant_Libelle) {
            return this.Update(Original_Carburant_Id, Carburant_Libelle, Original_Carburant_Id, Original_Carburant_Libelle);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ETAPETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ETAPETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ETAPE";
            tableMapping.ColumnMappings.Add("Trajet_Id", "Trajet_Id");
            tableMapping.ColumnMappings.Add("Etape_Id", "Etape_Id");
            tableMapping.ColumnMappings.Add("ordre", "ordre");
            tableMapping.ColumnMappings.Add("Heure_Arrivee", "Heure_Arrivee");
            tableMapping.ColumnMappings.Add("Date_Arrivee", "Date_Arrivee");
            tableMapping.ColumnMappings.Add("Ville_Nom", "Ville_Nom");
            tableMapping.ColumnMappings.Add("Ville_CodePostal", "Ville_CodePostal");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[ETAPE] WHERE (([Trajet_Id] = @Original_Trajet_Id) AND ([Etape_Id] = @Original_Etape_Id) AND ([ordre] = @Original_ordre) AND ((@IsNull_Heure_Arrivee = 1 AND [Heure_Arrivee] IS NULL) OR ([Heure_Arrivee] = @Original_Heure_Arrivee)) AND ((@IsNull_Date_Arrivee = 1 AND [Date_Arrivee] IS NULL) OR ([Date_Arrivee] = @Original_Date_Arrivee)) AND ([Ville_Nom] = @Original_Ville_Nom) AND ([Ville_CodePostal] = @Original_Ville_CodePostal))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Trajet_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trajet_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Etape_Id", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Etape_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ordre", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ordre", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Heure_Arrivee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Heure_Arrivee", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Heure_Arrivee", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Heure_Arrivee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Date_Arrivee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date_Arrivee", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Date_Arrivee", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date_Arrivee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ville_Nom", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ville_Nom", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ville_CodePostal", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ville_CodePostal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[ETAPE] ([Trajet_Id], [ordre], [Heure_Arrivee], [Date_Arrivee], [Ville_Nom], [Ville_CodePostal]) VALUES (@Trajet_Id, @ordre, @Heure_Arrivee, @Date_Arrivee, @Ville_Nom, @Ville_CodePostal);
SELECT Trajet_Id, Etape_Id, ordre, Heure_Arrivee, Date_Arrivee, Ville_Nom, Ville_CodePostal FROM ETAPE WHERE (Etape_Id = SCOPE_IDENTITY()) AND (Trajet_Id = @Trajet_Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Trajet_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trajet_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ordre", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ordre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Heure_Arrivee", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Heure_Arrivee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date_Arrivee", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date_Arrivee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ville_Nom", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ville_Nom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ville_CodePostal", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ville_CodePostal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[ETAPE] SET [Trajet_Id] = @Trajet_Id, [ordre] = @ordre, [Heure_Arrivee] = @Heure_Arrivee, [Date_Arrivee] = @Date_Arrivee, [Ville_Nom] = @Ville_Nom, [Ville_CodePostal] = @Ville_CodePostal WHERE (([Trajet_Id] = @Original_Trajet_Id) AND ([Etape_Id] = @Original_Etape_Id) AND ([ordre] = @Original_ordre) AND ((@IsNull_Heure_Arrivee = 1 AND [Heure_Arrivee] IS NULL) OR ([Heure_Arrivee] = @Original_Heure_Arrivee)) AND ((@IsNull_Date_Arrivee = 1 AND [Date_Arrivee] IS NULL) OR ([Date_Arrivee] = @Original_Date_Arrivee)) AND ([Ville_Nom] = @Original_Ville_Nom) AND ([Ville_CodePostal] = @Original_Ville_CodePostal));
SELECT Trajet_Id, Etape_Id, ordre, Heure_Arrivee, Date_Arrivee, Ville_Nom, Ville_CodePostal FROM ETAPE WHERE (Etape_Id = @Etape_Id) AND (Trajet_Id = @Trajet_Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Trajet_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trajet_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ordre", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ordre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Heure_Arrivee", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Heure_Arrivee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Date_Arrivee", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date_Arrivee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ville_Nom", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ville_Nom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ville_CodePostal", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ville_CodePostal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Trajet_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trajet_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Etape_Id", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Etape_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ordre", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ordre", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Heure_Arrivee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Heure_Arrivee", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Heure_Arrivee", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Heure_Arrivee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Date_Arrivee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date_Arrivee", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Date_Arrivee", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Date_Arrivee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ville_Nom", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ville_Nom", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ville_CodePostal", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ville_CodePostal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Etape_Id", global::System.Data.SqlDbType.TinyInt, 1, global::System.Data.ParameterDirection.Input, 0, 0, "Etape_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GSBCarpooling.Properties.Settings.Default.gsbcarpoolingConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Trajet_Id, Etape_Id, ordre, Heure_Arrivee, Date_Arrivee, Ville_Nom, Ville_" +
                "CodePostal FROM dbo.ETAPE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(gsbcarpoolingDataSet.ETAPEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual gsbcarpoolingDataSet.ETAPEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            gsbcarpoolingDataSet.ETAPEDataTable dataTable = new gsbcarpoolingDataSet.ETAPEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gsbcarpoolingDataSet.ETAPEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gsbcarpoolingDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ETAPE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Trajet_Id, byte Original_Etape_Id, int Original_ordre, global::System.Nullable<global::System.TimeSpan> Original_Heure_Arrivee, global::System.Nullable<global::System.DateTime> Original_Date_Arrivee, string Original_Ville_Nom, string Original_Ville_CodePostal) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Trajet_Id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((byte)(Original_Etape_Id));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ordre));
            if ((Original_Heure_Arrivee.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.TimeSpan)(Original_Heure_Arrivee.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_Date_Arrivee.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_Date_Arrivee.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_Ville_Nom == null)) {
                throw new global::System.ArgumentNullException("Original_Ville_Nom");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Ville_Nom));
            }
            if ((Original_Ville_CodePostal == null)) {
                throw new global::System.ArgumentNullException("Original_Ville_CodePostal");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Ville_CodePostal));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Trajet_Id, int ordre, global::System.Nullable<global::System.TimeSpan> Heure_Arrivee, global::System.Nullable<global::System.DateTime> Date_Arrivee, string Ville_Nom, string Ville_CodePostal) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Trajet_Id));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ordre));
            if ((Heure_Arrivee.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.TimeSpan)(Heure_Arrivee.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Date_Arrivee.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(Date_Arrivee.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Ville_Nom == null)) {
                throw new global::System.ArgumentNullException("Ville_Nom");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Ville_Nom));
            }
            if ((Ville_CodePostal == null)) {
                throw new global::System.ArgumentNullException("Ville_CodePostal");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Ville_CodePostal));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Trajet_Id, int ordre, global::System.Nullable<global::System.TimeSpan> Heure_Arrivee, global::System.Nullable<global::System.DateTime> Date_Arrivee, string Ville_Nom, string Ville_CodePostal, int Original_Trajet_Id, byte Original_Etape_Id, int Original_ordre, global::System.Nullable<global::System.TimeSpan> Original_Heure_Arrivee, global::System.Nullable<global::System.DateTime> Original_Date_Arrivee, string Original_Ville_Nom, string Original_Ville_CodePostal, byte Etape_Id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Trajet_Id));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ordre));
            if ((Heure_Arrivee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.TimeSpan)(Heure_Arrivee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Date_Arrivee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(Date_Arrivee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Ville_Nom == null)) {
                throw new global::System.ArgumentNullException("Ville_Nom");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Ville_Nom));
            }
            if ((Ville_CodePostal == null)) {
                throw new global::System.ArgumentNullException("Ville_CodePostal");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Ville_CodePostal));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_Trajet_Id));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((byte)(Original_Etape_Id));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_ordre));
            if ((Original_Heure_Arrivee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.TimeSpan)(Original_Heure_Arrivee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_Date_Arrivee.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_Date_Arrivee.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_Ville_Nom == null)) {
                throw new global::System.ArgumentNullException("Original_Ville_Nom");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_Ville_Nom));
            }
            if ((Original_Ville_CodePostal == null)) {
                throw new global::System.ArgumentNullException("Original_Ville_CodePostal");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Ville_CodePostal));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((byte)(Etape_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ordre, global::System.Nullable<global::System.TimeSpan> Heure_Arrivee, global::System.Nullable<global::System.DateTime> Date_Arrivee, string Ville_Nom, string Ville_CodePostal, int Original_Trajet_Id, byte Original_Etape_Id, int Original_ordre, global::System.Nullable<global::System.TimeSpan> Original_Heure_Arrivee, global::System.Nullable<global::System.DateTime> Original_Date_Arrivee, string Original_Ville_Nom, string Original_Ville_CodePostal) {
            return this.Update(Original_Trajet_Id, ordre, Heure_Arrivee, Date_Arrivee, Ville_Nom, Ville_CodePostal, Original_Trajet_Id, Original_Etape_Id, Original_ordre, Original_Heure_Arrivee, Original_Date_Arrivee, Original_Ville_Nom, Original_Ville_CodePostal, Original_Etape_Id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PAYSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public PAYSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PAYS";
            tableMapping.ColumnMappings.Add("Pays_Id", "Pays_Id");
            tableMapping.ColumnMappings.Add("Pays_Libelle", "Pays_Libelle");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[PAYS] WHERE (([Pays_Id] = @Original_Pays_Id) AND ([Pays_Libell" +
                "e] = @Original_Pays_Libelle))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pays_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pays_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pays_Libelle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pays_Libelle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[PAYS] ([Pays_Id], [Pays_Libelle]) VALUES (@Pays_Id, @Pays_Libe" +
                "lle);\r\nSELECT Pays_Id, Pays_Libelle FROM PAYS WHERE (Pays_Id = @Pays_Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pays_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pays_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pays_Libelle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pays_Libelle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[PAYS] SET [Pays_Id] = @Pays_Id, [Pays_Libelle] = @Pays_Libelle WHER" +
                "E (([Pays_Id] = @Original_Pays_Id) AND ([Pays_Libelle] = @Original_Pays_Libelle)" +
                ");\r\nSELECT Pays_Id, Pays_Libelle FROM PAYS WHERE (Pays_Id = @Pays_Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pays_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pays_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pays_Libelle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pays_Libelle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pays_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pays_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pays_Libelle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pays_Libelle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GSBCarpooling.Properties.Settings.Default.gsbcarpoolingConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Pays_Id, Pays_Libelle FROM dbo.PAYS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(gsbcarpoolingDataSet.PAYSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual gsbcarpoolingDataSet.PAYSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            gsbcarpoolingDataSet.PAYSDataTable dataTable = new gsbcarpoolingDataSet.PAYSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gsbcarpoolingDataSet.PAYSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gsbcarpoolingDataSet dataSet) {
            return this.Adapter.Update(dataSet, "PAYS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_Pays_Id, string Original_Pays_Libelle) {
            if ((Original_Pays_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Pays_Id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_Pays_Id));
            }
            if ((Original_Pays_Libelle == null)) {
                throw new global::System.ArgumentNullException("Original_Pays_Libelle");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Pays_Libelle));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Pays_Id, string Pays_Libelle) {
            if ((Pays_Id == null)) {
                throw new global::System.ArgumentNullException("Pays_Id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Pays_Id));
            }
            if ((Pays_Libelle == null)) {
                throw new global::System.ArgumentNullException("Pays_Libelle");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Pays_Libelle));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Pays_Id, string Pays_Libelle, string Original_Pays_Id, string Original_Pays_Libelle) {
            if ((Pays_Id == null)) {
                throw new global::System.ArgumentNullException("Pays_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Pays_Id));
            }
            if ((Pays_Libelle == null)) {
                throw new global::System.ArgumentNullException("Pays_Libelle");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Pays_Libelle));
            }
            if ((Original_Pays_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Pays_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_Pays_Id));
            }
            if ((Original_Pays_Libelle == null)) {
                throw new global::System.ArgumentNullException("Original_Pays_Libelle");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_Pays_Libelle));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Pays_Libelle, string Original_Pays_Id, string Original_Pays_Libelle) {
            return this.Update(Original_Pays_Id, Pays_Libelle, Original_Pays_Id, Original_Pays_Libelle);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PROPOSERTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public PROPOSERTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PROPOSER";
            tableMapping.ColumnMappings.Add("Vehicule_Id", "Vehicule_Id");
            tableMapping.ColumnMappings.Add("Trajet_Id", "Trajet_Id");
            tableMapping.ColumnMappings.Add("commentaire", "commentaire");
            tableMapping.ColumnMappings.Add("Utilisateur_Id", "Utilisateur_Id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[PROPOSER] WHERE (([Vehicule_Id] = @Original_Vehicule_Id) AND ([Trajet_Id] = @Original_Trajet_Id) AND ((@IsNull_commentaire = 1 AND [commentaire] IS NULL) OR ([commentaire] = @Original_commentaire)) AND ([Utilisateur_Id] = @Original_Utilisateur_Id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vehicule_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Trajet_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trajet_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_commentaire", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "commentaire", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_commentaire", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "commentaire", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Utilisateur_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[PROPOSER] ([Vehicule_Id], [Trajet_Id], [commentaire], [Utilisateur_Id]) VALUES (@Vehicule_Id, @Trajet_Id, @commentaire, @Utilisateur_Id);
SELECT Vehicule_Id, Trajet_Id, commentaire, Utilisateur_Id FROM PROPOSER WHERE (Trajet_Id = @Trajet_Id) AND (Vehicule_Id = @Vehicule_Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vehicule_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Trajet_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trajet_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@commentaire", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "commentaire", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Utilisateur_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[PROPOSER] SET [Vehicule_Id] = @Vehicule_Id, [Trajet_Id] = @Trajet_Id, [commentaire] = @commentaire, [Utilisateur_Id] = @Utilisateur_Id WHERE (([Vehicule_Id] = @Original_Vehicule_Id) AND ([Trajet_Id] = @Original_Trajet_Id) AND ((@IsNull_commentaire = 1 AND [commentaire] IS NULL) OR ([commentaire] = @Original_commentaire)) AND ([Utilisateur_Id] = @Original_Utilisateur_Id));
SELECT Vehicule_Id, Trajet_Id, commentaire, Utilisateur_Id FROM PROPOSER WHERE (Trajet_Id = @Trajet_Id) AND (Vehicule_Id = @Vehicule_Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vehicule_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Trajet_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trajet_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@commentaire", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "commentaire", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Utilisateur_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vehicule_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Trajet_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trajet_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_commentaire", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "commentaire", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_commentaire", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "commentaire", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Utilisateur_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GSBCarpooling.Properties.Settings.Default.gsbcarpoolingConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Vehicule_Id, Trajet_Id, commentaire, Utilisateur_Id FROM dbo.PROPOSER";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(gsbcarpoolingDataSet.PROPOSERDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual gsbcarpoolingDataSet.PROPOSERDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            gsbcarpoolingDataSet.PROPOSERDataTable dataTable = new gsbcarpoolingDataSet.PROPOSERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gsbcarpoolingDataSet.PROPOSERDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gsbcarpoolingDataSet dataSet) {
            return this.Adapter.Update(dataSet, "PROPOSER");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Vehicule_Id, int Original_Trajet_Id, string Original_commentaire, int Original_Utilisateur_Id) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Vehicule_Id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_Trajet_Id));
            if ((Original_commentaire == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_commentaire));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((int)(Original_Utilisateur_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Vehicule_Id, int Trajet_Id, string commentaire, int Utilisateur_Id) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Vehicule_Id));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Trajet_Id));
            if ((commentaire == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(commentaire));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(Utilisateur_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Vehicule_Id, int Trajet_Id, string commentaire, int Utilisateur_Id, int Original_Vehicule_Id, int Original_Trajet_Id, string Original_commentaire, int Original_Utilisateur_Id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Vehicule_Id));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Trajet_Id));
            if ((commentaire == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(commentaire));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Utilisateur_Id));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_Vehicule_Id));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_Trajet_Id));
            if ((Original_commentaire == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_commentaire));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_Utilisateur_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string commentaire, int Utilisateur_Id, int Original_Vehicule_Id, int Original_Trajet_Id, string Original_commentaire, int Original_Utilisateur_Id) {
            return this.Update(Original_Vehicule_Id, Original_Trajet_Id, commentaire, Utilisateur_Id, Original_Vehicule_Id, Original_Trajet_Id, Original_commentaire, Original_Utilisateur_Id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RESERVERTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public RESERVERTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RESERVER";
            tableMapping.ColumnMappings.Add("Utilisateur_Id", "Utilisateur_Id");
            tableMapping.ColumnMappings.Add("Trajet_Id", "Trajet_Id");
            tableMapping.ColumnMappings.Add("note", "note");
            tableMapping.ColumnMappings.Add("commentaire", "commentaire");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[RESERVER] WHERE (([Utilisateur_Id] = @Original_Utilisateur_Id) AND ([Trajet_Id] = @Original_Trajet_Id) AND ((@IsNull_note = 1 AND [note] IS NULL) OR ([note] = @Original_note)) AND ((@IsNull_commentaire = 1 AND [commentaire] IS NULL) OR ([commentaire] = @Original_commentaire)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Utilisateur_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Trajet_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trajet_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_note", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "note", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_note", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "note", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_commentaire", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "commentaire", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_commentaire", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "commentaire", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[RESERVER] ([Utilisateur_Id], [Trajet_Id], [note], [commentaire]) VALUES (@Utilisateur_Id, @Trajet_Id, @note, @commentaire);
SELECT Utilisateur_Id, Trajet_Id, note, commentaire FROM RESERVER WHERE (Trajet_Id = @Trajet_Id) AND (Utilisateur_Id = @Utilisateur_Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Utilisateur_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Trajet_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trajet_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@note", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "note", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@commentaire", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "commentaire", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[RESERVER] SET [Utilisateur_Id] = @Utilisateur_Id, [Trajet_Id] = @Trajet_Id, [note] = @note, [commentaire] = @commentaire WHERE (([Utilisateur_Id] = @Original_Utilisateur_Id) AND ([Trajet_Id] = @Original_Trajet_Id) AND ((@IsNull_note = 1 AND [note] IS NULL) OR ([note] = @Original_note)) AND ((@IsNull_commentaire = 1 AND [commentaire] IS NULL) OR ([commentaire] = @Original_commentaire)));
SELECT Utilisateur_Id, Trajet_Id, note, commentaire FROM RESERVER WHERE (Trajet_Id = @Trajet_Id) AND (Utilisateur_Id = @Utilisateur_Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Utilisateur_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Trajet_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trajet_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@note", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "note", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@commentaire", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "commentaire", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Utilisateur_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Trajet_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trajet_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_note", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "note", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_note", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "note", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_commentaire", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "commentaire", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_commentaire", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "commentaire", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GSBCarpooling.Properties.Settings.Default.gsbcarpoolingConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Utilisateur_Id, Trajet_Id, note, commentaire FROM dbo.RESERVER";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(gsbcarpoolingDataSet.RESERVERDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual gsbcarpoolingDataSet.RESERVERDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            gsbcarpoolingDataSet.RESERVERDataTable dataTable = new gsbcarpoolingDataSet.RESERVERDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gsbcarpoolingDataSet.RESERVERDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gsbcarpoolingDataSet dataSet) {
            return this.Adapter.Update(dataSet, "RESERVER");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Utilisateur_Id, int Original_Trajet_Id, global::System.Nullable<byte> Original_note, string Original_commentaire) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Utilisateur_Id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_Trajet_Id));
            if ((Original_note.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((byte)(Original_note.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_commentaire == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_commentaire));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Utilisateur_Id, int Trajet_Id, global::System.Nullable<byte> note, string commentaire) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Utilisateur_Id));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Trajet_Id));
            if ((note.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((byte)(note.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((commentaire == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(commentaire));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Utilisateur_Id, int Trajet_Id, global::System.Nullable<byte> note, string commentaire, int Original_Utilisateur_Id, int Original_Trajet_Id, global::System.Nullable<byte> Original_note, string Original_commentaire) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Utilisateur_Id));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Trajet_Id));
            if ((note.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((byte)(note.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((commentaire == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(commentaire));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_Utilisateur_Id));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_Trajet_Id));
            if ((Original_note.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((byte)(Original_note.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_commentaire == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_commentaire));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<byte> note, string commentaire, int Original_Utilisateur_Id, int Original_Trajet_Id, global::System.Nullable<byte> Original_note, string Original_commentaire) {
            return this.Update(Original_Utilisateur_Id, Original_Trajet_Id, note, commentaire, Original_Utilisateur_Id, Original_Trajet_Id, Original_note, Original_commentaire);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TRAJETTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public TRAJETTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TRAJET";
            tableMapping.ColumnMappings.Add("Trajet_Id", "Trajet_Id");
            tableMapping.ColumnMappings.Add("Trajet_Date", "Trajet_Date");
            tableMapping.ColumnMappings.Add("Trajet_HeureDepart", "Trajet_HeureDepart");
            tableMapping.ColumnMappings.Add("Trajet_Commentaire", "Trajet_Commentaire");
            tableMapping.ColumnMappings.Add("Trajet_NbPassagers", "Trajet_NbPassagers");
            tableMapping.ColumnMappings.Add("Vehicule_Id", "Vehicule_Id");
            tableMapping.ColumnMappings.Add("Utilisateur_Id", "Utilisateur_Id");
            tableMapping.ColumnMappings.Add("Ville_Depart", "Ville_Depart");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TRAJET] WHERE (([Trajet_Id] = @Original_Trajet_Id) AND ([Trajet_Date] = @Original_Trajet_Date) AND ([Trajet_HeureDepart] = @Original_Trajet_HeureDepart) AND ((@IsNull_Trajet_Commentaire = 1 AND [Trajet_Commentaire] IS NULL) OR ([Trajet_Commentaire] = @Original_Trajet_Commentaire)) AND ([Trajet_NbPassagers] = @Original_Trajet_NbPassagers) AND ([Vehicule_Id] = @Original_Vehicule_Id) AND ([Utilisateur_Id] = @Original_Utilisateur_Id) AND ([Ville_Depart] = @Original_Ville_Depart))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Trajet_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trajet_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Trajet_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trajet_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Trajet_HeureDepart", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trajet_HeureDepart", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Trajet_Commentaire", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trajet_Commentaire", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Trajet_Commentaire", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trajet_Commentaire", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Trajet_NbPassagers", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trajet_NbPassagers", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vehicule_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Utilisateur_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ville_Depart", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ville_Depart", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TRAJET] ([Trajet_Date], [Trajet_HeureDepart], [Trajet_Commentaire], [Trajet_NbPassagers], [Vehicule_Id], [Utilisateur_Id], [Ville_Depart]) VALUES (@Trajet_Date, @Trajet_HeureDepart, @Trajet_Commentaire, @Trajet_NbPassagers, @Vehicule_Id, @Utilisateur_Id, @Ville_Depart);
SELECT Trajet_Id, Trajet_Date, Trajet_HeureDepart, Trajet_Commentaire, Trajet_NbPassagers, Vehicule_Id, Utilisateur_Id, Ville_Depart FROM TRAJET WHERE (Trajet_Id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Trajet_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trajet_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Trajet_HeureDepart", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trajet_HeureDepart", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Trajet_Commentaire", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trajet_Commentaire", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Trajet_NbPassagers", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trajet_NbPassagers", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vehicule_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Utilisateur_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ville_Depart", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ville_Depart", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TRAJET] SET [Trajet_Date] = @Trajet_Date, [Trajet_HeureDepart] = @Trajet_HeureDepart, [Trajet_Commentaire] = @Trajet_Commentaire, [Trajet_NbPassagers] = @Trajet_NbPassagers, [Vehicule_Id] = @Vehicule_Id, [Utilisateur_Id] = @Utilisateur_Id, [Ville_Depart] = @Ville_Depart WHERE (([Trajet_Id] = @Original_Trajet_Id) AND ([Trajet_Date] = @Original_Trajet_Date) AND ([Trajet_HeureDepart] = @Original_Trajet_HeureDepart) AND ((@IsNull_Trajet_Commentaire = 1 AND [Trajet_Commentaire] IS NULL) OR ([Trajet_Commentaire] = @Original_Trajet_Commentaire)) AND ([Trajet_NbPassagers] = @Original_Trajet_NbPassagers) AND ([Vehicule_Id] = @Original_Vehicule_Id) AND ([Utilisateur_Id] = @Original_Utilisateur_Id) AND ([Ville_Depart] = @Original_Ville_Depart));
SELECT Trajet_Id, Trajet_Date, Trajet_HeureDepart, Trajet_Commentaire, Trajet_NbPassagers, Vehicule_Id, Utilisateur_Id, Ville_Depart FROM TRAJET WHERE (Trajet_Id = @Trajet_Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Trajet_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trajet_Date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Trajet_HeureDepart", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trajet_HeureDepart", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Trajet_Commentaire", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trajet_Commentaire", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Trajet_NbPassagers", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trajet_NbPassagers", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vehicule_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Utilisateur_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ville_Depart", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ville_Depart", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Trajet_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trajet_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Trajet_Date", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trajet_Date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Trajet_HeureDepart", global::System.Data.SqlDbType.Time, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trajet_HeureDepart", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Trajet_Commentaire", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trajet_Commentaire", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Trajet_Commentaire", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trajet_Commentaire", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Trajet_NbPassagers", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Trajet_NbPassagers", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vehicule_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Utilisateur_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ville_Depart", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ville_Depart", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Trajet_Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Trajet_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GSBCarpooling.Properties.Settings.Default.gsbcarpoolingConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Trajet_Id, Trajet_Date, Trajet_HeureDepart, Trajet_Commentaire, Trajet_NbP" +
                "assagers, Vehicule_Id, Utilisateur_Id, Ville_Depart FROM dbo.TRAJET";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(gsbcarpoolingDataSet.TRAJETDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual gsbcarpoolingDataSet.TRAJETDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            gsbcarpoolingDataSet.TRAJETDataTable dataTable = new gsbcarpoolingDataSet.TRAJETDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gsbcarpoolingDataSet.TRAJETDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gsbcarpoolingDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TRAJET");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Trajet_Id, System.DateTime Original_Trajet_Date, System.TimeSpan Original_Trajet_HeureDepart, string Original_Trajet_Commentaire, byte Original_Trajet_NbPassagers, int Original_Vehicule_Id, int Original_Utilisateur_Id, string Original_Ville_Depart) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Trajet_Id));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_Trajet_Date));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.TimeSpan)(Original_Trajet_HeureDepart));
            if ((Original_Trajet_Commentaire == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Trajet_Commentaire));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((byte)(Original_Trajet_NbPassagers));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_Vehicule_Id));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_Utilisateur_Id));
            if ((Original_Ville_Depart == null)) {
                throw new global::System.ArgumentNullException("Original_Ville_Depart");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Ville_Depart));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.DateTime Trajet_Date, System.TimeSpan Trajet_HeureDepart, string Trajet_Commentaire, byte Trajet_NbPassagers, int Vehicule_Id, int Utilisateur_Id, string Ville_Depart) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(Trajet_Date));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.TimeSpan)(Trajet_HeureDepart));
            if ((Trajet_Commentaire == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Trajet_Commentaire));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((byte)(Trajet_NbPassagers));
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(Vehicule_Id));
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(Utilisateur_Id));
            if ((Ville_Depart == null)) {
                throw new global::System.ArgumentNullException("Ville_Depart");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Ville_Depart));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime Trajet_Date, 
                    System.TimeSpan Trajet_HeureDepart, 
                    string Trajet_Commentaire, 
                    byte Trajet_NbPassagers, 
                    int Vehicule_Id, 
                    int Utilisateur_Id, 
                    string Ville_Depart, 
                    int Original_Trajet_Id, 
                    System.DateTime Original_Trajet_Date, 
                    System.TimeSpan Original_Trajet_HeureDepart, 
                    string Original_Trajet_Commentaire, 
                    byte Original_Trajet_NbPassagers, 
                    int Original_Vehicule_Id, 
                    int Original_Utilisateur_Id, 
                    string Original_Ville_Depart, 
                    int Trajet_Id) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(Trajet_Date));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.TimeSpan)(Trajet_HeureDepart));
            if ((Trajet_Commentaire == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Trajet_Commentaire));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((byte)(Trajet_NbPassagers));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Vehicule_Id));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Utilisateur_Id));
            if ((Ville_Depart == null)) {
                throw new global::System.ArgumentNullException("Ville_Depart");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Ville_Depart));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_Trajet_Id));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(Original_Trajet_Date));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.TimeSpan)(Original_Trajet_HeureDepart));
            if ((Original_Trajet_Commentaire == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Trajet_Commentaire));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((byte)(Original_Trajet_NbPassagers));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(Original_Vehicule_Id));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_Utilisateur_Id));
            if ((Original_Ville_Depart == null)) {
                throw new global::System.ArgumentNullException("Original_Ville_Depart");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_Ville_Depart));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Trajet_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.DateTime Trajet_Date, System.TimeSpan Trajet_HeureDepart, string Trajet_Commentaire, byte Trajet_NbPassagers, int Vehicule_Id, int Utilisateur_Id, string Ville_Depart, int Original_Trajet_Id, System.DateTime Original_Trajet_Date, System.TimeSpan Original_Trajet_HeureDepart, string Original_Trajet_Commentaire, byte Original_Trajet_NbPassagers, int Original_Vehicule_Id, int Original_Utilisateur_Id, string Original_Ville_Depart) {
            return this.Update(Trajet_Date, Trajet_HeureDepart, Trajet_Commentaire, Trajet_NbPassagers, Vehicule_Id, Utilisateur_Id, Ville_Depart, Original_Trajet_Id, Original_Trajet_Date, Original_Trajet_HeureDepart, Original_Trajet_Commentaire, Original_Trajet_NbPassagers, Original_Vehicule_Id, Original_Utilisateur_Id, Original_Ville_Depart, Original_Trajet_Id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TYPE_UTILISATEURTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public TYPE_UTILISATEURTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TYPE_UTILISATEUR";
            tableMapping.ColumnMappings.Add("TypeUtilisateur_Id", "TypeUtilisateur_Id");
            tableMapping.ColumnMappings.Add("TypeUtilisateur_Libelle", "TypeUtilisateur_Libelle");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[TYPE_UTILISATEUR] WHERE (([TypeUtilisateur_Id] = @Original_Typ" +
                "eUtilisateur_Id) AND ([TypeUtilisateur_Libelle] = @Original_TypeUtilisateur_Libe" +
                "lle))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TypeUtilisateur_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeUtilisateur_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TypeUtilisateur_Libelle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeUtilisateur_Libelle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TYPE_UTILISATEUR] ([TypeUtilisateur_Id], [TypeUtilisateur_Libelle]) VALUES (@TypeUtilisateur_Id, @TypeUtilisateur_Libelle);
SELECT TypeUtilisateur_Id, TypeUtilisateur_Libelle FROM TYPE_UTILISATEUR WHERE (TypeUtilisateur_Id = @TypeUtilisateur_Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TypeUtilisateur_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeUtilisateur_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TypeUtilisateur_Libelle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeUtilisateur_Libelle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TYPE_UTILISATEUR] SET [TypeUtilisateur_Id] = @TypeUtilisateur_Id, [TypeUtilisateur_Libelle] = @TypeUtilisateur_Libelle WHERE (([TypeUtilisateur_Id] = @Original_TypeUtilisateur_Id) AND ([TypeUtilisateur_Libelle] = @Original_TypeUtilisateur_Libelle));
SELECT TypeUtilisateur_Id, TypeUtilisateur_Libelle FROM TYPE_UTILISATEUR WHERE (TypeUtilisateur_Id = @TypeUtilisateur_Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TypeUtilisateur_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeUtilisateur_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TypeUtilisateur_Libelle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeUtilisateur_Libelle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TypeUtilisateur_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeUtilisateur_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TypeUtilisateur_Libelle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeUtilisateur_Libelle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GSBCarpooling.Properties.Settings.Default.gsbcarpoolingConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT TypeUtilisateur_Id, TypeUtilisateur_Libelle FROM dbo.TYPE_UTILISATEUR";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(gsbcarpoolingDataSet.TYPE_UTILISATEURDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual gsbcarpoolingDataSet.TYPE_UTILISATEURDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            gsbcarpoolingDataSet.TYPE_UTILISATEURDataTable dataTable = new gsbcarpoolingDataSet.TYPE_UTILISATEURDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gsbcarpoolingDataSet.TYPE_UTILISATEURDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gsbcarpoolingDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TYPE_UTILISATEUR");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_TypeUtilisateur_Id, string Original_TypeUtilisateur_Libelle) {
            if ((Original_TypeUtilisateur_Id == null)) {
                throw new global::System.ArgumentNullException("Original_TypeUtilisateur_Id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_TypeUtilisateur_Id));
            }
            if ((Original_TypeUtilisateur_Libelle == null)) {
                throw new global::System.ArgumentNullException("Original_TypeUtilisateur_Libelle");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_TypeUtilisateur_Libelle));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string TypeUtilisateur_Id, string TypeUtilisateur_Libelle) {
            if ((TypeUtilisateur_Id == null)) {
                throw new global::System.ArgumentNullException("TypeUtilisateur_Id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TypeUtilisateur_Id));
            }
            if ((TypeUtilisateur_Libelle == null)) {
                throw new global::System.ArgumentNullException("TypeUtilisateur_Libelle");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(TypeUtilisateur_Libelle));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TypeUtilisateur_Id, string TypeUtilisateur_Libelle, string Original_TypeUtilisateur_Id, string Original_TypeUtilisateur_Libelle) {
            if ((TypeUtilisateur_Id == null)) {
                throw new global::System.ArgumentNullException("TypeUtilisateur_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TypeUtilisateur_Id));
            }
            if ((TypeUtilisateur_Libelle == null)) {
                throw new global::System.ArgumentNullException("TypeUtilisateur_Libelle");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(TypeUtilisateur_Libelle));
            }
            if ((Original_TypeUtilisateur_Id == null)) {
                throw new global::System.ArgumentNullException("Original_TypeUtilisateur_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_TypeUtilisateur_Id));
            }
            if ((Original_TypeUtilisateur_Libelle == null)) {
                throw new global::System.ArgumentNullException("Original_TypeUtilisateur_Libelle");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_TypeUtilisateur_Libelle));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TypeUtilisateur_Libelle, string Original_TypeUtilisateur_Id, string Original_TypeUtilisateur_Libelle) {
            return this.Update(Original_TypeUtilisateur_Id, TypeUtilisateur_Libelle, Original_TypeUtilisateur_Id, Original_TypeUtilisateur_Libelle);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TYPE_VEHICULETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public TYPE_VEHICULETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TYPE_VEHICULE";
            tableMapping.ColumnMappings.Add("TypeVehicule_Id", "TypeVehicule_Id");
            tableMapping.ColumnMappings.Add("TypeVehicule_Libelle", "TypeVehicule_Libelle");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[TYPE_VEHICULE] WHERE (([TypeVehicule_Id] = @Original_TypeVehic" +
                "ule_Id) AND ([TypeVehicule_Libelle] = @Original_TypeVehicule_Libelle))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TypeVehicule_Id", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeVehicule_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TypeVehicule_Libelle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeVehicule_Libelle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TYPE_VEHICULE] ([TypeVehicule_Id], [TypeVehicule_Libelle]) VAL" +
                "UES (@TypeVehicule_Id, @TypeVehicule_Libelle);\r\nSELECT TypeVehicule_Id, TypeVehi" +
                "cule_Libelle FROM TYPE_VEHICULE WHERE (TypeVehicule_Id = @TypeVehicule_Id)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TypeVehicule_Id", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeVehicule_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TypeVehicule_Libelle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeVehicule_Libelle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TYPE_VEHICULE] SET [TypeVehicule_Id] = @TypeVehicule_Id, [TypeVehicule_Libelle] = @TypeVehicule_Libelle WHERE (([TypeVehicule_Id] = @Original_TypeVehicule_Id) AND ([TypeVehicule_Libelle] = @Original_TypeVehicule_Libelle));
SELECT TypeVehicule_Id, TypeVehicule_Libelle FROM TYPE_VEHICULE WHERE (TypeVehicule_Id = @TypeVehicule_Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TypeVehicule_Id", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeVehicule_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TypeVehicule_Libelle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeVehicule_Libelle", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TypeVehicule_Id", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeVehicule_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TypeVehicule_Libelle", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeVehicule_Libelle", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GSBCarpooling.Properties.Settings.Default.gsbcarpoolingConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT TypeVehicule_Id, TypeVehicule_Libelle FROM dbo.TYPE_VEHICULE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(gsbcarpoolingDataSet.TYPE_VEHICULEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual gsbcarpoolingDataSet.TYPE_VEHICULEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            gsbcarpoolingDataSet.TYPE_VEHICULEDataTable dataTable = new gsbcarpoolingDataSet.TYPE_VEHICULEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gsbcarpoolingDataSet.TYPE_VEHICULEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gsbcarpoolingDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TYPE_VEHICULE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(byte Original_TypeVehicule_Id, string Original_TypeVehicule_Libelle) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((byte)(Original_TypeVehicule_Id));
            if ((Original_TypeVehicule_Libelle == null)) {
                throw new global::System.ArgumentNullException("Original_TypeVehicule_Libelle");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_TypeVehicule_Libelle));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(byte TypeVehicule_Id, string TypeVehicule_Libelle) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((byte)(TypeVehicule_Id));
            if ((TypeVehicule_Libelle == null)) {
                throw new global::System.ArgumentNullException("TypeVehicule_Libelle");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(TypeVehicule_Libelle));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(byte TypeVehicule_Id, string TypeVehicule_Libelle, byte Original_TypeVehicule_Id, string Original_TypeVehicule_Libelle) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((byte)(TypeVehicule_Id));
            if ((TypeVehicule_Libelle == null)) {
                throw new global::System.ArgumentNullException("TypeVehicule_Libelle");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(TypeVehicule_Libelle));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((byte)(Original_TypeVehicule_Id));
            if ((Original_TypeVehicule_Libelle == null)) {
                throw new global::System.ArgumentNullException("Original_TypeVehicule_Libelle");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_TypeVehicule_Libelle));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TypeVehicule_Libelle, byte Original_TypeVehicule_Id, string Original_TypeVehicule_Libelle) {
            return this.Update(Original_TypeVehicule_Id, TypeVehicule_Libelle, Original_TypeVehicule_Id, Original_TypeVehicule_Libelle);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class UTILISATEURTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UTILISATEURTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "UTILISATEUR";
            tableMapping.ColumnMappings.Add("Utilisateur_Id", "Utilisateur_Id");
            tableMapping.ColumnMappings.Add("Utilisateur_Nom", "Utilisateur_Nom");
            tableMapping.ColumnMappings.Add("Utilisateur_Prenom", "Utilisateur_Prenom");
            tableMapping.ColumnMappings.Add("Utilisateur_Photo", "Utilisateur_Photo");
            tableMapping.ColumnMappings.Add("Utilisateur_Pseudonyme", "Utilisateur_Pseudonyme");
            tableMapping.ColumnMappings.Add("Utilisateur_HashPassword", "Utilisateur_HashPassword");
            tableMapping.ColumnMappings.Add("Utilisateur_DateNaissance", "Utilisateur_DateNaissance");
            tableMapping.ColumnMappings.Add("Utilisateur_Rue", "Utilisateur_Rue");
            tableMapping.ColumnMappings.Add("Utilisateur_Email", "Utilisateur_Email");
            tableMapping.ColumnMappings.Add("Utilisateur_TelMobile", "Utilisateur_TelMobile");
            tableMapping.ColumnMappings.Add("Utilisateur_Sexe", "Utilisateur_Sexe");
            tableMapping.ColumnMappings.Add("Utilisateur_DateInscription", "Utilisateur_DateInscription");
            tableMapping.ColumnMappings.Add("Utilisateur_PremiereConnexion", "Utilisateur_PremiereConnexion");
            tableMapping.ColumnMappings.Add("Ville_Nom", "Ville_Nom");
            tableMapping.ColumnMappings.Add("Ville_CodePostal", "Ville_CodePostal");
            tableMapping.ColumnMappings.Add("TypeUtilisateur_Id", "TypeUtilisateur_Id");
            tableMapping.ColumnMappings.Add("Utilisateur_Actif", "Utilisateur_Actif");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[UTILISATEUR] WHERE (([Utilisateur_Id] = @Original_Utilisateur_Id) AND ([Utilisateur_Nom] = @Original_Utilisateur_Nom) AND ([Utilisateur_Prenom] = @Original_Utilisateur_Prenom) AND ((@IsNull_Utilisateur_Photo = 1 AND [Utilisateur_Photo] IS NULL) OR ([Utilisateur_Photo] = @Original_Utilisateur_Photo)) AND ([Utilisateur_Pseudonyme] = @Original_Utilisateur_Pseudonyme) AND ([Utilisateur_HashPassword] = @Original_Utilisateur_HashPassword) AND ([Utilisateur_DateNaissance] = @Original_Utilisateur_DateNaissance) AND ([Utilisateur_Rue] = @Original_Utilisateur_Rue) AND ([Utilisateur_Email] = @Original_Utilisateur_Email) AND ([Utilisateur_TelMobile] = @Original_Utilisateur_TelMobile) AND ([Utilisateur_Sexe] = @Original_Utilisateur_Sexe) AND ([Utilisateur_DateInscription] = @Original_Utilisateur_DateInscription) AND ([Utilisateur_PremiereConnexion] = @Original_Utilisateur_PremiereConnexion) AND ([Ville_Nom] = @Original_Ville_Nom) AND ([Ville_CodePostal] = @Original_Ville_CodePostal) AND ([TypeUtilisateur_Id] = @Original_TypeUtilisateur_Id) AND ([Utilisateur_Actif] = @Original_Utilisateur_Actif))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Utilisateur_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Utilisateur_Nom", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Nom", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Utilisateur_Prenom", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Prenom", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Utilisateur_Photo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Photo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Utilisateur_Photo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Photo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Utilisateur_Pseudonyme", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Pseudonyme", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Utilisateur_HashPassword", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_HashPassword", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Utilisateur_DateNaissance", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_DateNaissance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Utilisateur_Rue", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Rue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Utilisateur_Email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Utilisateur_TelMobile", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_TelMobile", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Utilisateur_Sexe", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Sexe", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Utilisateur_DateInscription", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_DateInscription", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Utilisateur_PremiereConnexion", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_PremiereConnexion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ville_Nom", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ville_Nom", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ville_CodePostal", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ville_CodePostal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TypeUtilisateur_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeUtilisateur_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Utilisateur_Actif", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Actif", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[UTILISATEUR] ([Utilisateur_Nom], [Utilisateur_Prenom], [Utilisateur_Photo], [Utilisateur_Pseudonyme], [Utilisateur_HashPassword], [Utilisateur_DateNaissance], [Utilisateur_Rue], [Utilisateur_Email], [Utilisateur_TelMobile], [Utilisateur_Sexe], [Utilisateur_DateInscription], [Utilisateur_PremiereConnexion], [Ville_Nom], [Ville_CodePostal], [TypeUtilisateur_Id], [Utilisateur_Actif]) VALUES (@Utilisateur_Nom, @Utilisateur_Prenom, @Utilisateur_Photo, @Utilisateur_Pseudonyme, @Utilisateur_HashPassword, @Utilisateur_DateNaissance, @Utilisateur_Rue, @Utilisateur_Email, @Utilisateur_TelMobile, @Utilisateur_Sexe, @Utilisateur_DateInscription, @Utilisateur_PremiereConnexion, @Ville_Nom, @Ville_CodePostal, @TypeUtilisateur_Id, @Utilisateur_Actif);
SELECT Utilisateur_Id, Utilisateur_Nom, Utilisateur_Prenom, Utilisateur_Photo, Utilisateur_Pseudonyme, Utilisateur_HashPassword, Utilisateur_DateNaissance, Utilisateur_Rue, Utilisateur_Email, Utilisateur_TelMobile, Utilisateur_Sexe, Utilisateur_DateInscription, Utilisateur_PremiereConnexion, Ville_Nom, Ville_CodePostal, TypeUtilisateur_Id, Utilisateur_Actif FROM UTILISATEUR WHERE (Utilisateur_Id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Utilisateur_Nom", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Nom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Utilisateur_Prenom", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Prenom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Utilisateur_Photo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Photo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Utilisateur_Pseudonyme", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Pseudonyme", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Utilisateur_HashPassword", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_HashPassword", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Utilisateur_DateNaissance", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_DateNaissance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Utilisateur_Rue", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Rue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Utilisateur_Email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Utilisateur_TelMobile", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_TelMobile", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Utilisateur_Sexe", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Sexe", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Utilisateur_DateInscription", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_DateInscription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Utilisateur_PremiereConnexion", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_PremiereConnexion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ville_Nom", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ville_Nom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ville_CodePostal", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ville_CodePostal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TypeUtilisateur_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeUtilisateur_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Utilisateur_Actif", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Actif", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[UTILISATEUR] SET [Utilisateur_Nom] = @Utilisateur_Nom, [Utilisateur" +
                "_Prenom] = @Utilisateur_Prenom, [Utilisateur_Photo] = @Utilisateur_Photo, [Utili" +
                "sateur_Pseudonyme] = @Utilisateur_Pseudonyme, [Utilisateur_HashPassword] = @Util" +
                "isateur_HashPassword, [Utilisateur_DateNaissance] = @Utilisateur_DateNaissance, " +
                "[Utilisateur_Rue] = @Utilisateur_Rue, [Utilisateur_Email] = @Utilisateur_Email, " +
                "[Utilisateur_TelMobile] = @Utilisateur_TelMobile, [Utilisateur_Sexe] = @Utilisat" +
                "eur_Sexe, [Utilisateur_DateInscription] = @Utilisateur_DateInscription, [Utilisa" +
                "teur_PremiereConnexion] = @Utilisateur_PremiereConnexion, [Ville_Nom] = @Ville_N" +
                "om, [Ville_CodePostal] = @Ville_CodePostal, [TypeUtilisateur_Id] = @TypeUtilisat" +
                "eur_Id, [Utilisateur_Actif] = @Utilisateur_Actif WHERE (([Utilisateur_Id] = @Ori" +
                "ginal_Utilisateur_Id) AND ([Utilisateur_Nom] = @Original_Utilisateur_Nom) AND ([" +
                "Utilisateur_Prenom] = @Original_Utilisateur_Prenom) AND ((@IsNull_Utilisateur_Ph" +
                "oto = 1 AND [Utilisateur_Photo] IS NULL) OR ([Utilisateur_Photo] = @Original_Uti" +
                "lisateur_Photo)) AND ([Utilisateur_Pseudonyme] = @Original_Utilisateur_Pseudonym" +
                "e) AND ([Utilisateur_HashPassword] = @Original_Utilisateur_HashPassword) AND ([U" +
                "tilisateur_DateNaissance] = @Original_Utilisateur_DateNaissance) AND ([Utilisate" +
                "ur_Rue] = @Original_Utilisateur_Rue) AND ([Utilisateur_Email] = @Original_Utilis" +
                "ateur_Email) AND ([Utilisateur_TelMobile] = @Original_Utilisateur_TelMobile) AND" +
                " ([Utilisateur_Sexe] = @Original_Utilisateur_Sexe) AND ([Utilisateur_DateInscrip" +
                "tion] = @Original_Utilisateur_DateInscription) AND ([Utilisateur_PremiereConnexi" +
                "on] = @Original_Utilisateur_PremiereConnexion) AND ([Ville_Nom] = @Original_Vill" +
                "e_Nom) AND ([Ville_CodePostal] = @Original_Ville_CodePostal) AND ([TypeUtilisate" +
                "ur_Id] = @Original_TypeUtilisateur_Id) AND ([Utilisateur_Actif] = @Original_Util" +
                "isateur_Actif));\r\nSELECT Utilisateur_Id, Utilisateur_Nom, Utilisateur_Prenom, Ut" +
                "ilisateur_Photo, Utilisateur_Pseudonyme, Utilisateur_HashPassword, Utilisateur_D" +
                "ateNaissance, Utilisateur_Rue, Utilisateur_Email, Utilisateur_TelMobile, Utilisa" +
                "teur_Sexe, Utilisateur_DateInscription, Utilisateur_PremiereConnexion, Ville_Nom" +
                ", Ville_CodePostal, TypeUtilisateur_Id, Utilisateur_Actif FROM UTILISATEUR WHERE" +
                " (Utilisateur_Id = @Utilisateur_Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Utilisateur_Nom", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Nom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Utilisateur_Prenom", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Prenom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Utilisateur_Photo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Photo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Utilisateur_Pseudonyme", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Pseudonyme", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Utilisateur_HashPassword", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_HashPassword", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Utilisateur_DateNaissance", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_DateNaissance", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Utilisateur_Rue", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Rue", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Utilisateur_Email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Email", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Utilisateur_TelMobile", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_TelMobile", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Utilisateur_Sexe", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Sexe", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Utilisateur_DateInscription", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_DateInscription", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Utilisateur_PremiereConnexion", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_PremiereConnexion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ville_Nom", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ville_Nom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ville_CodePostal", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ville_CodePostal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TypeUtilisateur_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeUtilisateur_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Utilisateur_Actif", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Actif", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Utilisateur_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Utilisateur_Nom", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Nom", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Utilisateur_Prenom", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Prenom", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Utilisateur_Photo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Photo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Utilisateur_Photo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Photo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Utilisateur_Pseudonyme", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Pseudonyme", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Utilisateur_HashPassword", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_HashPassword", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Utilisateur_DateNaissance", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_DateNaissance", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Utilisateur_Rue", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Rue", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Utilisateur_Email", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Email", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Utilisateur_TelMobile", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_TelMobile", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Utilisateur_Sexe", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Sexe", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Utilisateur_DateInscription", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_DateInscription", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Utilisateur_PremiereConnexion", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_PremiereConnexion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ville_Nom", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ville_Nom", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ville_CodePostal", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ville_CodePostal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TypeUtilisateur_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeUtilisateur_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Utilisateur_Actif", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Actif", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Utilisateur_Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GSBCarpooling.Properties.Settings.Default.gsbcarpoolingConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Utilisateur_Id, Utilisateur_Nom, Utilisateur_Prenom, Utilisateur_Photo, Utilisateur_Pseudonyme, Utilisateur_HashPassword, Utilisateur_DateNaissance, Utilisateur_Rue, Utilisateur_Email, Utilisateur_TelMobile, Utilisateur_Sexe, Utilisateur_DateInscription, Utilisateur_PremiereConnexion, Ville_Nom, Ville_CodePostal, TypeUtilisateur_Id, Utilisateur_Actif FROM dbo.UTILISATEUR";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(gsbcarpoolingDataSet.UTILISATEURDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual gsbcarpoolingDataSet.UTILISATEURDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            gsbcarpoolingDataSet.UTILISATEURDataTable dataTable = new gsbcarpoolingDataSet.UTILISATEURDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gsbcarpoolingDataSet.UTILISATEURDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gsbcarpoolingDataSet dataSet) {
            return this.Adapter.Update(dataSet, "UTILISATEUR");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_Utilisateur_Id, 
                    string Original_Utilisateur_Nom, 
                    string Original_Utilisateur_Prenom, 
                    string Original_Utilisateur_Photo, 
                    string Original_Utilisateur_Pseudonyme, 
                    string Original_Utilisateur_HashPassword, 
                    System.DateTime Original_Utilisateur_DateNaissance, 
                    string Original_Utilisateur_Rue, 
                    string Original_Utilisateur_Email, 
                    string Original_Utilisateur_TelMobile, 
                    string Original_Utilisateur_Sexe, 
                    System.DateTime Original_Utilisateur_DateInscription, 
                    bool Original_Utilisateur_PremiereConnexion, 
                    string Original_Ville_Nom, 
                    string Original_Ville_CodePostal, 
                    string Original_TypeUtilisateur_Id, 
                    bool Original_Utilisateur_Actif) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Utilisateur_Id));
            if ((Original_Utilisateur_Nom == null)) {
                throw new global::System.ArgumentNullException("Original_Utilisateur_Nom");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Utilisateur_Nom));
            }
            if ((Original_Utilisateur_Prenom == null)) {
                throw new global::System.ArgumentNullException("Original_Utilisateur_Prenom");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Utilisateur_Prenom));
            }
            if ((Original_Utilisateur_Photo == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Utilisateur_Photo));
            }
            if ((Original_Utilisateur_Pseudonyme == null)) {
                throw new global::System.ArgumentNullException("Original_Utilisateur_Pseudonyme");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Utilisateur_Pseudonyme));
            }
            if ((Original_Utilisateur_HashPassword == null)) {
                throw new global::System.ArgumentNullException("Original_Utilisateur_HashPassword");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Utilisateur_HashPassword));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_Utilisateur_DateNaissance));
            if ((Original_Utilisateur_Rue == null)) {
                throw new global::System.ArgumentNullException("Original_Utilisateur_Rue");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Utilisateur_Rue));
            }
            if ((Original_Utilisateur_Email == null)) {
                throw new global::System.ArgumentNullException("Original_Utilisateur_Email");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_Utilisateur_Email));
            }
            if ((Original_Utilisateur_TelMobile == null)) {
                throw new global::System.ArgumentNullException("Original_Utilisateur_TelMobile");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Utilisateur_TelMobile));
            }
            if ((Original_Utilisateur_Sexe == null)) {
                throw new global::System.ArgumentNullException("Original_Utilisateur_Sexe");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_Utilisateur_Sexe));
            }
            this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_Utilisateur_DateInscription));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((bool)(Original_Utilisateur_PremiereConnexion));
            if ((Original_Ville_Nom == null)) {
                throw new global::System.ArgumentNullException("Original_Ville_Nom");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_Ville_Nom));
            }
            if ((Original_Ville_CodePostal == null)) {
                throw new global::System.ArgumentNullException("Original_Ville_CodePostal");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_Ville_CodePostal));
            }
            if ((Original_TypeUtilisateur_Id == null)) {
                throw new global::System.ArgumentNullException("Original_TypeUtilisateur_Id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_TypeUtilisateur_Id));
            }
            this.Adapter.DeleteCommand.Parameters[17].Value = ((bool)(Original_Utilisateur_Actif));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string Utilisateur_Nom, 
                    string Utilisateur_Prenom, 
                    string Utilisateur_Photo, 
                    string Utilisateur_Pseudonyme, 
                    string Utilisateur_HashPassword, 
                    System.DateTime Utilisateur_DateNaissance, 
                    string Utilisateur_Rue, 
                    string Utilisateur_Email, 
                    string Utilisateur_TelMobile, 
                    string Utilisateur_Sexe, 
                    System.DateTime Utilisateur_DateInscription, 
                    bool Utilisateur_PremiereConnexion, 
                    string Ville_Nom, 
                    string Ville_CodePostal, 
                    string TypeUtilisateur_Id, 
                    bool Utilisateur_Actif) {
            if ((Utilisateur_Nom == null)) {
                throw new global::System.ArgumentNullException("Utilisateur_Nom");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Utilisateur_Nom));
            }
            if ((Utilisateur_Prenom == null)) {
                throw new global::System.ArgumentNullException("Utilisateur_Prenom");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Utilisateur_Prenom));
            }
            if ((Utilisateur_Photo == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Utilisateur_Photo));
            }
            if ((Utilisateur_Pseudonyme == null)) {
                throw new global::System.ArgumentNullException("Utilisateur_Pseudonyme");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Utilisateur_Pseudonyme));
            }
            if ((Utilisateur_HashPassword == null)) {
                throw new global::System.ArgumentNullException("Utilisateur_HashPassword");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Utilisateur_HashPassword));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(Utilisateur_DateNaissance));
            if ((Utilisateur_Rue == null)) {
                throw new global::System.ArgumentNullException("Utilisateur_Rue");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Utilisateur_Rue));
            }
            if ((Utilisateur_Email == null)) {
                throw new global::System.ArgumentNullException("Utilisateur_Email");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Utilisateur_Email));
            }
            if ((Utilisateur_TelMobile == null)) {
                throw new global::System.ArgumentNullException("Utilisateur_TelMobile");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Utilisateur_TelMobile));
            }
            if ((Utilisateur_Sexe == null)) {
                throw new global::System.ArgumentNullException("Utilisateur_Sexe");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Utilisateur_Sexe));
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(Utilisateur_DateInscription));
            this.Adapter.InsertCommand.Parameters[11].Value = ((bool)(Utilisateur_PremiereConnexion));
            if ((Ville_Nom == null)) {
                throw new global::System.ArgumentNullException("Ville_Nom");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(Ville_Nom));
            }
            if ((Ville_CodePostal == null)) {
                throw new global::System.ArgumentNullException("Ville_CodePostal");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(Ville_CodePostal));
            }
            if ((TypeUtilisateur_Id == null)) {
                throw new global::System.ArgumentNullException("TypeUtilisateur_Id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(TypeUtilisateur_Id));
            }
            this.Adapter.InsertCommand.Parameters[15].Value = ((bool)(Utilisateur_Actif));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Utilisateur_Nom, 
                    string Utilisateur_Prenom, 
                    string Utilisateur_Photo, 
                    string Utilisateur_Pseudonyme, 
                    string Utilisateur_HashPassword, 
                    System.DateTime Utilisateur_DateNaissance, 
                    string Utilisateur_Rue, 
                    string Utilisateur_Email, 
                    string Utilisateur_TelMobile, 
                    string Utilisateur_Sexe, 
                    System.DateTime Utilisateur_DateInscription, 
                    bool Utilisateur_PremiereConnexion, 
                    string Ville_Nom, 
                    string Ville_CodePostal, 
                    string TypeUtilisateur_Id, 
                    bool Utilisateur_Actif, 
                    int Original_Utilisateur_Id, 
                    string Original_Utilisateur_Nom, 
                    string Original_Utilisateur_Prenom, 
                    string Original_Utilisateur_Photo, 
                    string Original_Utilisateur_Pseudonyme, 
                    string Original_Utilisateur_HashPassword, 
                    System.DateTime Original_Utilisateur_DateNaissance, 
                    string Original_Utilisateur_Rue, 
                    string Original_Utilisateur_Email, 
                    string Original_Utilisateur_TelMobile, 
                    string Original_Utilisateur_Sexe, 
                    System.DateTime Original_Utilisateur_DateInscription, 
                    bool Original_Utilisateur_PremiereConnexion, 
                    string Original_Ville_Nom, 
                    string Original_Ville_CodePostal, 
                    string Original_TypeUtilisateur_Id, 
                    bool Original_Utilisateur_Actif, 
                    int Utilisateur_Id) {
            if ((Utilisateur_Nom == null)) {
                throw new global::System.ArgumentNullException("Utilisateur_Nom");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Utilisateur_Nom));
            }
            if ((Utilisateur_Prenom == null)) {
                throw new global::System.ArgumentNullException("Utilisateur_Prenom");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Utilisateur_Prenom));
            }
            if ((Utilisateur_Photo == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Utilisateur_Photo));
            }
            if ((Utilisateur_Pseudonyme == null)) {
                throw new global::System.ArgumentNullException("Utilisateur_Pseudonyme");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Utilisateur_Pseudonyme));
            }
            if ((Utilisateur_HashPassword == null)) {
                throw new global::System.ArgumentNullException("Utilisateur_HashPassword");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Utilisateur_HashPassword));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Utilisateur_DateNaissance));
            if ((Utilisateur_Rue == null)) {
                throw new global::System.ArgumentNullException("Utilisateur_Rue");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Utilisateur_Rue));
            }
            if ((Utilisateur_Email == null)) {
                throw new global::System.ArgumentNullException("Utilisateur_Email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Utilisateur_Email));
            }
            if ((Utilisateur_TelMobile == null)) {
                throw new global::System.ArgumentNullException("Utilisateur_TelMobile");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Utilisateur_TelMobile));
            }
            if ((Utilisateur_Sexe == null)) {
                throw new global::System.ArgumentNullException("Utilisateur_Sexe");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Utilisateur_Sexe));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Utilisateur_DateInscription));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((bool)(Utilisateur_PremiereConnexion));
            if ((Ville_Nom == null)) {
                throw new global::System.ArgumentNullException("Ville_Nom");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Ville_Nom));
            }
            if ((Ville_CodePostal == null)) {
                throw new global::System.ArgumentNullException("Ville_CodePostal");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Ville_CodePostal));
            }
            if ((TypeUtilisateur_Id == null)) {
                throw new global::System.ArgumentNullException("TypeUtilisateur_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(TypeUtilisateur_Id));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((bool)(Utilisateur_Actif));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_Utilisateur_Id));
            if ((Original_Utilisateur_Nom == null)) {
                throw new global::System.ArgumentNullException("Original_Utilisateur_Nom");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_Utilisateur_Nom));
            }
            if ((Original_Utilisateur_Prenom == null)) {
                throw new global::System.ArgumentNullException("Original_Utilisateur_Prenom");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_Utilisateur_Prenom));
            }
            if ((Original_Utilisateur_Photo == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_Utilisateur_Photo));
            }
            if ((Original_Utilisateur_Pseudonyme == null)) {
                throw new global::System.ArgumentNullException("Original_Utilisateur_Pseudonyme");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_Utilisateur_Pseudonyme));
            }
            if ((Original_Utilisateur_HashPassword == null)) {
                throw new global::System.ArgumentNullException("Original_Utilisateur_HashPassword");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_Utilisateur_HashPassword));
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(Original_Utilisateur_DateNaissance));
            if ((Original_Utilisateur_Rue == null)) {
                throw new global::System.ArgumentNullException("Original_Utilisateur_Rue");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_Utilisateur_Rue));
            }
            if ((Original_Utilisateur_Email == null)) {
                throw new global::System.ArgumentNullException("Original_Utilisateur_Email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_Utilisateur_Email));
            }
            if ((Original_Utilisateur_TelMobile == null)) {
                throw new global::System.ArgumentNullException("Original_Utilisateur_TelMobile");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_Utilisateur_TelMobile));
            }
            if ((Original_Utilisateur_Sexe == null)) {
                throw new global::System.ArgumentNullException("Original_Utilisateur_Sexe");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_Utilisateur_Sexe));
            }
            this.Adapter.UpdateCommand.Parameters[28].Value = ((System.DateTime)(Original_Utilisateur_DateInscription));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((bool)(Original_Utilisateur_PremiereConnexion));
            if ((Original_Ville_Nom == null)) {
                throw new global::System.ArgumentNullException("Original_Ville_Nom");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_Ville_Nom));
            }
            if ((Original_Ville_CodePostal == null)) {
                throw new global::System.ArgumentNullException("Original_Ville_CodePostal");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_Ville_CodePostal));
            }
            if ((Original_TypeUtilisateur_Id == null)) {
                throw new global::System.ArgumentNullException("Original_TypeUtilisateur_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_TypeUtilisateur_Id));
            }
            this.Adapter.UpdateCommand.Parameters[33].Value = ((bool)(Original_Utilisateur_Actif));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((int)(Utilisateur_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Utilisateur_Nom, 
                    string Utilisateur_Prenom, 
                    string Utilisateur_Photo, 
                    string Utilisateur_Pseudonyme, 
                    string Utilisateur_HashPassword, 
                    System.DateTime Utilisateur_DateNaissance, 
                    string Utilisateur_Rue, 
                    string Utilisateur_Email, 
                    string Utilisateur_TelMobile, 
                    string Utilisateur_Sexe, 
                    System.DateTime Utilisateur_DateInscription, 
                    bool Utilisateur_PremiereConnexion, 
                    string Ville_Nom, 
                    string Ville_CodePostal, 
                    string TypeUtilisateur_Id, 
                    bool Utilisateur_Actif, 
                    int Original_Utilisateur_Id, 
                    string Original_Utilisateur_Nom, 
                    string Original_Utilisateur_Prenom, 
                    string Original_Utilisateur_Photo, 
                    string Original_Utilisateur_Pseudonyme, 
                    string Original_Utilisateur_HashPassword, 
                    System.DateTime Original_Utilisateur_DateNaissance, 
                    string Original_Utilisateur_Rue, 
                    string Original_Utilisateur_Email, 
                    string Original_Utilisateur_TelMobile, 
                    string Original_Utilisateur_Sexe, 
                    System.DateTime Original_Utilisateur_DateInscription, 
                    bool Original_Utilisateur_PremiereConnexion, 
                    string Original_Ville_Nom, 
                    string Original_Ville_CodePostal, 
                    string Original_TypeUtilisateur_Id, 
                    bool Original_Utilisateur_Actif) {
            return this.Update(Utilisateur_Nom, Utilisateur_Prenom, Utilisateur_Photo, Utilisateur_Pseudonyme, Utilisateur_HashPassword, Utilisateur_DateNaissance, Utilisateur_Rue, Utilisateur_Email, Utilisateur_TelMobile, Utilisateur_Sexe, Utilisateur_DateInscription, Utilisateur_PremiereConnexion, Ville_Nom, Ville_CodePostal, TypeUtilisateur_Id, Utilisateur_Actif, Original_Utilisateur_Id, Original_Utilisateur_Nom, Original_Utilisateur_Prenom, Original_Utilisateur_Photo, Original_Utilisateur_Pseudonyme, Original_Utilisateur_HashPassword, Original_Utilisateur_DateNaissance, Original_Utilisateur_Rue, Original_Utilisateur_Email, Original_Utilisateur_TelMobile, Original_Utilisateur_Sexe, Original_Utilisateur_DateInscription, Original_Utilisateur_PremiereConnexion, Original_Ville_Nom, Original_Ville_CodePostal, Original_TypeUtilisateur_Id, Original_Utilisateur_Actif, Original_Utilisateur_Id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class VEHICULETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public VEHICULETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "VEHICULE";
            tableMapping.ColumnMappings.Add("Vehicule_Id", "Vehicule_Id");
            tableMapping.ColumnMappings.Add("Vehicule_Marque", "Vehicule_Marque");
            tableMapping.ColumnMappings.Add("Vehicule_Modele", "Vehicule_Modele");
            tableMapping.ColumnMappings.Add("Vehicule_Annee", "Vehicule_Annee");
            tableMapping.ColumnMappings.Add("Vehicule_Couleur", "Vehicule_Couleur");
            tableMapping.ColumnMappings.Add("Vehicule_NbPlaces", "Vehicule_NbPlaces");
            tableMapping.ColumnMappings.Add("Vehicule_societe", "Vehicule_societe");
            tableMapping.ColumnMappings.Add("Vehicule_immatriculation", "Vehicule_immatriculation");
            tableMapping.ColumnMappings.Add("Carburant_Id", "Carburant_Id");
            tableMapping.ColumnMappings.Add("Utilisateur_Id", "Utilisateur_Id");
            tableMapping.ColumnMappings.Add("TypeVehicule_Id", "TypeVehicule_Id");
            tableMapping.ColumnMappings.Add("Vehicule_Actif", "Vehicule_Actif");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[VEHICULE] WHERE (([Vehicule_Id] = @Original_Vehicule_Id) AND ([Vehicule_Marque] = @Original_Vehicule_Marque) AND ([Vehicule_Modele] = @Original_Vehicule_Modele) AND ([Vehicule_Annee] = @Original_Vehicule_Annee) AND ([Vehicule_Couleur] = @Original_Vehicule_Couleur) AND ([Vehicule_NbPlaces] = @Original_Vehicule_NbPlaces) AND ([Vehicule_societe] = @Original_Vehicule_societe) AND ([Vehicule_immatriculation] = @Original_Vehicule_immatriculation) AND ([Carburant_Id] = @Original_Carburant_Id) AND ([Utilisateur_Id] = @Original_Utilisateur_Id) AND ([TypeVehicule_Id] = @Original_TypeVehicule_Id) AND ([Vehicule_Actif] = @Original_Vehicule_Actif))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vehicule_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vehicule_Marque", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_Marque", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vehicule_Modele", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_Modele", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vehicule_Annee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_Annee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vehicule_Couleur", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_Couleur", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vehicule_NbPlaces", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_NbPlaces", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vehicule_societe", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_societe", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vehicule_immatriculation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_immatriculation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Carburant_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Carburant_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Utilisateur_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TypeVehicule_Id", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeVehicule_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vehicule_Actif", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_Actif", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[VEHICULE] ([Vehicule_Marque], [Vehicule_Modele], [Vehicule_Annee], [Vehicule_Couleur], [Vehicule_NbPlaces], [Vehicule_societe], [Vehicule_immatriculation], [Carburant_Id], [Utilisateur_Id], [TypeVehicule_Id], [Vehicule_Actif]) VALUES (@Vehicule_Marque, @Vehicule_Modele, @Vehicule_Annee, @Vehicule_Couleur, @Vehicule_NbPlaces, @Vehicule_societe, @Vehicule_immatriculation, @Carburant_Id, @Utilisateur_Id, @TypeVehicule_Id, @Vehicule_Actif);
SELECT Vehicule_Id, Vehicule_Marque, Vehicule_Modele, Vehicule_Annee, Vehicule_Couleur, Vehicule_NbPlaces, Vehicule_societe, Vehicule_immatriculation, Carburant_Id, Utilisateur_Id, TypeVehicule_Id, Vehicule_Actif FROM VEHICULE WHERE (Vehicule_Id = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vehicule_Marque", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_Marque", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vehicule_Modele", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_Modele", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vehicule_Annee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_Annee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vehicule_Couleur", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_Couleur", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vehicule_NbPlaces", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_NbPlaces", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vehicule_societe", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_societe", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vehicule_immatriculation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_immatriculation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Carburant_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Carburant_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Utilisateur_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TypeVehicule_Id", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeVehicule_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vehicule_Actif", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_Actif", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[VEHICULE] SET [Vehicule_Marque] = @Vehicule_Marque, [Vehicule_Modele] = @Vehicule_Modele, [Vehicule_Annee] = @Vehicule_Annee, [Vehicule_Couleur] = @Vehicule_Couleur, [Vehicule_NbPlaces] = @Vehicule_NbPlaces, [Vehicule_societe] = @Vehicule_societe, [Vehicule_immatriculation] = @Vehicule_immatriculation, [Carburant_Id] = @Carburant_Id, [Utilisateur_Id] = @Utilisateur_Id, [TypeVehicule_Id] = @TypeVehicule_Id, [Vehicule_Actif] = @Vehicule_Actif WHERE (([Vehicule_Id] = @Original_Vehicule_Id) AND ([Vehicule_Marque] = @Original_Vehicule_Marque) AND ([Vehicule_Modele] = @Original_Vehicule_Modele) AND ([Vehicule_Annee] = @Original_Vehicule_Annee) AND ([Vehicule_Couleur] = @Original_Vehicule_Couleur) AND ([Vehicule_NbPlaces] = @Original_Vehicule_NbPlaces) AND ([Vehicule_societe] = @Original_Vehicule_societe) AND ([Vehicule_immatriculation] = @Original_Vehicule_immatriculation) AND ([Carburant_Id] = @Original_Carburant_Id) AND ([Utilisateur_Id] = @Original_Utilisateur_Id) AND ([TypeVehicule_Id] = @Original_TypeVehicule_Id) AND ([Vehicule_Actif] = @Original_Vehicule_Actif));
SELECT Vehicule_Id, Vehicule_Marque, Vehicule_Modele, Vehicule_Annee, Vehicule_Couleur, Vehicule_NbPlaces, Vehicule_societe, Vehicule_immatriculation, Carburant_Id, Utilisateur_Id, TypeVehicule_Id, Vehicule_Actif FROM VEHICULE WHERE (Vehicule_Id = @Vehicule_Id)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vehicule_Marque", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_Marque", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vehicule_Modele", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_Modele", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vehicule_Annee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_Annee", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vehicule_Couleur", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_Couleur", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vehicule_NbPlaces", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_NbPlaces", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vehicule_societe", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_societe", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vehicule_immatriculation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_immatriculation", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Carburant_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Carburant_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Utilisateur_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TypeVehicule_Id", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeVehicule_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vehicule_Actif", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_Actif", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vehicule_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vehicule_Marque", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_Marque", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vehicule_Modele", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_Modele", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vehicule_Annee", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_Annee", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vehicule_Couleur", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_Couleur", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vehicule_NbPlaces", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_NbPlaces", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vehicule_societe", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_societe", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vehicule_immatriculation", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_immatriculation", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Carburant_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Carburant_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Utilisateur_Id", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Utilisateur_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TypeVehicule_Id", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TypeVehicule_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vehicule_Actif", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_Actif", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vehicule_Id", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Vehicule_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GSBCarpooling.Properties.Settings.Default.gsbcarpoolingConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Vehicule_Id, Vehicule_Marque, Vehicule_Modele, Vehicule_Annee, Vehicule_Co" +
                "uleur, Vehicule_NbPlaces, Vehicule_societe, Vehicule_immatriculation, Carburant_" +
                "Id, Utilisateur_Id, TypeVehicule_Id, Vehicule_Actif FROM dbo.VEHICULE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(gsbcarpoolingDataSet.VEHICULEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual gsbcarpoolingDataSet.VEHICULEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            gsbcarpoolingDataSet.VEHICULEDataTable dataTable = new gsbcarpoolingDataSet.VEHICULEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gsbcarpoolingDataSet.VEHICULEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gsbcarpoolingDataSet dataSet) {
            return this.Adapter.Update(dataSet, "VEHICULE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Vehicule_Id, string Original_Vehicule_Marque, string Original_Vehicule_Modele, int Original_Vehicule_Annee, string Original_Vehicule_Couleur, byte Original_Vehicule_NbPlaces, bool Original_Vehicule_societe, string Original_Vehicule_immatriculation, string Original_Carburant_Id, int Original_Utilisateur_Id, byte Original_TypeVehicule_Id, bool Original_Vehicule_Actif) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Vehicule_Id));
            if ((Original_Vehicule_Marque == null)) {
                throw new global::System.ArgumentNullException("Original_Vehicule_Marque");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Vehicule_Marque));
            }
            if ((Original_Vehicule_Modele == null)) {
                throw new global::System.ArgumentNullException("Original_Vehicule_Modele");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Vehicule_Modele));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_Vehicule_Annee));
            if ((Original_Vehicule_Couleur == null)) {
                throw new global::System.ArgumentNullException("Original_Vehicule_Couleur");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Vehicule_Couleur));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((byte)(Original_Vehicule_NbPlaces));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((bool)(Original_Vehicule_societe));
            if ((Original_Vehicule_immatriculation == null)) {
                throw new global::System.ArgumentNullException("Original_Vehicule_immatriculation");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Vehicule_immatriculation));
            }
            if ((Original_Carburant_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Carburant_Id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Carburant_Id));
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_Utilisateur_Id));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((byte)(Original_TypeVehicule_Id));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((bool)(Original_Vehicule_Actif));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Vehicule_Marque, string Vehicule_Modele, int Vehicule_Annee, string Vehicule_Couleur, byte Vehicule_NbPlaces, bool Vehicule_societe, string Vehicule_immatriculation, string Carburant_Id, int Utilisateur_Id, byte TypeVehicule_Id, bool Vehicule_Actif) {
            if ((Vehicule_Marque == null)) {
                throw new global::System.ArgumentNullException("Vehicule_Marque");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Vehicule_Marque));
            }
            if ((Vehicule_Modele == null)) {
                throw new global::System.ArgumentNullException("Vehicule_Modele");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Vehicule_Modele));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Vehicule_Annee));
            if ((Vehicule_Couleur == null)) {
                throw new global::System.ArgumentNullException("Vehicule_Couleur");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Vehicule_Couleur));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((byte)(Vehicule_NbPlaces));
            this.Adapter.InsertCommand.Parameters[5].Value = ((bool)(Vehicule_societe));
            if ((Vehicule_immatriculation == null)) {
                throw new global::System.ArgumentNullException("Vehicule_immatriculation");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Vehicule_immatriculation));
            }
            if ((Carburant_Id == null)) {
                throw new global::System.ArgumentNullException("Carburant_Id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Carburant_Id));
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((int)(Utilisateur_Id));
            this.Adapter.InsertCommand.Parameters[9].Value = ((byte)(TypeVehicule_Id));
            this.Adapter.InsertCommand.Parameters[10].Value = ((bool)(Vehicule_Actif));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Vehicule_Marque, 
                    string Vehicule_Modele, 
                    int Vehicule_Annee, 
                    string Vehicule_Couleur, 
                    byte Vehicule_NbPlaces, 
                    bool Vehicule_societe, 
                    string Vehicule_immatriculation, 
                    string Carburant_Id, 
                    int Utilisateur_Id, 
                    byte TypeVehicule_Id, 
                    bool Vehicule_Actif, 
                    int Original_Vehicule_Id, 
                    string Original_Vehicule_Marque, 
                    string Original_Vehicule_Modele, 
                    int Original_Vehicule_Annee, 
                    string Original_Vehicule_Couleur, 
                    byte Original_Vehicule_NbPlaces, 
                    bool Original_Vehicule_societe, 
                    string Original_Vehicule_immatriculation, 
                    string Original_Carburant_Id, 
                    int Original_Utilisateur_Id, 
                    byte Original_TypeVehicule_Id, 
                    bool Original_Vehicule_Actif, 
                    int Vehicule_Id) {
            if ((Vehicule_Marque == null)) {
                throw new global::System.ArgumentNullException("Vehicule_Marque");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Vehicule_Marque));
            }
            if ((Vehicule_Modele == null)) {
                throw new global::System.ArgumentNullException("Vehicule_Modele");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Vehicule_Modele));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Vehicule_Annee));
            if ((Vehicule_Couleur == null)) {
                throw new global::System.ArgumentNullException("Vehicule_Couleur");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Vehicule_Couleur));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((byte)(Vehicule_NbPlaces));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(Vehicule_societe));
            if ((Vehicule_immatriculation == null)) {
                throw new global::System.ArgumentNullException("Vehicule_immatriculation");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Vehicule_immatriculation));
            }
            if ((Carburant_Id == null)) {
                throw new global::System.ArgumentNullException("Carburant_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Carburant_Id));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Utilisateur_Id));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((byte)(TypeVehicule_Id));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(Vehicule_Actif));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_Vehicule_Id));
            if ((Original_Vehicule_Marque == null)) {
                throw new global::System.ArgumentNullException("Original_Vehicule_Marque");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Vehicule_Marque));
            }
            if ((Original_Vehicule_Modele == null)) {
                throw new global::System.ArgumentNullException("Original_Vehicule_Modele");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_Vehicule_Modele));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(Original_Vehicule_Annee));
            if ((Original_Vehicule_Couleur == null)) {
                throw new global::System.ArgumentNullException("Original_Vehicule_Couleur");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_Vehicule_Couleur));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((byte)(Original_Vehicule_NbPlaces));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((bool)(Original_Vehicule_societe));
            if ((Original_Vehicule_immatriculation == null)) {
                throw new global::System.ArgumentNullException("Original_Vehicule_immatriculation");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_Vehicule_immatriculation));
            }
            if ((Original_Carburant_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Carburant_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_Carburant_Id));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((int)(Original_Utilisateur_Id));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((byte)(Original_TypeVehicule_Id));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((bool)(Original_Vehicule_Actif));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(Vehicule_Id));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Vehicule_Marque, 
                    string Vehicule_Modele, 
                    int Vehicule_Annee, 
                    string Vehicule_Couleur, 
                    byte Vehicule_NbPlaces, 
                    bool Vehicule_societe, 
                    string Vehicule_immatriculation, 
                    string Carburant_Id, 
                    int Utilisateur_Id, 
                    byte TypeVehicule_Id, 
                    bool Vehicule_Actif, 
                    int Original_Vehicule_Id, 
                    string Original_Vehicule_Marque, 
                    string Original_Vehicule_Modele, 
                    int Original_Vehicule_Annee, 
                    string Original_Vehicule_Couleur, 
                    byte Original_Vehicule_NbPlaces, 
                    bool Original_Vehicule_societe, 
                    string Original_Vehicule_immatriculation, 
                    string Original_Carburant_Id, 
                    int Original_Utilisateur_Id, 
                    byte Original_TypeVehicule_Id, 
                    bool Original_Vehicule_Actif) {
            return this.Update(Vehicule_Marque, Vehicule_Modele, Vehicule_Annee, Vehicule_Couleur, Vehicule_NbPlaces, Vehicule_societe, Vehicule_immatriculation, Carburant_Id, Utilisateur_Id, TypeVehicule_Id, Vehicule_Actif, Original_Vehicule_Id, Original_Vehicule_Marque, Original_Vehicule_Modele, Original_Vehicule_Annee, Original_Vehicule_Couleur, Original_Vehicule_NbPlaces, Original_Vehicule_societe, Original_Vehicule_immatriculation, Original_Carburant_Id, Original_Utilisateur_Id, Original_TypeVehicule_Id, Original_Vehicule_Actif, Original_Vehicule_Id);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class VILLETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public VILLETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "VILLE";
            tableMapping.ColumnMappings.Add("Ville_Nom", "Ville_Nom");
            tableMapping.ColumnMappings.Add("Ville_CodePostal", "Ville_CodePostal");
            tableMapping.ColumnMappings.Add("Ville_Latitude", "Ville_Latitude");
            tableMapping.ColumnMappings.Add("Ville_Longitude", "Ville_Longitude");
            tableMapping.ColumnMappings.Add("Pays_Id", "Pays_Id");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[VILLE] WHERE (([Ville_Nom] = @Original_Ville_Nom) AND ([Ville_CodePostal] = @Original_Ville_CodePostal) AND ([Ville_Latitude] = @Original_Ville_Latitude) AND ([Ville_Longitude] = @Original_Ville_Longitude) AND ([Pays_Id] = @Original_Pays_Id))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ville_Nom", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ville_Nom", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ville_CodePostal", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ville_CodePostal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ville_Latitude", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ville_Latitude", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ville_Longitude", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ville_Longitude", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pays_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pays_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[VILLE] ([Ville_Nom], [Ville_CodePostal], [Ville_Latitude], [Ville_Longitude], [Pays_Id]) VALUES (@Ville_Nom, @Ville_CodePostal, @Ville_Latitude, @Ville_Longitude, @Pays_Id);
SELECT Ville_Nom, Ville_CodePostal, Ville_Latitude, Ville_Longitude, Pays_Id FROM VILLE WHERE (Ville_CodePostal = @Ville_CodePostal) AND (Ville_Nom = @Ville_Nom)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ville_Nom", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ville_Nom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ville_CodePostal", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ville_CodePostal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ville_Latitude", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ville_Latitude", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ville_Longitude", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ville_Longitude", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pays_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pays_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[VILLE] SET [Ville_Nom] = @Ville_Nom, [Ville_CodePostal] = @Ville_CodePostal, [Ville_Latitude] = @Ville_Latitude, [Ville_Longitude] = @Ville_Longitude, [Pays_Id] = @Pays_Id WHERE (([Ville_Nom] = @Original_Ville_Nom) AND ([Ville_CodePostal] = @Original_Ville_CodePostal) AND ([Ville_Latitude] = @Original_Ville_Latitude) AND ([Ville_Longitude] = @Original_Ville_Longitude) AND ([Pays_Id] = @Original_Pays_Id));
SELECT Ville_Nom, Ville_CodePostal, Ville_Latitude, Ville_Longitude, Pays_Id FROM VILLE WHERE (Ville_CodePostal = @Ville_CodePostal) AND (Ville_Nom = @Ville_Nom)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ville_Nom", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ville_Nom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ville_CodePostal", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ville_CodePostal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ville_Latitude", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ville_Latitude", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ville_Longitude", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ville_Longitude", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pays_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pays_Id", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ville_Nom", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ville_Nom", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ville_CodePostal", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ville_CodePostal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ville_Latitude", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ville_Latitude", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ville_Longitude", global::System.Data.SqlDbType.Real, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Ville_Longitude", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pays_Id", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pays_Id", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GSBCarpooling.Properties.Settings.Default.gsbcarpoolingConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Ville_Nom, Ville_CodePostal, Ville_Latitude, Ville_Longitude, Pays_Id FROM" +
                " dbo.VILLE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(gsbcarpoolingDataSet.VILLEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual gsbcarpoolingDataSet.VILLEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            gsbcarpoolingDataSet.VILLEDataTable dataTable = new gsbcarpoolingDataSet.VILLEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gsbcarpoolingDataSet.VILLEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(gsbcarpoolingDataSet dataSet) {
            return this.Adapter.Update(dataSet, "VILLE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_Ville_Nom, string Original_Ville_CodePostal, float Original_Ville_Latitude, float Original_Ville_Longitude, string Original_Pays_Id) {
            if ((Original_Ville_Nom == null)) {
                throw new global::System.ArgumentNullException("Original_Ville_Nom");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_Ville_Nom));
            }
            if ((Original_Ville_CodePostal == null)) {
                throw new global::System.ArgumentNullException("Original_Ville_CodePostal");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Ville_CodePostal));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((float)(Original_Ville_Latitude));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((float)(Original_Ville_Longitude));
            if ((Original_Pays_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Pays_Id");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Pays_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Ville_Nom, string Ville_CodePostal, float Ville_Latitude, float Ville_Longitude, string Pays_Id) {
            if ((Ville_Nom == null)) {
                throw new global::System.ArgumentNullException("Ville_Nom");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Ville_Nom));
            }
            if ((Ville_CodePostal == null)) {
                throw new global::System.ArgumentNullException("Ville_CodePostal");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Ville_CodePostal));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((float)(Ville_Latitude));
            this.Adapter.InsertCommand.Parameters[3].Value = ((float)(Ville_Longitude));
            if ((Pays_Id == null)) {
                throw new global::System.ArgumentNullException("Pays_Id");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Pays_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Ville_Nom, string Ville_CodePostal, float Ville_Latitude, float Ville_Longitude, string Pays_Id, string Original_Ville_Nom, string Original_Ville_CodePostal, float Original_Ville_Latitude, float Original_Ville_Longitude, string Original_Pays_Id) {
            if ((Ville_Nom == null)) {
                throw new global::System.ArgumentNullException("Ville_Nom");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Ville_Nom));
            }
            if ((Ville_CodePostal == null)) {
                throw new global::System.ArgumentNullException("Ville_CodePostal");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Ville_CodePostal));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((float)(Ville_Latitude));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((float)(Ville_Longitude));
            if ((Pays_Id == null)) {
                throw new global::System.ArgumentNullException("Pays_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Pays_Id));
            }
            if ((Original_Ville_Nom == null)) {
                throw new global::System.ArgumentNullException("Original_Ville_Nom");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_Ville_Nom));
            }
            if ((Original_Ville_CodePostal == null)) {
                throw new global::System.ArgumentNullException("Original_Ville_CodePostal");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Ville_CodePostal));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((float)(Original_Ville_Latitude));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((float)(Original_Ville_Longitude));
            if ((Original_Pays_Id == null)) {
                throw new global::System.ArgumentNullException("Original_Pays_Id");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_Pays_Id));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(float Ville_Latitude, float Ville_Longitude, string Pays_Id, string Original_Ville_Nom, string Original_Ville_CodePostal, float Original_Ville_Latitude, float Original_Ville_Longitude, string Original_Pays_Id) {
            return this.Update(Original_Ville_Nom, Original_Ville_CodePostal, Ville_Latitude, Ville_Longitude, Pays_Id, Original_Ville_Nom, Original_Ville_CodePostal, Original_Ville_Latitude, Original_Ville_Longitude, Original_Pays_Id);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private CARBURANTTableAdapter _cARBURANTTableAdapter;
        
        private ETAPETableAdapter _eTAPETableAdapter;
        
        private PAYSTableAdapter _pAYSTableAdapter;
        
        private PROPOSERTableAdapter _pROPOSERTableAdapter;
        
        private RESERVERTableAdapter _rESERVERTableAdapter;
        
        private TRAJETTableAdapter _tRAJETTableAdapter;
        
        private TYPE_UTILISATEURTableAdapter _tYPE_UTILISATEURTableAdapter;
        
        private TYPE_VEHICULETableAdapter _tYPE_VEHICULETableAdapter;
        
        private UTILISATEURTableAdapter _uTILISATEURTableAdapter;
        
        private VEHICULETableAdapter _vEHICULETableAdapter;
        
        private VILLETableAdapter _vILLETableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public CARBURANTTableAdapter CARBURANTTableAdapter {
            get {
                return this._cARBURANTTableAdapter;
            }
            set {
                this._cARBURANTTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ETAPETableAdapter ETAPETableAdapter {
            get {
                return this._eTAPETableAdapter;
            }
            set {
                this._eTAPETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public PAYSTableAdapter PAYSTableAdapter {
            get {
                return this._pAYSTableAdapter;
            }
            set {
                this._pAYSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public PROPOSERTableAdapter PROPOSERTableAdapter {
            get {
                return this._pROPOSERTableAdapter;
            }
            set {
                this._pROPOSERTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public RESERVERTableAdapter RESERVERTableAdapter {
            get {
                return this._rESERVERTableAdapter;
            }
            set {
                this._rESERVERTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TRAJETTableAdapter TRAJETTableAdapter {
            get {
                return this._tRAJETTableAdapter;
            }
            set {
                this._tRAJETTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TYPE_UTILISATEURTableAdapter TYPE_UTILISATEURTableAdapter {
            get {
                return this._tYPE_UTILISATEURTableAdapter;
            }
            set {
                this._tYPE_UTILISATEURTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TYPE_VEHICULETableAdapter TYPE_VEHICULETableAdapter {
            get {
                return this._tYPE_VEHICULETableAdapter;
            }
            set {
                this._tYPE_VEHICULETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public UTILISATEURTableAdapter UTILISATEURTableAdapter {
            get {
                return this._uTILISATEURTableAdapter;
            }
            set {
                this._uTILISATEURTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public VEHICULETableAdapter VEHICULETableAdapter {
            get {
                return this._vEHICULETableAdapter;
            }
            set {
                this._vEHICULETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public VILLETableAdapter VILLETableAdapter {
            get {
                return this._vILLETableAdapter;
            }
            set {
                this._vILLETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._cARBURANTTableAdapter != null) 
                            && (this._cARBURANTTableAdapter.Connection != null))) {
                    return this._cARBURANTTableAdapter.Connection;
                }
                if (((this._eTAPETableAdapter != null) 
                            && (this._eTAPETableAdapter.Connection != null))) {
                    return this._eTAPETableAdapter.Connection;
                }
                if (((this._pAYSTableAdapter != null) 
                            && (this._pAYSTableAdapter.Connection != null))) {
                    return this._pAYSTableAdapter.Connection;
                }
                if (((this._pROPOSERTableAdapter != null) 
                            && (this._pROPOSERTableAdapter.Connection != null))) {
                    return this._pROPOSERTableAdapter.Connection;
                }
                if (((this._rESERVERTableAdapter != null) 
                            && (this._rESERVERTableAdapter.Connection != null))) {
                    return this._rESERVERTableAdapter.Connection;
                }
                if (((this._tRAJETTableAdapter != null) 
                            && (this._tRAJETTableAdapter.Connection != null))) {
                    return this._tRAJETTableAdapter.Connection;
                }
                if (((this._tYPE_UTILISATEURTableAdapter != null) 
                            && (this._tYPE_UTILISATEURTableAdapter.Connection != null))) {
                    return this._tYPE_UTILISATEURTableAdapter.Connection;
                }
                if (((this._tYPE_VEHICULETableAdapter != null) 
                            && (this._tYPE_VEHICULETableAdapter.Connection != null))) {
                    return this._tYPE_VEHICULETableAdapter.Connection;
                }
                if (((this._uTILISATEURTableAdapter != null) 
                            && (this._uTILISATEURTableAdapter.Connection != null))) {
                    return this._uTILISATEURTableAdapter.Connection;
                }
                if (((this._vEHICULETableAdapter != null) 
                            && (this._vEHICULETableAdapter.Connection != null))) {
                    return this._vEHICULETableAdapter.Connection;
                }
                if (((this._vILLETableAdapter != null) 
                            && (this._vILLETableAdapter.Connection != null))) {
                    return this._vILLETableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._cARBURANTTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._eTAPETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._pAYSTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._pROPOSERTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._rESERVERTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tRAJETTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tYPE_UTILISATEURTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tYPE_VEHICULETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._uTILISATEURTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._vEHICULETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._vILLETableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(gsbcarpoolingDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._pAYSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PAYS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pAYSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tYPE_UTILISATEURTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TYPE_UTILISATEUR.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tYPE_UTILISATEURTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._vILLETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.VILLE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._vILLETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cARBURANTTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CARBURANT.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cARBURANTTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tYPE_VEHICULETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TYPE_VEHICULE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tYPE_VEHICULETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._uTILISATEURTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.UTILISATEUR.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._uTILISATEURTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._vEHICULETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.VEHICULE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._vEHICULETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tRAJETTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TRAJET.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tRAJETTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._eTAPETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ETAPE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._eTAPETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._pROPOSERTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PROPOSER.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pROPOSERTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._rESERVERTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.RESERVER.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._rESERVERTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(gsbcarpoolingDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._pAYSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PAYS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pAYSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tYPE_UTILISATEURTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TYPE_UTILISATEUR.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tYPE_UTILISATEURTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._vILLETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.VILLE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._vILLETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cARBURANTTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CARBURANT.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cARBURANTTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tYPE_VEHICULETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TYPE_VEHICULE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tYPE_VEHICULETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._uTILISATEURTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.UTILISATEUR.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._uTILISATEURTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._vEHICULETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.VEHICULE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._vEHICULETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tRAJETTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TRAJET.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tRAJETTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._eTAPETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ETAPE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._eTAPETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._pROPOSERTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PROPOSER.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pROPOSERTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._rESERVERTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.RESERVER.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._rESERVERTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(gsbcarpoolingDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._rESERVERTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.RESERVER.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._rESERVERTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._pROPOSERTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PROPOSER.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pROPOSERTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._eTAPETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ETAPE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._eTAPETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tRAJETTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TRAJET.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tRAJETTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._vEHICULETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.VEHICULE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._vEHICULETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._uTILISATEURTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.UTILISATEUR.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._uTILISATEURTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tYPE_VEHICULETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TYPE_VEHICULE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tYPE_VEHICULETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cARBURANTTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CARBURANT.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cARBURANTTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._vILLETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.VILLE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._vILLETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tYPE_UTILISATEURTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TYPE_UTILISATEUR.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tYPE_UTILISATEURTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._pAYSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PAYS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pAYSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(gsbcarpoolingDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._cARBURANTTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cARBURANTTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._eTAPETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._eTAPETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._pAYSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pAYSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._pROPOSERTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pROPOSERTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._rESERVERTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._rESERVERTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._tRAJETTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tRAJETTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._tYPE_UTILISATEURTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tYPE_UTILISATEURTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._tYPE_VEHICULETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tYPE_VEHICULETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._uTILISATEURTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._uTILISATEURTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._vEHICULETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._vEHICULETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._vILLETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._vILLETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager ne contient pas d\'informations de connexion. Définissez chaqu" +
                        "e propriété TableAdapterManager TableAdapter à une instance valide de TableAdapt" +
                        "er.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("La transaction ne peut pas commencer. La connexion de données actuelle ne prend p" +
                        "as en charge les transactions ou l\'état actuel n\'autorise pas le début de la tra" +
                        "nsaction.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._cARBURANTTableAdapter != null)) {
                    revertConnections.Add(this._cARBURANTTableAdapter, this._cARBURANTTableAdapter.Connection);
                    this._cARBURANTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._cARBURANTTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._cARBURANTTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cARBURANTTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cARBURANTTableAdapter.Adapter);
                    }
                }
                if ((this._eTAPETableAdapter != null)) {
                    revertConnections.Add(this._eTAPETableAdapter, this._eTAPETableAdapter.Connection);
                    this._eTAPETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._eTAPETableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._eTAPETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._eTAPETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._eTAPETableAdapter.Adapter);
                    }
                }
                if ((this._pAYSTableAdapter != null)) {
                    revertConnections.Add(this._pAYSTableAdapter, this._pAYSTableAdapter.Connection);
                    this._pAYSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._pAYSTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._pAYSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pAYSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pAYSTableAdapter.Adapter);
                    }
                }
                if ((this._pROPOSERTableAdapter != null)) {
                    revertConnections.Add(this._pROPOSERTableAdapter, this._pROPOSERTableAdapter.Connection);
                    this._pROPOSERTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._pROPOSERTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._pROPOSERTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pROPOSERTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pROPOSERTableAdapter.Adapter);
                    }
                }
                if ((this._rESERVERTableAdapter != null)) {
                    revertConnections.Add(this._rESERVERTableAdapter, this._rESERVERTableAdapter.Connection);
                    this._rESERVERTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._rESERVERTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._rESERVERTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._rESERVERTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._rESERVERTableAdapter.Adapter);
                    }
                }
                if ((this._tRAJETTableAdapter != null)) {
                    revertConnections.Add(this._tRAJETTableAdapter, this._tRAJETTableAdapter.Connection);
                    this._tRAJETTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tRAJETTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tRAJETTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tRAJETTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tRAJETTableAdapter.Adapter);
                    }
                }
                if ((this._tYPE_UTILISATEURTableAdapter != null)) {
                    revertConnections.Add(this._tYPE_UTILISATEURTableAdapter, this._tYPE_UTILISATEURTableAdapter.Connection);
                    this._tYPE_UTILISATEURTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tYPE_UTILISATEURTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tYPE_UTILISATEURTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tYPE_UTILISATEURTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tYPE_UTILISATEURTableAdapter.Adapter);
                    }
                }
                if ((this._tYPE_VEHICULETableAdapter != null)) {
                    revertConnections.Add(this._tYPE_VEHICULETableAdapter, this._tYPE_VEHICULETableAdapter.Connection);
                    this._tYPE_VEHICULETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tYPE_VEHICULETableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tYPE_VEHICULETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tYPE_VEHICULETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tYPE_VEHICULETableAdapter.Adapter);
                    }
                }
                if ((this._uTILISATEURTableAdapter != null)) {
                    revertConnections.Add(this._uTILISATEURTableAdapter, this._uTILISATEURTableAdapter.Connection);
                    this._uTILISATEURTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._uTILISATEURTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._uTILISATEURTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._uTILISATEURTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._uTILISATEURTableAdapter.Adapter);
                    }
                }
                if ((this._vEHICULETableAdapter != null)) {
                    revertConnections.Add(this._vEHICULETableAdapter, this._vEHICULETableAdapter.Connection);
                    this._vEHICULETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._vEHICULETableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._vEHICULETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._vEHICULETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._vEHICULETableAdapter.Adapter);
                    }
                }
                if ((this._vILLETableAdapter != null)) {
                    revertConnections.Add(this._vILLETableAdapter, this._vILLETableAdapter.Connection);
                    this._vILLETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._vILLETableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._vILLETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._vILLETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._vILLETableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._cARBURANTTableAdapter != null)) {
                    this._cARBURANTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._cARBURANTTableAdapter]));
                    this._cARBURANTTableAdapter.Transaction = null;
                }
                if ((this._eTAPETableAdapter != null)) {
                    this._eTAPETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._eTAPETableAdapter]));
                    this._eTAPETableAdapter.Transaction = null;
                }
                if ((this._pAYSTableAdapter != null)) {
                    this._pAYSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._pAYSTableAdapter]));
                    this._pAYSTableAdapter.Transaction = null;
                }
                if ((this._pROPOSERTableAdapter != null)) {
                    this._pROPOSERTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._pROPOSERTableAdapter]));
                    this._pROPOSERTableAdapter.Transaction = null;
                }
                if ((this._rESERVERTableAdapter != null)) {
                    this._rESERVERTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._rESERVERTableAdapter]));
                    this._rESERVERTableAdapter.Transaction = null;
                }
                if ((this._tRAJETTableAdapter != null)) {
                    this._tRAJETTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tRAJETTableAdapter]));
                    this._tRAJETTableAdapter.Transaction = null;
                }
                if ((this._tYPE_UTILISATEURTableAdapter != null)) {
                    this._tYPE_UTILISATEURTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tYPE_UTILISATEURTableAdapter]));
                    this._tYPE_UTILISATEURTableAdapter.Transaction = null;
                }
                if ((this._tYPE_VEHICULETableAdapter != null)) {
                    this._tYPE_VEHICULETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tYPE_VEHICULETableAdapter]));
                    this._tYPE_VEHICULETableAdapter.Transaction = null;
                }
                if ((this._uTILISATEURTableAdapter != null)) {
                    this._uTILISATEURTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._uTILISATEURTableAdapter]));
                    this._uTILISATEURTableAdapter.Transaction = null;
                }
                if ((this._vEHICULETableAdapter != null)) {
                    this._vEHICULETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._vEHICULETableAdapter]));
                    this._vEHICULETableAdapter.Transaction = null;
                }
                if ((this._vILLETableAdapter != null)) {
                    this._vILLETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._vILLETableAdapter]));
                    this._vILLETableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591